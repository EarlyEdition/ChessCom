window.chesscom = window.chesscom || {},
window.chesscom.routes = window.chesscom.routes || {},
Object.assign(window.chesscom.routes, {
    web_game_get_gif_url: {
        tokens: [["variable", "/", "[^/]++", "id"], ["variable", "/", "daily|live", "type"], ["text", "/callback/game/gif"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            type: "daily|live",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_game_callback_create_dyn_gif_url: {
        tokens: [["text", "/callback/game/dyn-gif"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_tinymce_get_chessdiagram: {
        tokens: [["text", "/tinymce/api/get_diagram"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|admin"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|admin", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_analysis_game_callback_view: {
        tokens: [["variable", "/", "[^/]++", "uuid"], ["text", "/callback/analysis"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_membership: {
        tokens: [["text", "/membership"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_membership: {
        tokens: [["text", "/membership"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_friend_request_callback: {
        tokens: [["variable", "/", "[^/]++", "user"], ["text", "/callback/friend/request"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_friend_accept_request_callback: {
        tokens: [["variable", "/", "[^/]++", "user"], ["text", "/callback/friend/accept"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["PUT"],
        schemes: ["https"]
    },
    web_member_callback_block_member: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/member/block"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_friend_cancel_request_callback: {
        tokens: [["variable", "/", "[^/]++", "user"], ["text", "/callback/friend/cancel/request"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_valid_username: {
        tokens: [["text", "/callback/user/valid"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_user_callback_valid_username: {
        tokens: [["text", "/callback/user/valid"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_friend_decline_request_callback: {
        tokens: [["variable", "/", "[^/]++", "user"], ["text", "/callback/friend/decline/request"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_friend_delete_callback: {
        tokens: [["variable", "/", "[^/]++", "user"], ["text", "/callback/friend/delete"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_user_callback_dismiss_follow_suggestion: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/user/dismiss_follow"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_report_reasons: {
        tokens: [["text", "/callback/report-user"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_member_view: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/member"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_member_view: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/member"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    pubapi_player_profile: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/pub/player"]],
        defaults: [],
        requirements: [],
        hosttokens: [["text", "api.chess-dev.com"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_callback_follow_suggestions: {
        tokens: [["text", "/callback/user/follow_suggestions"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_friend_callback_friends_search: {
        tokens: [["text", "/search"], ["variable", "/", "[^/]++", "user"], ["text", "/callback/friends"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_callback_recent_opponents: {
        tokens: [["text", "/callback/recent/opponents"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_security_callback_user_roles: {
        tokens: [["text", "/callback/security/user/roles"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_callback_popup: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/user/popup"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_guest_update_skill_level: {
        tokens: [["text", "/guest/update-skill-level"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_set_archive_view: {
        tokens: [["text", "/callback/user/archive-view"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_set_fair_play_agree: {
        tokens: [["variable", "/", "1|0", "fairPlayAgree"], ["text", "/callback/user/set-fair-play-agree"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            fairPlayAgree: "1|0",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_set_home_recent_content_type: {
        tokens: [["text", "/callback/user/home-recent-content-type"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_member_callback_track_member: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/member/track"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_member_callback_unblock_member: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/member/unblock"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_member_callback_untrack_member: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/member/untrack"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_openings_view: {
        tokens: [["variable", "/", "[^/]++", "cleanUrl"], ["text", "/openings"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_openings_view: {
        tokens: [["variable", "/", "[^/]++", "cleanUrl"], ["text", "/openings"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_security_register: {
        tokens: [["text", "/register"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    i18n_web_security_register: {
        tokens: [["text", "/register"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_security_login_and_go: {
        tokens: [["text", "/login_and_go"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_security_login_and_go: {
        tokens: [["text", "/login_and_go"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_themes_data_callback: {
        tokens: [["text", "/callback/themes/data"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_animation_type: {
        tokens: [["text", "/callback/settings/user/email/animationType"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_board_color: {
        tokens: [["text", "/callback/settings/user/email/boardColor"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_coordinates: {
        tokens: [["text", "/callback/settings/user/email/coordinates"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_callback_dark_mode_toggle: {
        tokens: [["text", "/callback/settings/user/darkModeToggle"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_show_legal_moves_toggle: {
        tokens: [["text", "/callback/settings/user/email/showLegalMovesToggle"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_highlight_last_move_toggle: {
        tokens: [["text", "/callback/settings/user/email/highlightLastMoveToggle"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_is_white_on_bottom_toggle: {
        tokens: [["text", "/callback/settings/user/email/isWhiteOnBottom"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_move_list_display_type: {
        tokens: [["text", "/callback/settings/user/email/moveListDisplayType"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_move_method: {
        tokens: [["text", "/callback/settings/user/email/moveMethod"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_piece: {
        tokens: [["text", "/callback/settings/user/email/pieceStyle"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_sound_toggle: {
        tokens: [["text", "/callback/settings/user/email/soundToggle"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_show_timestamps: {
        tokens: [["text", "/callback/settings/user/email/showTimestamps"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_game_settings_email_callback_sound_theme: {
        tokens: [["text", "/callback/settings/user/email/soundTheme"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_get_board_settings: {
        tokens: [["text", "/callback/board-settings"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_classroom_callback_get_countries: {
        tokens: [["text", "/callback/classroom/get-countries"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    i18n_web_classroom_callback_get_countries: {
        tokens: [["text", "/callback/classroom/get-countries"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_2fa_login: {
        tokens: [["text", "/2fa"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_2fa_login: {
        tokens: [["text", "/2fa"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_analysis_board_editor: {
        tokens: [["text", "/analysis"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_analysis_board_editor: {
        tokens: [["text", "/analysis"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    explorer_index: {
        tokens: [["text", "/explorer"]],
        defaults: [],
        requirements: [],
        hosttokens: [["text", "www.chess-dev.com"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_explorer_index: {
        tokens: [["text", "/explorer"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            _locale: ""
        },
        requirements: {
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", "www.chess-dev.com"]],
        methods: [],
        schemes: ["https"]
    },
    explorer_callback_move: {
        tokens: [["text", "/callback/explorer/move"]],
        defaults: [],
        requirements: [],
        hosttokens: [["text", "www.chess-dev.com"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_eco_callback_stats_fen_search: {
        tokens: [["text", "/callback/eco/search/fen"]],
        defaults: {
            subdomain: "chesscom"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_game_fens_callback_by_user: {
        tokens: [["text", "/callback/game/fens"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            userId: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_analysis_game_callback_game_view: {
        tokens: [["variable", "/", "[^/]++", "gameId"], ["variable", "/", "[^/]++", "type"], ["text", "/callback/analysis/game"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_lesson_callback_translations: {
        tokens: [["text", "/callback/lessons/translated"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_eco_callback_search_opening_stats: {
        tokens: [["variable", "/", "[^/]++", "username"], ["variable", "/", "[^/]++", "cleanUrl"], ["text", "/callback/eco/search"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_analysis_game_callback_retry_attempt: {
        tokens: [["text", "/callback/analysis/retry"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_analysis_game_callback_self_analysis_create: {
        tokens: [["text", "/callback/analysis/self"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_analysis_library_game_callback_self_analysis_create: {
        tokens: [["text", "/callback/analysis/library/self"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_master_games_search: {
        tokens: [["text", "/games/search"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    i18n_web_master_games_search: {
        tokens: [["text", "/games/search"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_analysis_saved: {
        tokens: [["text", "/analysis/saved"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_analysis_saved: {
        tokens: [["text", "/analysis/saved"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_eco_callback_search_opening_commentary: {
        tokens: [["variable", "/", "[^/]++", "tcn"], ["text", "/callback/eco/commentary"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_lesson_view: {
        tokens: [["variable", "/", "[^/]++", "url"], ["variable", "/", "[^/]++", "course"], ["text", "/lessons"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_lesson_view: {
        tokens: [["variable", "/", "[^/]++", "url"], ["variable", "/", "[^/]++", "course"], ["text", "/lessons"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_tactic_index: {
        tokens: [["text", "/puzzles"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_tactic_index: {
        tokens: [["text", "/puzzles"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_insights: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/insights"]],
        defaults: {
            username: null,
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_insights: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/insights"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            username: null,
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_game_live: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/game/live"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_game_live: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/game/live"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_game_rcn: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/game/rcn"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_game_rcn: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/game/rcn"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_puzzles_mode_battle_view: {
        tokens: [["variable", "/", "[^/]++", "shortUuid"], ["text", "/puzzles/battle"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_puzzles_mode_battle_view: {
        tokens: [["variable", "/", "[^/]++", "shortUuid"], ["text", "/puzzles/battle"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_callback_lifetime_score: {
        tokens: [["variable", "/", "[^/]++", "opponent"], ["variable", "/", "[^/]++", "user"], ["text", "/callback/user/lifetime-score"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_archive_index: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/games/archive"]],
        defaults: {
            username: null,
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_archive_index: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/games/archive"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            username: null,
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_play_new: {
        tokens: [["text", "/play/online/new"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_play_new: {
        tokens: [["text", "/play/online/new"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_verification_index: {
        tokens: [["text", "/verified"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_verification_index: {
        tokens: [["text", "/verified"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_member_callback_trophy_list: {
        tokens: [["variable", "/", "[^/]++", "trophyType"], ["variable", "/", "[^/]++", "username"], ["text", "/callback/member/trophy"]],
        defaults: {
            trophyType: null,
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_callback_get_trophies: {
        tokens: [["text", "/callback/trophies"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_trophy_showcase_callback: {
        tokens: [["text", "/showcase"], ["variable", "/", "[^/]++", "username"], ["text", "/callback/user/trophy"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_callback_count_user_trophies: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/count/user_trophy"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_feature_trophy_callback: {
        tokens: [["variable", "/", "0|1", "featured"], ["variable", "/", "\\d+", "id"], ["text", "/callback/feature/trophy"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            featured: "0|1",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_award_trophy_callback: {
        tokens: [["variable", "/", "\\d+", "trophyId"], ["variable", "/", "[^/]++", "username"], ["text", "/callback/award/trophy"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            trophyId: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_member_titled_players: {
        tokens: [["text", "/members/titled-players"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_member_titled_players: {
        tokens: [["text", "/members/titled-players"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_practice_custom: {
        tokens: [["text", "/practice/custom"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    explorer_callback_get_suggested_moves: {
        tokens: [["text", "/callback/explorer/get-suggested-moves"]],
        defaults: [],
        requirements: [],
        hosttokens: [["text", "www.chess-dev.com"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_play_computer: {
        tokens: [["text", "/play/computer"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_play_computer: {
        tokens: [["text", "/play/computer"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_callback_load_game_live_data: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/callback/live/game"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_computer_callback_load_game: {
        tokens: [["variable", "/", "\\d+", "id"], ["text", "/computer/callback/game"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_daily_callback_load_game: {
        tokens: [["variable", "/", "\\d+", "id"], ["text", "/callback/daily/game"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_callback_username_search: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/user/search"]],
        defaults: {
            username: null,
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_analysis_game_callback_view_all: {
        tokens: [["text", "/all"], ["variable", "/", "[^/]++", "gameId"], ["variable", "/", "[^/]++", "type"], ["text", "/callback/analysis/game"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_simple_delegated_authentication: {
        tokens: [["variable", "/", "\\w+", "codeName"], ["variable", "/", "\\w+", "realm"], ["text", "/callback/auth"]],
        defaults: {
            subdomain: "chesscom"
        },
        requirements: {
            realm: "\\w+",
            codeName: "\\w+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET", "OPTIONS"],
        schemes: ["https"]
    },
    web_tablebase_line: {
        tokens: [["text", "/callback/tablebase/line"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_tablebase_summary: {
        tokens: [["text", "/callback/tablebase/summary"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_article_callback_list_authors: {
        tokens: [["text", "/callback/articles/authors"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_content_callback_load_more: {
        tokens: [["variable", "/", "[1-9]+[0-9]*", "page"], ["variable", "/", "article|news|blog", "contentType"], ["text", "/callback/content/list"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            page: "[1-9]+[0-9]*",
            contentType: "article|news|blog",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_content_callback_load_more: {
        tokens: [["variable", "/", "[1-9]+[0-9]*", "page"], ["variable", "/", "article|news|blog", "contentType"], ["text", "/callback/content/list"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            page: "[1-9]+[0-9]*",
            contentType: "article|news|blog",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_content_callback_feature_article: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/callback/content/feature/article"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_content_callback_feature_blog: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/callback/content/feature/blog"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_blog_callback_feature: {
        tokens: [["text", "/headline"], ["variable", "/", "[^/]++", "id"], ["text", "/callback/blog"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_content_callback_feature_lesson_course: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/callback/content/feature/lesson_course"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_content_callback_feature_news: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/callback/content/feature/news"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_content_callback_feature_chess_video: {
        tokens: [["variable", "/", "[^/]++", "id"], ["text", "/callback/content/feature/chess_video"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_set_content_language: {
        tokens: [["text", "/callback/user/content-language/set"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_article_view: {
        tokens: [["variable", "/", "[^/]++", "url"], ["text", "/article/view"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_article_view: {
        tokens: [["variable", "/", "[^/]++", "url"], ["text", "/article/view"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_survey_callback_vote: {
        tokens: [["variable", "/", "\\d+", "optionId"], ["text", "/vote"], ["variable", "/", "\\d+", "id"], ["text", "/callback/survey"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            optionId: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_team_match_view: {
        tokens: [["variable", "/", "\\d+", "match"], ["text", "/club/matches"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            match: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_team_match_view: {
        tokens: [["variable", "/", "\\d+", "match"], ["text", "/club/matches"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            match: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_tournament_view: {
        tokens: [["variable", "/", "[^/]++", "url"], ["text", "/tournament"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_tournament_view: {
        tokens: [["variable", "/", "[^/]++", "url"], ["text", "/tournament"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_library_collection_add_bookmark: {
        tokens: [["text", "/bookmarks"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_add_lookup: {
        tokens: [["text", "/lookups"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_add_participant: {
        tokens: [["text", "/participants"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_callback_add_from_pgn_to_collection: {
        tokens: [["text", "/actions/add-from-pgn"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_callback_add_from_url_to_collection: {
        tokens: [["text", "/actions/add-from-url"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_download_games: {
        tokens: [["text", "/actions/download-pgn"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_callback_collection_items: {
        tokens: [["text", "/items"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_library_community_collections: {
        tokens: [["text", "/callback/library/community/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_library_callback_copy_into_new_collection: {
        tokens: [["text", "/actions/copy-into-new"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_callback_delete_collection: {
        tokens: [["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_library_bookmarks: {
        tokens: [["text", "/callback/library/bookmarks"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_library_collections: {
        tokens: [["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_library_callback_publish_collection: {
        tokens: [["text", "/actions/publish"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_remove_root_bookmark: {
        tokens: [["text", "/actions/remove-root-bookmark"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_remove_items: {
        tokens: [["text", "/actions/remove-items"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_remove_lookup: {
        tokens: [["variable", "/", "[^/]++", "lookup"], ["text", "/lookups"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_library_collection_remove_participant: {
        tokens: [["variable", "/", "[^/]++", "userId"], ["text", "/participants"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_library_shared_collections: {
        tokens: [["text", "/callback/library/shared"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_library_callback_unpublish_collection: {
        tokens: [["text", "/actions/unpublish"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_callback_update_lucg_details: {
        tokens: [["text", "/details"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/lucgs"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_callback_update_collection_privacy_settings: {
        tokens: [["text", "/privacy-settings"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_update_thumbnail: {
        tokens: [["text", "/thumbnail"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_upload_thumbnail: {
        tokens: [["text", "/actions/upload-thumbnail"], ["variable", "/", "[^/]++", "uuid"], ["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_callback_create_collection: {
        tokens: [["text", "/callback/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_collection_update_collection: {
        tokens: [["text", "/actions/update"], ["variable", "/", "[^/]++", "uuid"], ["text", "/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_create_collection: {
        tokens: [["text", "/library/collections"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_library_home: {
        tokens: [["text", "/library"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    i18n_web_library_home: {
        tokens: [["text", "/library"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_user_callback_report_user: {
        tokens: [["text", "/callback/report-user"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_tv_callback_report: {
        tokens: [["variable", "/", "[^/]++", "video"], ["variable", "/", "[^/]++", "reason"], ["text", "/chess-tv/callback/report"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_about: {
        tokens: [["text", "/about"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_league_division: {
        tokens: [["variable", "/", "[\\w]{6,}", "division"], ["variable", "/", "\\w+", "league"], ["text", "/leagues"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            league: "\\w+",
            division: "[\\w]{6,}",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_league_division: {
        tokens: [["variable", "/", "[\\w]{6,}", "division"], ["variable", "/", "\\w+", "league"], ["text", "/leagues"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            league: "\\w+",
            division: "[\\w]{6,}",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_stats: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/stats"]],
        defaults: {
            username: null,
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_stats: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/stats"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            username: null,
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_callback_delete_comment: {
        tokens: [["variable", "/", "\\d+", "id"], ["text", "/callback/comment"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_user_callback_get_available_flair: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/user/get-available-flair"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_callback_load_notes: {
        tokens: [["text", "/callback/user/notes"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_member_callback_mute_account: {
        tokens: [["variable", "/", "[^/]++", "user"], ["text", "/callback/member/mute-account"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_post_note: {
        tokens: [["text", "/callback/user/note"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_set_flair: {
        tokens: [["text", "/callback/user/set-flair"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_callback_set_status: {
        tokens: [["text", "/callback/user/set-status"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_user_settings_edit: {
        tokens: [["text", "/settings"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_policies_community: {
        tokens: [["text", "/legal/community"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_policies_community: {
        tokens: [["text", "/legal/community"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_member_callback_disable: {
        tokens: [["variable", "/", "\\d+", "id"], ["text", "/callback/members/disable"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_member_enable: {
        tokens: [["variable", "/", "\\d+", "id"], ["text", "/members/enable"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            id: "\\d+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_user_home: {
        tokens: [["text", "/home"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_master_player_view: {
        tokens: [["variable", "/", ".+", "url"], ["text", "/players"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            url: ".+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    i18n_web_master_player_view: {
        tokens: [["variable", "/", ".+", "url"], ["text", "/players"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            url: ".+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["GET"],
        schemes: ["https"]
    },
    web_member_mute: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/member/mute"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_member_callback_remove_avatar: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/callback/member/remove_avatar"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["DELETE"],
        schemes: ["https"]
    },
    web_user_callback_remove_user_custom_background: {
        tokens: [["variable", "/", "[^/]++", "user"], ["text", "/callback/remove/user_custom_background"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_member_reset_flair: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/member/reset_flair"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: ["POST"],
        schemes: ["https"]
    },
    web_member_unmute: {
        tokens: [["variable", "/", "[^/]++", "username"], ["text", "/member/unmute"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    web_blog_view: {
        tokens: [["variable", "/", ".+", "url"], ["text", "/blog"]],
        defaults: {
            subdomain: "www"
        },
        requirements: {
            url: ".+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    },
    i18n_web_blog_view: {
        tokens: [["variable", "/", ".+", "url"], ["text", "/blog"], ["variable", "/", "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--", "_locale"]],
        defaults: {
            subdomain: "www",
            _locale: ""
        },
        requirements: {
            url: ".+",
            subdomain: "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy",
            _locale: "es|fr|de|pl|ru|sv|el|pt|it|zh|ja|ko|nl|hy|bg|hr|cs|da|fi|hu|lt|no|ro|sk|sl|tr|uk|af|ar|az|be|bs|et|fa|gl|he|hi|id|is|ka|lv|ms|pt-BR|sq|sr|vi|zh-HK|zh-TW|fil|nl-BE|bn|tk|uz|ca|ur|--locale--"
        },
        hosttokens: [["text", ".chess-dev.com"], ["variable", "", "www|schach|ru|uk|ajedrez|fr|scacchi|sakk|schaken|szachy", "subdomain"]],
        methods: [],
        schemes: ["https"]
    }
}),
function() {
    var e, t, a, s, n, o, r, i, l, c, u, d = {
        88520: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return u
                }
            });
            var s, n, o, r = a(10942), i = (s = function() {
                var e = [[2637767806, 863464769], [720845184, 95069639], [1155203408, 610415943], [2618685246, 1655139042], [1971536997, 1218186377], [848342074, 540017087], [263957791, 1627660921], [3896152207, 4076560586], [226391645, 1484086288], [436746274, 3467632685], [2516964848, 3797861296], [3491888988, 3510251221], [1086189917, 1248276018], [18044180, 1876255637], [1572111136, 1190386149], [597658413, 2146900428], [97624494, 2243205793], [1738507407, 1854916977], [1950989311, 2149575947], [2098318769, 3283594736], [2194108574, 2015279052], [4079062812, 2500884588], [856979699, 2941369318], [1270058469, 3877737539], [2858720366, 3170717948], [2378012835, 1387254795], [2278688587, 2178388503], [435406673, 3555273441], [3031118064, 1655806655], [2063925420, 1107589828], [3376753832, 436852829], [615148625, 1302492416], [1285502018, 1963045959], [346460119, 1016137793], [2803604355, 1176288659], [55085973, 2968618255], [1669016372, 4287873088], [164740250, 1037634196], [896886403, 883023163], [1935551383, 2764331555], [410153072, 4055711755], [533441746, 1505690343], [3541084098, 3466290517], [3214426080, 4267541060], [2675233103, 1951705124], [1374411850, 3115986997], [1552073989, 3684348154], [4244110986, 875606593], [844343081, 3115990494], [2356462440, 135999605], [3116133511, 377238503], [2129956651, 2197966368], [299173332, 3276914047], [1701379241, 745972291], [1306570996, 254977976], [2530644806, 214138461], [1122123979, 1667800879], [1831591130, 3801192033], [1116211970, 920967505], [1594837592, 2551651254], [972591349, 2046373768], [2479207924, 1935030411], [1675376029, 2367888248], [3960916618, 3935874422], [1398143232, 3265801671], [133930885, 1520005442], [1351827834, 2829577566], [2076951437, 2723839804], [435980918, 2364847828], [1668970368, 3738157273], [2185864314, 3993911799], [2041407829, 31969768], [346864372, 2004703094], [4047877822, 3437142421], [3669961416, 538399484], [616810829, 4190688246], [3144558884, 4030272234], [216165387, 2513010905], [2761740594, 3216997572], [3919406634, 4096014649], [669429112, 2434161727], [2234904640, 3111407601], [1421079802, 1598085235], [1924213810, 310373675], [4002762044, 2067865415], [2592451728, 2586110625], [1890340057, 4031717877], [4189625662, 2577429954], [2276713138, 3049850801], [2741429688, 3310307512], [2924122950, 3426712818], [421576781, 1193704381], [2277442246, 3030264553], [153237420, 595540057], [4278711886, 4176286928], [2380848297, 4030514510], [2618700582, 1303682185], [3018992701, 185284845], [957243316, 1291916363], [1543415220, 1898408169], [504378001, 531073412], [2591337657, 1692896435], [1333852064, 903543556], [1661259930, 188168388], [561112646, 2197961224], [1536910315, 2632972300], [1349168372, 2307429186], [411152329, 2745631190], [1694697476, 1081411140], [3755185459, 2631660711], [4019355068, 4027326706], [2066937809, 3761668332], [3120395808, 3878773315], [94890149, 2109283191], [3045629038, 358812277], [1249184265, 3465901047], [3477490924, 2308583306], [4114113436, 3875911716], [1014604031, 1434513279], [3991324799, 2222416029], [2040431088, 1539915569], [2253613964, 4081224332], [2547464012, 1611168627], [2722521980, 4281500978], [71289574, 213969824], [2450408597, 903689630], [1894451515, 364024012], [1939968537, 374938813], [1447259295, 3785468557], [4021046128, 1664847745], [3139524504, 3562928047], [1173487682, 4065269608], [2467266804, 3907744866], [4284945151, 3486998177], [2925674454, 1953016432], [3710671816, 1271453948], [2129465869, 1422863833], [587093076, 18243356], [3373793513, 2411305257], [2156648078, 1791034213], [3737413652, 1534461430], [468575139, 2935304962], [1129551363, 3603256834], [2861996892, 1763494778], [2826449619, 2465197654], [1704209531, 1014895022], [3738359347, 3402630390], [569410928, 4095796581], [3021312909, 2108247612], [2444777957, 2664129360], [282063667, 3773661258], [682545472, 3188439005], [3318488457, 1917822038], [1447622272, 4045023041], [757420137, 4038580915], [2613420942, 4146703316], [4012836163, 150381244], [2938127093, 3428591704], [1208226490, 3086335530], [2935205706, 1446903363], [430957978, 3830532479], [1381578755, 3757172800], [4109399782, 1596778224], [288855589, 1954372339], [3169178148, 2256716053], [2644780093, 3895892303], [107966643, 1071681559], [1304747544, 2607225372], [1359190711, 1898207171], [3229237120, 3273634996], [3027167685, 3863637628], [3011615298, 2883984519], [564135827, 978463264], [770797430, 362326607], [1983662611, 1907583229], [4153656423, 48268960], [3609759233, 720080177], [3727911466, 1270989899], [200708787, 2366086947], [744508026, 393422515], [1213261630, 65757284], [3485747185, 3845951003], [2958861301, 1680248217], [2598470344, 3163845864], [2767997908, 4233451722], [3881113485, 1492930166], [1773764017, 2764062206], [4189435844, 2898689174], [4234838742, 1267095035], [2624081078, 3302114327], [2395569449, 390426320], [1728307101, 690284926], [3309827454, 1118258254], [2028172868, 3888829086], [4271523049, 909051386], [146617804, 942892565], [2467685867, 974297806], [2483428231, 503635829], [3743260573, 2018222096], [1002067894, 2289153437], [3535252974, 3738302271], [4154611160, 1002664952], [3623154244, 2349656961], [3646679180, 3524329383], [862933752, 4282853607], [2806008282, 3272780913], [2734037942, 3828874677], [1328176304, 2137666995], [2278785213, 2780788825], [381286368, 1816476193], [2074232908, 2316293454], [4087773386, 3651330956], [967884669, 3728964514], [4239349185, 3213509668], [419231360, 1463788948], [1275421624, 2672384707], [1088456595, 436245261], [2365565249, 783696577], [1758083333, 845223583], [2048846183, 3530914274], [2635948261, 124738415], [940630937, 3069598626], [839474029, 1253439921], [902477345, 165479306], [2836079689, 2681188273], [2007115168, 2093139645], [1363041891, 1282466609], [1130479818, 1063857938], [3644959908, 1260430427], [1385135238, 46497915], [1386975934, 3110156681], [2635987502, 4233461619], [1915744629, 4117939016], [487743653, 285736599], [2049219159, 3960249250], [69242857, 3908563670], [1511066720, 1488527520], [215590039, 1703564952], [1459430344, 4184955468], [676103291, 2642967214], [83799035, 3182827979], [1949179493, 476101251], [2593534694, 1493478716], [2283504289, 995211746], [1349412676, 3449243940], [2954378677, 1878813305], [249149717, 3329151870], [1578231917, 1483986052], [4135085182, 890874990], [461755528, 3505523909], [3669622373, 634949665], [219487622, 2914465301], [2825233742, 3703631897], [2479105382, 2935590907], [2582097898, 3187672881], [1221328648, 1843341402], [2140891889, 3958868911], [1482849818, 345750049], [751922730, 3178831411], [3546542069, 4036458902], [216179596, 877293293], [444615341, 3117393729], [2424254530, 494454238], [1344234989, 3003337991], [929188581, 2760877801], [2507911009, 1879899982], [980166547, 1311840394], [3566535507, 1790747461], [143525013, 2311336672], [4181962471, 4273938872], [1815842366, 862009811], [911175674, 1179575598], [3591335374, 3694215714], [1452686093, 3393294272], [385158879, 2447709103], [4011414929, 1264623507], [1448477120, 911094312], [3971299641, 2289992053], [3133647265, 2234591563], [3007628400, 964409938], [1708345684, 3673411261], [3031964479, 2843021794], [3022128657, 2480338599], [118850112, 473449293], [2048127371, 3202109429], [3158349745, 382018770], [1505327237, 3807570472], [2568424029, 3272693060], [1866609495, 3888556537], [844703982, 1852802964], [3504617058, 682636099], [1448882679, 3733580327], [821387540, 2215744532], [3631471417, 311618895], [2077838877, 2383929020], [3352949096, 1688694420], [2491080787, 3998672444], [3368630402, 4182204255], [983299419, 2837414346], [3651215291, 1033373924], [265429091, 3988955082], [3019003608, 2896212153], [2955948456, 3025235588], [903690197, 2266253487], [3925215275, 89402958], [3959093811, 3609545561], [2455088053, 223552128], [3115011301, 2133669107], [1765081558, 673805649], [3324795129, 2111392191], [3443871631, 432345706], [3152559950, 3425427147], [3699649406, 672784944], [3129545774, 7668664], [2747044893, 173040075], [3925243406, 852328481], [164095314, 3161868591], [2234471571, 1302682825], [2164784335, 105893718], [159995093, 536831360], [599199451, 425051327], [3274759746, 1680930461], [1192619331, 3903085578], [2832721114, 3078660237], [91404660, 4030521531], [3044880024, 1578375623], [3906596030, 754177855], [803516785, 1894094672], [288455592, 2030430096], [2143232492, 2317305324], [388352703, 3406060288], [2521731420, 3588403719], [1043041227, 4028028525], [3195290851, 2468913324], [4166724431, 3168683191], [1228226538, 968516529], [500177583, 3444787306], [533367442, 4252082053], [4236023256, 657816314], [413575568, 3367198397], [3435884549, 3334062733], [1004255532, 1135705894], [2859513268, 4170618274], [3914086821, 1251487871], [3080761716, 3489067886], [3571165255, 699353261], [773372954, 3648014952], [769693293, 2939128604], [3116440923, 507748478], [1687629160, 3739431776], [2489486648, 3502376324], [3686847158, 2878383449], [3530767427, 902211375], [2121652637, 2493976397], [1827477891, 930064171], [2549918411, 4029725732], [2071415163, 844118802], [2236083679, 3088894868], [2040110303, 4144562891], [3489536313, 1133419300], [2190878435, 2301466071], [2465915458, 2448602097], [1675766804, 2073834499], [3329799896, 1613253148], [1483966600, 1348836071], [159505618, 2527621997], [2674227354, 1695130688], [2683539437, 1927873839], [3833196123, 2570082188], [3891433165, 759819981], [1455453349, 2179602430], [1430583255, 1957776111], [2067726741, 4235143439], [303380021, 2998980439], [2136024795, 3126725799], [2054591852, 1051702291], [1029141665, 489794361], [2317027384, 569642164], [2068461795, 624418658], [2499875684, 1830645251], [1302894490, 4319401], [1002663431, 2406815191], [1560941298, 2060652753], [2141002286, 515773223], [3661248027, 475092913], [3705503008, 2419919909], [914567990, 3496539911], [3462935583, 2039034761], [2878378006, 2379243316], [1133857586, 1390159333], [3023618742, 2140726761], [282908558, 944874642], [3686955701, 1148723903], [2604456805, 4163675010], [3061545110, 377179268], [3218002352, 76459088], [2836503392, 916455101], [536836808, 151306053], [2886925079, 404221671], [2936593041, 2011015485], [453815187, 1852163908], [3042568989, 82176306], [3279635891, 4174836410], [3282689058, 2360003049], [4088968807, 1516570623], [2680453086, 1322680794], [1731693966, 3438253771], [1842894553, 1294307894], [2736377365, 2964642609], [121205621, 521330014], [2324595870, 3005710757], [3784465521, 676493813], [1958759409, 2030833406], [1306150933, 1016370058], [2636541290, 482366508], [1950415745, 1695073534], [322077955, 3746046623], [3602873262, 3829181504], [1211684447, 1861645455], [504701736, 4080111082], [2407799203, 1223857855], [1925743434, 1498920209], [3617596327, 845198428], [2498480299, 3484773806], [2680229135, 2560201696], [3731399221, 1536412390], [2756509305, 2924710846], [2635957500, 3459716133], [1372762539, 769635894], [802677945, 3878474636], [1707760534, 3075809808], [3714687192, 2872792173], [1615679922, 1606381794], [1940556374, 1337437342], [445390489, 731124040], [2864974375, 64601760], [1984806574, 2141516710], [513390958, 1890172555], [744398315, 1475299139], [982749166, 852662657], [652663695, 4260736510], [1184061125, 82616221], [3363191899, 147951756], [1064069880, 1507328085], [2138882964, 547595589], [2616926846, 3186935246], [2298715513, 3606862940], [2414381911, 811477686], [2694745228, 900437726], [4202576185, 2201114451], [3602305260, 3323446937], [3756663274, 2658490339], [3061587876, 2171079416], [3390977925, 2850497765], [486312941, 224925241], [3515712841, 3510684394], [1322319486, 2647200565], [3839619171, 1148450258], [392296762, 1154854654], [1401523788, 957405781], [1934485528, 527352730], [645968162, 3131215255], [696971825, 3361451947], [2038689491, 1946699733], [1723966113, 2785859721], [2652365974, 1118037185], [3988018407, 3134982149], [1354171594, 3053634345], [1287854075, 2631782435], [1723106141, 2662328866], [563845090, 1878819261], [639520332, 171129501], [534957223, 1696062352], [3612364282, 2283204027], [3109494688, 1304463816], [500957989, 630925278], [3477030536, 2149497258], [4109750364, 281719363], [951472732, 564407054], [922095147, 2767874048], [3946156928, 829677774], [2622281253, 2086286851], [2936811901, 850242186], [630086272, 3340782667], [2340986210, 1296336989], [4107355543, 3865114709], [3560210278, 3968418243], [3868847493, 2967450637], [611513888, 2083325060], [3265390517, 3025776309], [2874106961, 3424470508], [1668707698, 2923258228], [2778598353, 24320552], [292356118, 3415510793], [754567370, 86994591], [185141877, 1621715171], [2884558258, 3722473457], [1492107531, 111281805], [3336927864, 4225337056], [782994598, 1021838039], [346133860, 18281270], [2080909533, 1649329040], [3612065399, 3859901127], [2151962287, 284556115], [3957975594, 3745718727], [52533817, 3998775856], [1232633839, 397383972], [2716413964, 3629253960], [1531307298, 3836851439], [3030137657, 2500401718], [3561556693, 653345841], [313061910, 2945718466], [2065276, 3342140708], [410498334, 1470588117], [2726640512, 4051654894], [2570984935, 758567696], [3008987264, 3462702678], [623860175, 228525243], [3527183895, 1829844480], [467272850, 3890501742], [568376656, 650516927], [990477018, 4035508558], [2366955227, 817792110], [4183621538, 989198068], [946958343, 1639184195], [3395758993, 3924097558], [1690887473, 3220519765], [605184237, 1255270525], [275515833, 1926424610], [2142902612, 283494960], [2021972412, 1823828440], [105373677, 3448326697], [1666662384, 1042433908], [1338566998, 261206307], [498685668, 1344755577], [3101233780, 3119109371], [2733370951, 3808165089], [3656512268, 3449289481], [4025308119, 1607880299], [778896067, 1612183167], [2846510368, 3674754715], [3058428120, 2991822529], [1892379383, 3268787440], [2565895844, 4154602030], [3213117192, 98999135], [2495816991, 116985075], [1040203361, 1785041385], [3106252493, 69316595], [1639829808, 2087117568], [3213709576, 3799911752], [604681594, 2340981536], [4236730699, 2938666503], [4009938384, 1878897714], [2701667332, 1725918218], [2182473079, 1258184], [3550198211, 2760750799], [657991062, 875584532], [1640976276, 3380476221], [460041378, 2924352091], [1972323596, 2287414795], [2510248061, 1350206297], [2959337826, 3762681165], [1625877874, 3235902929], [2070189957, 1429368735], [4245163299, 1839731898], [2358312347, 138364248], [275739390, 2179122576], [2037777210, 972544338], [2766930226, 1984733259], [1933485829, 4209310327], [3034118011, 3286589799], [2653025529, 62078937], [2641780289, 2679545709], [3540781195, 2787026415], [1569993599, 3215949659], [441337890, 3947723353], [1878946792, 459505587], [3724105660, 920173002], [1691411102, 3934795955], [148741087, 3647709027], [142506469, 2776440083], [3811107376, 3823285243], [472209891, 252266174], [1913386482, 1867329194], [2960608550, 482740699], [1145005292, 1513558421], [1091751784, 1687823886], [3625186042, 3086337482], [1712140887, 940065262], [1504455800, 1945702563], [3896940088, 2003245591], [2478191531, 4197739e3], [3233871270, 250924495], [3404865229, 1131917964], [1462204167, 429621621], [1349259705, 3641608989], [3627860584, 2048468319], [1244251718, 1513180369], [3979211282, 371413143], [3043187861, 4285699810], [581894202, 3060983825], [1390895705, 1811317301], [2599134010, 3337406128], [2488233440, 2436161462], [1816641224, 2208816697], [1792034756, 815866116], [2779893723, 2695577703], [2084952115, 2951772258], [1351806869, 169269771], [2469979804, 86740603], [1163545420, 4264616949], [1795352113, 2511146232], [1796715044, 3134635815], [3521170642, 1538900329], [3725363621, 1455009392], [1342594643, 1512127734], [2618386938, 662157428], [2028859350, 2494504685], [1841905045, 648351336], [4002935891, 4033319405], [850071259, 1768358867], [979915719, 3876018087], [830889197, 1629549437], [1744763229, 2455795856], [522919199, 368499868], [3063822504, 2522639205], [2861636095, 407686388], [4097602344, 1945259027], [4215946617, 1251639506], [894485042, 534122652], [924809191, 1807237502], [1811585710, 1589663609], [3439653887, 1722232], [3810997538, 105152714], [2677100683, 4291805514], [77233985, 102407776], [4239834691, 2851274395], [148802076, 2006440603], [2409138150, 126301601], [3048474397, 3217504870], [588133437, 4221603123], [1139638106, 263087485], [982032635, 3165674595], [562514827, 1294842959], [467575086, 905357513], [1405117894, 3370530088], [3813285157, 242912619], [3601878331, 1985076606], [1586505598, 2092146221], [738488098, 103663229], [2970334297, 321718822], [1068097019, 1742926233], [235518094, 420804527], [283685722, 4092504887], [2666392744, 3799169331], [3569817788, 1256762975], [2169728352, 292617248], [2444571896, 2239859206], [3967907832, 1066404216], [420376911, 2913277294], [3046293305, 2956347747], [2311278792, 2477686209], [2885955184, 4172514290], [3030078181, 2275536480], [4212469731, 4280736393], [1046900335, 1773022229], [995380926, 1414273529], [3892683234, 2429494358], [615726237, 2127712535], [3880203074, 2071130305], [176180504, 3070850165], [1474506861, 2283723599], [1256707747, 1857412043], [764236850, 359687368], [3521530334, 511649419], [2318567964, 3992868140], [128167623, 2518992858], [2220129756, 1042300052], [2567608573, 1349636707], [441446694, 384760969], [4143447316, 829506048], [817912603, 2738025500], [2368091832, 357934982], [1187643061, 1561463042], [3438021235, 3030161697], [1318922279, 895468690], [434876457, 1130220303], [1180291767, 1132759596], [2520707785, 1798553137], [1962430872, 2958700157], [1510954061, 3534879512], [57831539, 3269538993], [3354831405, 3852135009], [891783098, 2698494511], [2555636406, 996018997], [2881342935, 3982231648], [3473267445, 2894952368], [1238029452, 3958679326], [2051805420, 559465638], [3655936674, 1186951582], [330209165, 167662935], [1929681327, 2450868735], [1313566811, 2458925988], [4283920930, 3243182650], [1438004300, 4185567150], [3093439067, 89876832], [3401620219, 3721579956], [3673745794, 2682874719], [3053321309, 825410712], [822915968, 3681514755], [3900685126, 561657358], [553823814, 1857753416], [4166295066, 983949325], [128359165, 3426887194], [3300989119, 3884968622], [4193552686, 3647722552], [452189154, 1569670618], [4122259632, 3537825460], [2519387887, 2821594244], [74333898, 2940550377], [4032631446, 2173999692], [2521268686, 1934310532], [2620314688, 2177785789], [1378755571, 2455646622], [394133753, 4231198609], [734399075, 2800989170], [573292462, 1634883078], [1214417373, 3426576256], [2110224475, 2399009920], [2331215665, 3224086912], [531326186, 698539511], [3839443603, 583861850], [2644531398, 2017784332], [616620850, 3070237104], [590349237, 2798642861], [3582377217, 3317831670], [1582708616, 1596570667], [2126148205, 2358511947], [173450736, 3219362418], [3616831144, 1323437318], [2655785577, 3131359031], [401600069, 2967397952], [496349349, 4244179910], [2479612086, 2579650653], [1710903074, 2049666425], [3589924952, 690291925], [3266682943, 1900485231], [1496318498, 3025542656], [3459221058, 3389461212], [2091479615, 3140389256], [663040899, 1207089672], [3323704225, 1105530508], [353318429, 2879253542], [2674540957, 941987316], [1688550857, 620657353], [338551967, 4286217277], [204689992, 2239736295], [178008789, 3940832005], [3871613304, 3300636974], [1911672356, 2429684487], [4055679954, 1974461722], [3878217928, 1009991796], [2533095482, 310920740], [2174833823, 3596041637], [1604814460, 2939543881], [1452830254, 4092397851], [2441027029, 4169690209], [3524103304, 3372213855]]
                  , t = [[836181454, 1689436944], [2776523577, 3710710688], [4049974663, 3750330768], [519497435, 2979405513]]
                  , a = [[1892447193, 197291556], [3793382197, 3742120663], [3838936, 2994760034], [479846099, 1018728609], [3476112862, 182272649], [3504620154, 1427438450], [2009473484, 2679350403], [1738755500, 1129731339]]
                  , s = [4174784170, 2938602761]
                  , n = {
                    p: 0,
                    P: 1,
                    n: 2,
                    N: 3,
                    b: 4,
                    B: 5,
                    r: 6,
                    R: 7,
                    q: 8,
                    Q: 9,
                    k: 10,
                    K: 11
                }
                  , o = [];
                o[5] = 1,
                o[6] = 0,
                o[9] = 3,
                o[10] = 2,
                o[17] = 5,
                o[18] = 4,
                o[33] = 7,
                o[34] = 6,
                o[65] = 9,
                o[66] = 8,
                o[129] = 11,
                o[130] = 10;
                var r, i = [2, 5, 10, 20, 40, 80, 160, 64], l = ["", "0000000", "000000", "00000", "0000", "000", "00", "0", ""];
                function to32BitHex(e) {
                    var t = e.toString(16);
                    return l[t.length] + t
                }
                function to64BitHex(e) {
                    return to32BitHex(e[0]) + to32BitHex(e[1])
                }
                function hash(o, r) {
                    var l, c, u, d, h, p, m, b, g, f, v, w, y = o.split(" "), k = y[0].split("/"), _ = "w" === y[1], C = 0, T = Number(_), S = T ? 3 : 4;
                    for (u = 7; u >= 0; u -= 1)
                        for (d = 0,
                        m = (h = k[u]).length,
                        p = 0; p < m; p += 1)
                            b = h[p],
                            (v = n[b]) >= 0 && (l = (l ^ (g = e[64 * v + 8 * (7 - u) + d])[0]) >>> 0,
                            c = (c ^ g[1]) >>> 0,
                            v === T && u === S && (C |= 1 << d)),
                            d += Number(b) || 1;
                    return "-" !== y[2] && ((f = y[2]).indexOf("K") > -1 && (l = (l ^ (g = t[0])[0]) >>> 0,
                    c = (c ^ g[1]) >>> 0),
                    f.indexOf("Q") > -1 && (l = (l ^ (g = t[2])[0]) >>> 0,
                    c = (c ^ g[1]) >>> 0),
                    f.indexOf("k") > -1 && (l = (l ^ (g = t[1])[0]) >>> 0,
                    c = (c ^ g[1]) >>> 0),
                    f.indexOf("q") > -1 && (l = (l ^ (g = t[3])[0]) >>> 0,
                    c = (c ^ g[1]) >>> 0)),
                    y[3] && "-" !== y[3] && (w = y[3].charCodeAt(0) - 97,
                    i[w] & C && (l = (l ^ (g = a[w])[0]) >>> 0,
                    c = (c ^ g[1]) >>> 0)),
                    _ && (l = (l ^ s[0]) >>> 0,
                    c = (c ^ s[1]) >>> 0),
                    r && "hex" === r ? to64BitHex([l, c]) : [l, c]
                }
                function wrap(e) {
                    var t, a, s, n, o = {};
                    function parseBook(e, t) {
                        var s, n, o, r, i, l, c = a.getUint16(e + 8), u = a.getUint16(e + 10);
                        return n = c >> 9 & 7,
                        r = c >> 3 & 7,
                        i = 7 & c,
                        l = c >> 12 & 7,
                        4 == (o = c >> 6 & 7) && t && n === r && "-" !== t && (7 === i && (0 === n && t.indexOf("K") > -1 || 7 === n && t.indexOf("k") > -1) ? i -= 1 : 0 === i && (0 === n && t.indexOf("Q") > -1 || 7 === n && t.indexOf("q") > -1) && (i += 2)),
                        s = String.fromCharCode(o + 97) + (n + 1) + String.fromCharCode(i + 97) + (r + 1),
                        l && (s += "nbrq"[l - 1]),
                        {
                            move: s,
                            weight: u
                        }
                    }
                    function query(e) {
                        return "string" == typeof e && (e = {
                            fen: e
                        }),
                        t(e)
                    }
                    if (o = {
                        query: query,
                        pick: function pick(e) {
                            var t, a, s, n, o, r = 0;
                            if (function sortMoves(e) {
                                e.sort((function sorter(e, t) {
                                    return t.weight - e.weight
                                }
                                ))
                            }(t = (e = e || {}).moves || query(e)),
                            s = t.length) {
                                if (e.type && 1 !== s && "best" !== e.type) {
                                    if ("random" === e.type) {
                                        for (n = Math.floor(Math.random() * t.sum) + 1,
                                        o = 0; o < s - 1 && !(n <= (r += t[o].weight)); o += 1)
                                            ;
                                        return t[o].move
                                    }
                                    return "randomDisregardWeight" === e.type ? t[Math.floor(Math.random() * s)].move : "worst" === e.type ? t[s - 1].move : ((a = parseInt(e.type) || 1) < 0 && (a = s + a + 1),
                                    a < 1 ? a = 1 : a > s && (a = s),
                                    t[a - 1].move)
                                }
                                return t[0].move
                            }
                        }
                    },
                    e.getUint32)
                        t = function bufferBookFind(e) {
                            var t, s, n, o, r, i = a.length || a.byteLength || 0, l = e.offset || 0, c = e.fen, u = e.chess960, d = e.checkAll, h = [], p = 0;
                            for (e.hash ? "string" == typeof (t = e.hash) && (t = function hex64ToDec(e) {
                                return [parseInt(e.substr(0, 8), 16), parseInt(e.substr(8), 16)]
                            }(t)) : t = hash(c),
                            !u && c && (r = c.split(" ")[2]),
                            l = 0; l < i; l += 16)
                                if (a.getUint32(l) === t[0] && a.getUint32(l + 4) === t[1])
                                    n = parseBook(l, r),
                                    h[h.length] = n,
                                    p += n.weight,
                                    s = !0;
                                else if (s && !d)
                                    break;
                            if (h.sum = p,
                            e.relative)
                                for (o = h.length - 1; o >= 0; o -= 1)
                                    h[o].relative = Math.round(h[o].weight / p * 1e4);
                            return h
                        }
                        ,
                        a = e,
                        o.buffer = a;
                    else
                        for (n in t = function jsonBookFind(e) {
                            var t, a, n, r, i, l, c = 0, u = e.fen;
                            if (o.useFen)
                                n = u.replace(/ \d+ \d+$/, ""),
                                (t = s[n]) || (r = n.replace(/[a-h][1-8]$/, "-")) !== n && (t = s[r]);
                            else if (e.hash || (e.hash = hash(u, "hex")),
                            t = s[e.hash]) {
                                if (t[0] && t[0].n && (t = t[0]),
                                t.n && !t.b)
                                    return [];
                                if (t.b)
                                    t = function decompressMoves(e) {
                                        var t, a = [], s = e.b.length;
                                        for (t = 0; t < s; ++t)
                                            a.push({
                                                move: e.b[t],
                                                weight: e.w[t]
                                            });
                                        return a
                                    }(t);
                                else if (!e.chess960 && u)
                                    for (l = u.split(" ")[2],
                                    a = t.length - 1; a >= 0; a -= 1)
                                        (i = t[a].move.match(/e([18])([ah])\1/)) && ("h" === i[2] && ("1" === i[1] && l.indexOf("K") > -1 || "8" === i[1] && l.indexOf("k") > -1) ? t[a] = {
                                            move: "e" + i[1] + "g" + i[1],
                                            weight: t[a].weight
                                        } : "a" === i[2] && ("1" === i[1] && l.indexOf("Q") > -1 || "8" === i[1] && l.indexOf("q") > -1) && (t[a] = {
                                            move: "e" + i[1] + "c" + i[1],
                                            weight: t[a].weight
                                        }))
                            }
                            if (t)
                                for (a = t.length - 1; a >= 0; a -= 1)
                                    c += Number(t[a].weight);
                            else
                                t = [];
                            return t.sum = c,
                            t
                        }
                        ,
                        s = e,
                        o.json = s,
                        s) {
                            o.useFen = n.indexOf(" ") > -1;
                            break
                        }
                    return o
                }
                function getBook(e, t) {
                    !function ajaxLoad(e, t) {
                        var a = new XMLHttpRequest
                          , s = e.toLowerCase().indexOf(".json") > -1;
                        function onload() {
                            var e;
                            if (a.status >= 200 && a.status < 300 || 304 === a.status || 0 === a.status || 1223 === a.status)
                                if (s)
                                    try {
                                        t(null, JSON.parse(a.response))
                                    } catch (n) {
                                        t(n)
                                    }
                                else
                                    e = new DataView(a.response),
                                    t(null, e);
                            else
                                t(new Error("Error code: " + a.status))
                        }
                        a.open("GET", e, !0),
                        s || (a.responseType = "arraybuffer"),
                        a.onload = onload,
                        a.onerror = onload,
                        a.send()
                    }(e, (function onload(e, a) {
                        var s;
                        if (a && (s = wrap(a)),
                        t)
                            return t(e, s);
                        if (e)
                            throw e;
                        return s
                    }
                    ))
                }
                return {
                    hash: hash,
                    loadBook: (r = {},
                    function loadBook2(e, t) {
                        r[e] ? r[e].book ? setTimeout((function() {
                            t(null, r[e].book)
                        }
                        ), 0) : r[e].cbs.push(t) : (r[e] = {
                            cbs: [t]
                        },
                        getBook(e, (function onload(t, a) {
                            var s = r[e].cbs;
                            t ? delete r[e] : (r[e].book = a,
                            r[e].cbs = void 0),
                            s.forEach((function(e) {
                                setTimeout((function() {
                                    e(t, a)
                                }
                                ), 0)
                            }
                            ))
                        }
                        )))
                    }
                    ),
                    to64BitHex: to64BitHex,
                    zobristPiece: e,
                    zobristCastle: t,
                    zobristEnPassant: a,
                    zobristTurn: s,
                    zobristPieceValue: n,
                    zobristPieceValueNumbers: o
                }
            }(),
            n = function init() {
                var e, t, a, n, o = {
                    Chess: 0,
                    Chess960: 1,
                    Crazyhouse: 2,
                    "3-check": 3,
                    "King of the Hill": 4,
                    Bughouse: 5,
                    chess960: 1,
                    Fischerandom: 1,
                    fischerandom: 1,
                    crazyhouse: 2,
                    "three-check": 3,
                    kingofthehill: 4,
                    koth: 4,
                    bughouse: 5
                }, r = ["Chess", "Chess960", "Crazyhouse", "3-check", "King of the Hill", "Bughouse"], i = {
                    a8: 0,
                    b8: 1,
                    c8: 2,
                    d8: 3,
                    e8: 4,
                    f8: 5,
                    g8: 6,
                    h8: 7,
                    a7: 16,
                    b7: 17,
                    c7: 18,
                    d7: 19,
                    e7: 20,
                    f7: 21,
                    g7: 22,
                    h7: 23,
                    a6: 32,
                    b6: 33,
                    c6: 34,
                    d6: 35,
                    e6: 36,
                    f6: 37,
                    g6: 38,
                    h6: 39,
                    a5: 48,
                    b5: 49,
                    c5: 50,
                    d5: 51,
                    e5: 52,
                    f5: 53,
                    g5: 54,
                    h5: 55,
                    a4: 64,
                    b4: 65,
                    c4: 66,
                    d4: 67,
                    e4: 68,
                    f4: 69,
                    g4: 70,
                    h4: 71,
                    a3: 80,
                    b3: 81,
                    c3: 82,
                    d3: 83,
                    e3: 84,
                    f3: 85,
                    g3: 86,
                    h3: 87,
                    a2: 96,
                    b2: 97,
                    c2: 98,
                    d2: 99,
                    e2: 100,
                    f2: 101,
                    g2: 102,
                    h2: 103,
                    a1: 112,
                    b1: 113,
                    c1: 114,
                    d1: 115,
                    e1: 116,
                    f1: 117,
                    g1: 118,
                    h1: 119
                }, l = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], u = 0, d = 0, h = 0, p = -1, m = 32, b = 128, g = 252, f = 255, v = 512, w = 112, y = 14, k = 21, _ = 127, C = "pnbrqkPNBRQK", T = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", S = [];
                S[5] = [-16, -17, -15],
                S[6] = [16, 17, 15],
                S[8] = [-18, -33, -31, -14, 18, 33, 31, 14],
                S[16] = [-17, -15, 17, 15],
                S[32] = [-16, 1, 16, -1],
                S[64] = [-17, -16, -15, 1, 17, 16, 15, -1],
                S[128] = [-17, -16, -15, 1, 17, 16, 15, -1];
                var x = {
                    P: 5,
                    p: 6,
                    N: 9,
                    n: 10,
                    B: 17,
                    b: 18,
                    R: 33,
                    r: 34,
                    Q: 65,
                    q: 66,
                    K: 129,
                    k: 130
                }
                  , E = {
                    P: 4,
                    p: 4,
                    N: 8,
                    n: 8,
                    B: 16,
                    b: 16,
                    R: 32,
                    r: 32,
                    Q: 64,
                    q: 64,
                    K: 128,
                    k: 128
                }
                  , O = {
                    5: "P",
                    6: "p",
                    9: "N",
                    10: "n",
                    17: "B",
                    18: "b",
                    33: "R",
                    34: "r",
                    65: "Q",
                    66: "q",
                    129: "K",
                    130: "k"
                }
                  , A = {
                    9: "N",
                    10: "N",
                    17: "B",
                    18: "B",
                    33: "R",
                    34: "R",
                    65: "Q",
                    66: "Q",
                    129: "K",
                    130: "K"
                }
                  , M = [80, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 80, 0, 0, 80, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 80, 0, 0, 0, 0, 96, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 96, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 96, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 8, 96, 8, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 212, 224, 212, 8, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 224, 0, 224, 96, 96, 96, 96, 96, 96, 0, 0, 0, 0, 0, 0, 8, 212, 224, 212, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 8, 96, 8, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 96, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 96, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 96, 0, 0, 0, 0, 80, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 80, 0, 0, 80, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 80]
                  , P = [336, 80, 80, 0, 0, 0, 96, 352, 96, 0, 0, 0, 80, 80, 336, 0, 80, 336, 80, 80, 0, 0, 96, 352, 96, 0, 0, 80, 80, 336, 80, 0, 80, 80, 336, 80, 80, 0, 96, 352, 96, 0, 80, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 80, 96, 352, 96, 80, 80, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 88, 120, 360, 120, 88, 336, 80, 80, 0, 0, 0, 0, 0, 0, 80, 88, 476, 252, 508, 252, 476, 88, 80, 0, 0, 0, 0, 96, 96, 96, 96, 120, 252, 252, 252, 252, 252, 120, 96, 96, 96, 96, 0, 352, 352, 352, 352, 360, 508, 252, 0, 252, 508, 360, 352, 352, 352, 352, 0, 96, 96, 96, 96, 120, 252, 252, 252, 252, 252, 120, 96, 96, 96, 96, 0, 0, 0, 0, 80, 88, 476, 252, 508, 252, 476, 88, 80, 0, 0, 0, 0, 0, 0, 80, 80, 336, 88, 120, 360, 120, 88, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 80, 80, 96, 352, 96, 80, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 80, 0, 96, 352, 96, 0, 80, 80, 336, 80, 80, 0, 80, 336, 80, 80, 0, 0, 96, 352, 96, 0, 0, 80, 80, 336, 80, 0, 336, 80, 80, 0, 0, 0, 96, 352, 96, 0, 0, 0, 80, 80, 336]
                  , j = [336, 80, 80, 0, 0, 0, 96, 352, 96, 96, 0, 0, 80, 80, 336, 0, 80, 336, 80, 80, 0, 0, 96, 352, 96, 96, 0, 80, 80, 336, 80, 0, 80, 80, 336, 80, 80, 0, 96, 352, 96, 96, 80, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 80, 96, 352, 96, 112, 80, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 88, 120, 360, 120, 120, 336, 80, 80, 0, 0, 0, 0, 0, 0, 80, 88, 476, 252, 508, 252, 508, 88, 80, 0, 0, 0, 0, 96, 96, 96, 96, 120, 252, 252, 252, 252, 252, 252, 104, 96, 96, 96, 0, 352, 352, 352, 352, 360, 508, 252, 0, 252, 508, 488, 352, 352, 352, 352, 0, 96, 96, 96, 96, 120, 252, 252, 252, 252, 252, 252, 104, 96, 96, 96, 0, 0, 0, 0, 80, 88, 476, 252, 508, 252, 508, 88, 80, 0, 0, 0, 0, 0, 0, 80, 80, 336, 88, 120, 360, 120, 120, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 80, 80, 96, 352, 96, 112, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 80, 0, 96, 352, 96, 96, 80, 80, 336, 80, 80, 0, 80, 336, 80, 80, 0, 0, 96, 352, 96, 96, 0, 80, 80, 336, 80, 0, 336, 80, 80, 0, 0, 0, 96, 352, 96, 96, 0, 0, 80, 80, 336]
                  , z = [336, 80, 80, 0, 0, 96, 96, 352, 96, 0, 0, 0, 80, 80, 336, 0, 80, 336, 80, 80, 0, 96, 96, 352, 96, 0, 0, 80, 80, 336, 80, 0, 80, 80, 336, 80, 80, 96, 96, 352, 96, 0, 80, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 112, 96, 352, 96, 80, 80, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 120, 120, 360, 120, 88, 336, 80, 80, 0, 0, 0, 0, 0, 0, 80, 88, 508, 252, 508, 252, 476, 88, 80, 0, 0, 0, 0, 96, 96, 96, 104, 252, 252, 252, 252, 252, 252, 120, 96, 96, 96, 96, 0, 352, 352, 352, 352, 488, 508, 252, 0, 252, 508, 360, 352, 352, 352, 352, 0, 96, 96, 96, 104, 252, 252, 252, 252, 252, 252, 120, 96, 96, 96, 96, 0, 0, 0, 0, 80, 88, 508, 252, 508, 252, 476, 88, 80, 0, 0, 0, 0, 0, 0, 80, 80, 336, 120, 120, 360, 120, 88, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 80, 112, 96, 352, 96, 80, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 80, 96, 96, 352, 96, 0, 80, 80, 336, 80, 80, 0, 80, 336, 80, 80, 0, 96, 96, 352, 96, 0, 0, 80, 80, 336, 80, 0, 336, 80, 80, 0, 0, 96, 96, 352, 96, 0, 0, 0, 80, 80, 336]
                  , W = [336, 80, 80, 0, 0, 96, 96, 352, 96, 96, 0, 0, 80, 80, 336, 0, 80, 336, 80, 80, 0, 96, 96, 352, 96, 96, 0, 80, 80, 336, 80, 0, 80, 80, 336, 80, 80, 96, 96, 352, 96, 96, 80, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 112, 96, 352, 96, 112, 80, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 120, 120, 360, 120, 120, 336, 80, 80, 0, 0, 0, 0, 0, 0, 80, 88, 508, 252, 508, 252, 508, 88, 80, 0, 0, 0, 0, 96, 96, 96, 104, 252, 252, 252, 252, 252, 252, 252, 104, 96, 96, 96, 0, 352, 352, 352, 352, 488, 508, 252, 0, 252, 508, 488, 352, 352, 352, 352, 0, 96, 96, 96, 104, 252, 252, 252, 252, 252, 252, 252, 104, 96, 96, 96, 0, 0, 0, 0, 80, 88, 508, 252, 508, 252, 508, 88, 80, 0, 0, 0, 0, 0, 0, 80, 80, 336, 120, 120, 360, 120, 120, 336, 80, 80, 0, 0, 0, 0, 80, 80, 336, 80, 112, 96, 352, 96, 112, 80, 336, 80, 80, 0, 0, 80, 80, 336, 80, 80, 96, 96, 352, 96, 96, 80, 80, 336, 80, 80, 0, 80, 336, 80, 80, 0, 96, 96, 352, 96, 96, 0, 80, 80, 336, 80, 0, 336, 80, 80, 0, 0, 96, 96, 352, 96, 96, 0, 0, 80, 80, 336]
                  , L = [336, 80, 80, 112, 112, 112, 96, 352, 96, 96, 112, 112, 112, 80, 336, 0, 80, 336, 80, 112, 112, 112, 112, 352, 96, 112, 112, 112, 112, 336, 80, 0, 80, 80, 336, 112, 112, 112, 112, 368, 112, 112, 112, 112, 368, 80, 80, 0, 80, 80, 80, 368, 112, 112, 112, 368, 112, 112, 112, 368, 112, 80, 80, 0, 80, 80, 80, 112, 368, 120, 120, 376, 120, 120, 368, 112, 112, 80, 80, 0, 0, 80, 88, 120, 120, 508, 252, 508, 252, 508, 120, 120, 120, 88, 80, 0, 96, 104, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 104, 0, 352, 352, 480, 480, 488, 508, 252, 0, 252, 508, 488, 480, 480, 480, 352, 0, 96, 104, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 104, 0, 0, 80, 88, 120, 120, 508, 252, 508, 252, 508, 120, 120, 120, 88, 80, 0, 80, 80, 80, 112, 368, 120, 120, 376, 120, 120, 368, 112, 112, 80, 80, 0, 80, 80, 80, 368, 112, 112, 112, 368, 112, 112, 112, 368, 112, 80, 80, 0, 80, 80, 336, 112, 112, 112, 112, 368, 112, 112, 112, 112, 368, 80, 80, 0, 80, 336, 80, 112, 112, 112, 112, 352, 96, 112, 112, 112, 112, 336, 80, 0, 336, 80, 80, 112, 112, 112, 96, 352, 96, 96, 112, 112, 112, 80, 336]
                  , I = [17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0, 0, 17, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 33, 16, 31, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 17, 16, 15, 14, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -14, -15, -16, -17, -18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, -31, -16, -33, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0, 0, -15, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0, -15, 0, 0, 0, 0, 0, 0, -16, 0, 0, 0, 0, 0, 0, -17]
                  , R = [0, 5, 8, 11, 14]
                  , N = [31, 7, 7, 7, 63]
                  , B = {
                    P: 0,
                    p: 0,
                    N: 5,
                    n: 5,
                    B: 8,
                    b: 8,
                    R: 11,
                    r: 11,
                    Q: 14,
                    q: 14
                }
                  , F = [4, 8, 16, m, 64]
                  , D = ["", "N", "B", "R", "Q"]
                  , $ = {
                    CAPTURE: 1,
                    BIG_PAWN: 2,
                    EP_CAPTURE: 4,
                    ANY_CAPTURE: 5,
                    PROMOTION: 8,
                    KSIDE_CASTLE: 16,
                    QSIDE_CASTLE: 32,
                    KQSIDE_CASTLE: 48,
                    DROP: 64,
                    DROP_OR_PROMOTE: 72
                }
                  , q = [0, 6, 1]
                  , U = {
                    K: 119,
                    Q: 112,
                    k: 7,
                    q: 0,
                    A: 112,
                    B: 113,
                    C: 114,
                    D: 115,
                    E: 116,
                    F: 117,
                    G: 118,
                    H: 119,
                    a: 0,
                    b: 1,
                    c: 2,
                    d: 3,
                    e: 4,
                    f: 5,
                    g: 6,
                    h: 7
                }
                  , Z = ["Event", "Site", "Date", "Round", "White", "Black", "Result"]
                  , G = ["Event", "Site", "Date", "Round", "White", "Black", "Result", "Variant", "SetUp", "FEN", "WhiteA", "WhiteB", "BlackA", "BlackB"];
                function rank(e) {
                    return e >> 4
                }
                function file(e) {
                    return 7 & e
                }
                function algebraic(e) {
                    return String.fromCharCode(file(e) + 97) + (8 - rank(e))
                }
                function swapColor(e) {
                    return 3 - e
                }
                function hashNum(e, t) {
                    e[0] = (e[0] ^ t[0]) >>> 0,
                    e[1] = (e[1] ^ t[1]) >>> 0
                }
                function completeFen(e) {
                    var t, a;
                    return (t = ["", " w - - 0 1", " - - 0 1", " - 0 1", " 0 1", " 1"][(a = (e = e.trim()).split(" ")).length]) && e ? e += t : "0" === a[5] && (a[5] = 1,
                    e = a.join(" ")),
                    e
                }
                function createVariantZobristNumbers() {
                    s.zobristCheck = [[441249556, 340005552], [1040760204, 311043682], [1621584863, 1749286446], [1006868636, 1625552915], [1953853171, 24921145], [161251506, 1935545265]]
                }
                function validateFen(e, t) {
                    var a, s, n, r, i, l, c, u, d, h, p, m, b, g, f, v, w, y, k, _, T = /^(?:[A-H]{1,2}[a-h]{0,2}|[A-H]{0,2}[a-h]{1,2}|KQ?k?q?|Qk?q?|kq?|q|-)$/, S = 1 * t === o.Crazyhouse || o[t] === o.Crazyhouse || 1 * t === o.Bughouse || o[t] === o.Bughouse, x = 0, E = 0, O = !0, A = "", M = {
                        0: 0,
                        7: 0
                    }, P = {
                        0: 0,
                        7: 0
                    }, j = {
                        0: "k",
                        7: "K"
                    }, z = {
                        0: "r",
                        7: "R"
                    }, W = 1 * t === o.Chess960 || o[t] === o.Chess960;
                    if (!e)
                        return 1;
                    if ((1 * t === o.Bughouse || o[t] === o.Bughouse) && 2 === (i = e.split(" | ")).length)
                        return 0 === (l = validateFen(i[0], t)) && (l = validateFen(i[1], t)),
                        l;
                    if (i = e.split(/\s+/),
                    (1 * t === o["3-check"] || o[t] === o["3-check"]) && 7 === i.length && (r = i.pop(),
                    !/^\+[0-3]\+[0-3]$/.test(r) || "+3+3" === r))
                        return 14;
                    if (6 !== i.length)
                        return 1;
                    if (/\D|.{7,}|^0|^$/.test(i[5]))
                        return 2;
                    if (/\D|.{7,}|^0.|^$/.test(i[4]))
                        return 3;
                    if (!/^(?:-|[abcdefgh][36])$/.test(i[3]))
                        return 4;
                    if (h = i[2],
                    W) {
                        if (!T.test(h))
                            return 12
                    } else if (!/^(?:KQ?k?q?|Qk?q?|kq?|q|-)$/.test(h)) {
                        if (void 0 !== t || !T.test(h))
                            return 5;
                        W = !0
                    }
                    if ("w" !== i[1] && "b" !== i[1])
                        return 6;
                    if (S && (i[0] = i[0].replace(/~(?=.*\/)/g, "")),
                    s = i[0].split("/"),
                    S && 9 === s.length && (r = s.pop(),
                    !/^[pnbrq]{0,63}$/i.test(r)))
                        return 13;
                    if (8 !== s.length)
                        return 7;
                    if ("3" === i[3][1] && "w" === i[1] || "6" === i[3][1] && "b" === i[1])
                        return 11;
                    for ("-" !== i[3] && (c = 4 == (E = "3" === i[3][1] ? 4 : 3) ? 5 : 2,
                    x = i[3].charCodeAt(0) - 97,
                    O = !1,
                    A = 4 === E ? "P" : "p"),
                    a = 0; a < s.length; ++a) {
                        for (y = 0,
                        k = !1,
                        _ = 0; _ < s[a].length; _++)
                            if (+(n = s[a][_]) == +n) {
                                if (k)
                                    return 8;
                                y += 1 * n,
                                k = !0
                            } else {
                                if (-1 === C.indexOf(n))
                                    return 9;
                                if (O || E !== a || x !== y || A !== n || (O = !0),
                                c === a && x === y)
                                    return 11;
                                a % 7 == 0 && (n === j[a] ? P[a] = 1 << y : n === z[a] && (M[a] |= 1 << y)),
                                ++y,
                                k = !1
                            }
                        if (8 !== y)
                            return 10
                    }
                    if (!O)
                        return 11;
                    if ("-" !== h)
                        if (W)
                            for (m = {
                                0: 0,
                                1: 0,
                                2: 252,
                                4: 248,
                                8: 240,
                                16: 224,
                                32: 192,
                                64: 128,
                                128: 0
                            },
                            p = {
                                0: 0,
                                1: 0,
                                2: 1,
                                4: 3,
                                8: 7,
                                16: 15,
                                32: 31,
                                64: 63,
                                128: 0
                            },
                            w = {
                                0: [0, 0],
                                7: [0, 0]
                            },
                            a = h.length - 1; a >= 0; --a) {
                                if (f = h.charCodeAt(a),
                                v && v > f && v - f < 8)
                                    return 15;
                                if (75 === f ? b = M[g = 7] & m[P[g]] : 81 === f ? b = M[g = 7] & p[P[g]] : 107 === f ? b = M[g = 0] & m[P[g]] : 113 === f ? b = M[g = 0] & p[P[g]] : (b = 1 << f - ((g = f >= 97 ? 0 : 7) ? 65 : 97),
                                v = f),
                                !b || 0 != (b & b - 1))
                                    return 15;
                                if (P[g] < 2 || P[g] > 64 || (b & M[g]) !== b)
                                    return 15;
                                if (++w[g][1 * (P[g] < b)] > 1)
                                    return 15
                            }
                        else {
                            if ((u = (h.indexOf("K") > -1 ? 128 : 0) | (h.indexOf("Q") > -1 ? 1 : 0)) && (16 !== P[7] || (u & M[7]) !== u))
                                return 15;
                            if ((d = (h.indexOf("k") > -1 ? 128 : 0) | (h.indexOf("q") > -1 ? 1 : 0)) && (16 !== P[0] || (d & M[0]) !== d))
                                return 15
                        }
                    return 0
                }
                function handToString(e, t) {
                    var a, s, n = "", o = 0, r = t ? 6 : 0;
                    if (e)
                        for (; o < 5; ) {
                            for (a = e >> R[o] & N[o],
                            s = 0; s < a; ++s)
                                n += C[o + r];
                            ++o
                        }
                    return n
                }
                function hashEP(e, t, a, n) {
                    e[a + 1] !== n && e[a - 1] !== n || hashNum(t, s.zobristEnPassant[file(a)])
                }
                function addPawnMove(e, a, s) {
                    var n;
                    (0 === t || 2 & l[a]) && (rank(a) % 7 == 0 ? (n = s | $.PROMOTION | e << 7 | a << y,
                    c[d++] = 8388608 | n,
                    c[d++] = 6291456 | n,
                    c[d++] = 4194304 | n,
                    c[d++] = 2097152 | n) : c[d++] = s | e << 7 | a << y)
                }
                function kingOfTheHillWin(e) {
                    switch (e) {
                    case 67:
                    case 68:
                    case 51:
                    case 52:
                        return !0
                    }
                    return !1
                }
                function canCastle960(e, t, a, s) {
                    var n, o, r, i = t + (a - t % 8), c = a > t % 8 ? 1 : -1;
                    for (r = t + c; r !== i; r += c)
                        if (e[r])
                            return !1;
                    if (o = (n = 1 === s ? 1 === c ? 118 : 114 : 1 === c ? 6 : 2) - c,
                    l[n] || e[n] && n !== t && n !== i || e[o] && o !== t && o !== i)
                        return !1;
                    if (n !== t)
                        for (r = t + (c = n > t ? 1 : -1); r !== n; r += c)
                            if (r !== i && e[r] || l[r])
                                return !1;
                    return !0
                }
                var H = function() {
                    function createLine(e, t, a, s, n, r) {
                        var i, l, c, u, d, h, p, m, b, g, f, v, w = [], y = "", k = !0, _ = t[a], C = _.length, T = "";
                        if (_.commands && !r)
                            for (d in _.commands)
                                T += "[%" + d + " " + _.commands[d] + "]";
                        for (_.initComment && (T = (T + " " + _.initComment.replace(/(\"|\}|\%|\\)/g, "\\$1")).trim()),
                        T && w.push("{" + T + "}"),
                        c = 0; c < C; ++c) {
                            if (p = 1 === (l = _[c]).color,
                            y = "",
                            T = "",
                            i = l.commands,
                            s !== o.Bughouse ? (k && !p ? y = e + "..." : p && (y = e + "."),
                            n && (p || k) && (y += " ")) : (w.bughouseOrder || (w.bughouseOrder = []),
                            w.bughouseOrder.push(l.bughouseOrder),
                            c || (w.blackCountOffset = 2 === _[0].color ? 1 : 0)),
                            y += l.san,
                            l.annotation && (y += l.annotation),
                            l.additionalAnnotation && (y += " " + l.additionalAnnotation.join(" ")),
                            k = !1,
                            void 0 === l.time || i || (i = {
                                clk: (g = l.time,
                                f = void 0,
                                v = void 0,
                                f = Math.floor(g % 36e3 / 600),
                                v = Math.floor(g % 36e3 % 600) / 10,
                                Math.floor(g / 36e3) + ":" + (f < 10 ? "0" : "") + f + ":" + (v < 10 ? "0" : "") + v)
                            }),
                            i && !r)
                                for (d in i)
                                    T += "[%" + d + " " + i[d] + "]";
                            if (l.comment && (T = (T + " " + l.comment.replace(/(\"|\}|\%|\\)/g, "\\$1")).trim()),
                            T && (y += " {" + T + "}",
                            k = !0),
                            w.push(y),
                            l.lines)
                                for (m = l.lines.length,
                                u = 0; u < m; ++u)
                                    t[b = l.lines[u]].length && ((h = createLine(e, t, b, s, n, r))[0] = "(" + h[0],
                                    h[h.length - 1] += ")",
                                    w = w.concat(h),
                                    k = !0);
                            p || e++
                        }
                        return w
                    }
                    function createHeader(e, t) {
                        return "[" + e + ' "' + String(t).replace(/(\"|\\)/g, "\\$1") + '"]'
                    }
                    return function generatePgn2(e, t, a, s, n, r) {
                        var i, l, c = "string" == typeof e.newline ? e.newline : "\n", u = void 0 === e.spaceAfterPeriods || e.spaceAfterPeriods, d = "";
                        for (i in d += createHeader("Event", t.Event) + c,
                        d += createHeader("Site", t.Site) + c,
                        d += createHeader("Date", t.Date) + c,
                        d += createHeader("Round", t.Round) + c,
                        n === o.Bughouse ? (d += createHeader("WhiteA", t.WhiteA || "?") + c,
                        d += createHeader("BlackA", t.BlackA || "?") + c,
                        d += createHeader("WhiteB", t.WhiteB || "?") + c,
                        d += createHeader("BlackB", t.BlackB || "?") + c) : (d += createHeader("White", t.White) + c,
                        d += createHeader("Black", t.Black) + c),
                        d += createHeader("Result", t.Result) + c,
                        n && (d += createHeader("Variant", t.Variant) + c),
                        t.FEN && t.FEN !== T && (d += createHeader("SetUp", "1") + c,
                        d += createHeader("FEN", t.FEN) + c),
                        t)
                            -1 === G.indexOf(i) && (d += createHeader(i, t[i]) + c);
                        if (d += c,
                        l = createLine(s, a, 0, n, u, e.hideCommands),
                        n === o.Bughouse) {
                            if (r.isDependent)
                                return l;
                            l = function makeBugHousePgn(e, t, a) {
                                var s = t
                                  , n = e.siblingGame.pgn()
                                  , o = 0
                                  , r = 0
                                  , i = [];
                                for (t.bughouseOrder = t.bughouseOrder || [],
                                n.bughouseOrder = n.bughouseOrder || []; t.bughouseOrder.length || n.bughouseOrder.length; )
                                    !t.bughouseOrder.length || n.bughouseOrder.length && t.bughouseOrder[0] > n.bughouseOrder[0] ? (n.bughouseOrder.shift(),
                                    i.push("B")) : (t.bughouseOrder.shift(),
                                    i.push("A"));
                                return t = [],
                                i.forEach((function(i) {
                                    var l, c, u, d = "";
                                    "A" === i ? (l = s,
                                    c = ++o,
                                    u = e.startingMoveNumber()) : (l = n,
                                    c = ++r,
                                    u = e.siblingGame.startingMoveNumber()),
                                    d = String(Math.floor((c + 1) / 2) + u - 1),
                                    (l.blackCountOffset + c) % 2 ? d += i : d += i.toLowerCase(),
                                    d += "." + (a ? " " : "") + l.shift(),
                                    t.push(d)
                                }
                                )),
                                t
                            }(r, l, u)
                        }
                        return l.push(t.Result),
                        d + function wordWrap(e, t, a) {
                            return t < 1 ? e : (t = "number" == typeof t ? t : 80,
                            e.replace(new RegExp("(.{1," + t + "})(?: |$|\r?\n)","g"), "$1" + a).slice(0, -a.length))
                        }(l.join(" "), e.maxWidth, c)
                    }
                }()
                  , V = function() {
                    var e = "!?â€¼â‡â‰âˆâ–¡âˆ‡Î”âˆžâ©²â©±Â±âˆ“â¨€âŸ³â†’â†‘â‡†âˆ†âŒ“â‡”â‡—âŸ«âŸªâœ•âŠ¥âŠ•â—‹â‡„â†»âŠ™~"
                      , t = /\[%(\S+)\s([^\]]+)\]/
                      , a = /^(?:[+=~\/\-\u2212]+|T?N|RR|D)$/;
                    function extractCommands(e) {
                        var a, s, n = {};
                        do {
                            (a = t.exec(e.value)) && (s = !0,
                            e.value = e.value.replace(a[0], "").trim(),
                            n[a[1]] = a[2])
                        } while (a);
                        s && (e.commands = n)
                    }
                    function isSplitGame(e, t, a) {
                        for (var s; ++t < a; )
                            if (s = e[t].match(/^\s*(\S+)/))
                                return /^(?:\[|1(?:\.|$))/.test(s[1])
                    }
                    return function tokenize(t, s) {
                        var n, o, r, i, l, c, u, d = "tags", h = [], p = {
                            type: d,
                            value: ""
                        }, m = 0, b = [], g = !0;
                        for (s = s || {},
                        i = (n = t.split(/\r?\n/)).length,
                        o = 0; o < i; ++o)
                            if ("%" !== (r = n[o].trim())[0])
                                if (r) {
                                    if (c = (r = " " + r + " ").length,
                                    l = 0,
                                    g)
                                        for (; l < c; ++l)
                                            if (u = r[l],
                                            "tags" === d) {
                                                if ("[" === u)
                                                    p = {
                                                        type: d = "tagName",
                                                        value: ""
                                                    };
                                                else if (u.trim()) {
                                                    p = {
                                                        type: d = "san",
                                                        value: ""
                                                    },
                                                    g = !1;
                                                    break
                                                }
                                            } else if ("tagName" === d)
                                                p.value && "" === u.trim() ? (h.push(p),
                                                d = "tagValueStart") : " " !== u && (p.value += u);
                                            else if ("tagValueStart" === d) {
                                                if ('"' === u || "â€œ" === u)
                                                    p = {
                                                        type: d = "tagValue",
                                                        value: ""
                                                    };
                                                else if (u.trim())
                                                    return !1
                                            } else if ("tagValue" === d)
                                                '"' === u || "â€" === u ? (h.push(p),
                                                "]" === r[l + 1] ? (p = {
                                                    type: d = "tags",
                                                    value: ""
                                                },
                                                ++l) : d = "tagEnd") : ("\\" === u && l + 2 < c && (u = r[++l]),
                                                l > 0 && (p.value += u));
                                            else if ("]" === u)
                                                p = {
                                                    type: d = "tags",
                                                    value: ""
                                                };
                                            else if (u.trim())
                                                return !1;
                                    for (; l < c; ++l)
                                        if (u = r[l],
                                        "san" === d)
                                            if (e.indexOf(u) > -1)
                                                "!" === u || "?" === u || e.indexOf(u) < 6 && (u = ["!!", "??", "!?", "?!"][e.indexOf(u) - 2]) ? (p.value && h.push(p),
                                                p = {
                                                    type: "a",
                                                    value: u
                                                },
                                                "!" !== r[l + 1] && "?" !== r[l + 1] || (p.value += r[++l]),
                                                h.push(p),
                                                p = {
                                                    type: "san",
                                                    value: ""
                                                }) : ("âˆž" === u && "=/" === p.value ? (p.type = "aa",
                                                p.value += u) : (p.value && (a.test(p.value) && ("--" !== p.value || s.rejectNullMoves) && (p.type = "aa"),
                                                h.push(p)),
                                                p = {
                                                    type: "aa",
                                                    value: u
                                                },
                                                "â†‘" === u && "â†‘" === r[l + 1] && (p.value = "â†»",
                                                ++l)),
                                                h.push(p),
                                                p = {
                                                    type: "san",
                                                    value: ""
                                                });
                                            else if (" " === u || "\t" === u || "\n" === u || "\r" === u || "{" === u || "(" === u || ")" === u) {
                                                if (p.value) {
                                                    if ("$" === p.value[0])
                                                        p.type = "nag";
                                                    else if ("*" === p.value || "1-0" === p.value || "0-1" === p.value || "1/2-1/2" === p.value || "Â½-Â½" === p.value) {
                                                        if (l + 1 < c)
                                                            return !1;
                                                        p.type = "result",
                                                        "Â½-Â½" === p.value && (p.value = "1/2-1/2")
                                                    }
                                                    a.test(p.value) && ("--" !== p.value || s.rejectNullMoves) && (p.type = "aa"),
                                                    h.push(p),
                                                    p = {
                                                        type: d,
                                                        value: ""
                                                    }
                                                }
                                                if (" " === u || "\t" === u || "\n" === u || "\r" === u)
                                                    d = "san";
                                                else if ("{" === u)
                                                    d = "comment";
                                                else if ("(" === u)
                                                    d = "san",
                                                    h.push({
                                                        type: "variationStart",
                                                        value: ++m
                                                    });
                                                else if (h.push({
                                                    type: "variationEnd",
                                                    value: m
                                                }),
                                                d = "san",
                                                !m--)
                                                    return !1;
                                                p.type = d
                                            } else if ("." === u || !p.value && +u == +u && "-" !== r[l + 1] && "/" !== r[l + 1]) {
                                                if (+u == +u)
                                                    switch (p.number || (p.number = ""),
                                                    p.number += u,
                                                    r[l + 1]) {
                                                    case "A":
                                                    case "a":
                                                    case "B":
                                                    case "b":
                                                        p.number += r[++l],
                                                        h.push({
                                                            type: "number",
                                                            value: p.number
                                                        }),
                                                        delete p.number
                                                    }
                                            } else
                                                p.value += u;
                                        else
                                            0 === l && (p.value = p.value.trim()),
                                            "}" !== u ? ("\\" === u && l + 2 < c && (u = r[++l]),
                                            p.value += u) : (p.value = p.value.trim(),
                                            p.value.indexOf("[") > -1 && extractCommands(p),
                                            h.push(p),
                                            p = {
                                                type: d = "san",
                                                value: ""
                                            })
                                } else
                                    "tags" === d ? (d = "san",
                                    g = !1) : "comment" !== d && "tagValueStart" !== d && !m && h.length && isSplitGame(n, o, i) && ("tagValue" !== h[h.length - 1].type && (b.push(h),
                                    h = []),
                                    d = "tags",
                                    g = !0);
                        return b.push(h),
                        b
                    }
                }();
                function Chess2(G, K) {
                    var Y, Q, J = 0, X = !0, ee = [], te = 1, ae = [], se = p, ne = 0, oe = 1, re = 1, ie = [], le = [ie], ce = 0;
                    ie.id = ce;
                    var ue = {}
                      , de = []
                      , he = !1
                      , pe = !1
                      , me = makeMoveChess;
                    function hashPosition() {
                        var e, t, a, n = 1 === te ? [4174784170, 2938602761] : [0, 0];
                        for (a = 0; a < 120; ++a)
                            136 & a && (a += 8),
                            (e = Q[a]) && hashNum(n, s.zobristPiece[64 * s.zobristPieceValueNumbers[e & f] + 8 * (7 - rank(a)) + file(a)]);
                        if (pe)
                            for (t = 1; t < 3; ++t)
                                ae[t] && (0 != (ae[t] & ae[t] - 1) ? (hashNum(n, s.zobristCastle[t - 1]),
                                hashNum(n, s.zobristCastle[t + 1])) : ae[t] > 1 << file(ee[t]) ? hashNum(n, s.zobristCastle[t - 1]) : hashNum(n, s.zobristCastle[t + 1]));
                        else {
                            for (t = 1; t < 3; ++t)
                                ae[t] && (ae[t] & $.KSIDE_CASTLE && hashNum(n, s.zobristCastle[t - 1]),
                                ae[t] & $.QSIDE_CASTLE && hashNum(n, s.zobristCastle[t + 1]));
                            he ? function hashHand(e, t) {
                                var a, n, o, r, i, l, c, u = 0;
                                for (a = 1; a < 3; ++a) {
                                    if (n = t[a])
                                        for (o = 0; o < 5; ) {
                                            for (i = u + 63 * o,
                                            r = n >> R[o] & N[o],
                                            l = 0; l < r; ++l)
                                                hashNum(e, [31 * (c = s.zobristPiece[i++])[0] >>> 0, 17 * c[1] >>> 0]);
                                            ++o
                                        }
                                    u = 315
                                }
                            }(n, Y._hand) : J === o["3-check"] && function hash3Check(e, t) {
                                t[1] && hashNum(e, s.zobristCheck[t[1] - 1]),
                                t[2] && hashNum(e, s.zobristCheck[t[2] + 2])
                            }(n, de)
                        }
                        return se !== p && hashEP(Q, n, se + (1 === te ? 16 : -16), 4 | te),
                        n
                    }
                    function getCurrentHash() {
                        var e;
                        return ie.length ? e = ie[ie.length - 1].hash : (ie.hash || (ie.hash = hashPosition()),
                        e = ie.hash),
                        [e[0], e[1]]
                    }
                    function setVariant(e, t) {
                        J !== (J = e ? o[e] || 1 * e || o[String(e).replace(/ /g, "").toLowerCase()] || o.Chess : 0) && (J === o.Bughouse ? (he = !0,
                        Y.isDependent || (Y.siblingGame = Chess2(),
                        Y.siblingGame.hashing(X),
                        Y.siblingGame.isDependent = !0,
                        Y.siblingGame.siblingGame = Y,
                        Y.siblingGame.header({
                            Variant: "Bughouse"
                        })),
                        createVariantZobristNumbers(),
                        me = makeMoveVariant) : (delete Y.siblingGame,
                        he = J === o.Crazyhouse,
                        pe = J === o.Chess960,
                        J ? (createVariantZobristNumbers(),
                        me = makeMoveVariant) : me = makeMoveChess),
                        t || updateSetup(generateFen()))
                    }
                    function disambiguate960Rook(e, t) {
                        for (var a, s, n = e > 7 ? 1 : 2; !(136 & e); ) {
                            if ((a = Q[e]) & n)
                                if (a & m) {
                                    if (s)
                                        return;
                                    s = e % 8 + (1 === n ? 65 : 97)
                                } else if (a & b)
                                    return s;
                            e += t
                        }
                    }
                    function clear(e, t, a) {
                        Q = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                        te = 1,
                        ee[1] = p,
                        ee[2] = p,
                        ae[1] = 0,
                        ae[2] = 0,
                        Y._hand[1] = 0,
                        Y._hand[2] = 0,
                        de[1] = 0,
                        de[2] = 0,
                        se = p,
                        ne = 0,
                        oe = 1,
                        t || (le = [ie = []],
                        ce = 0,
                        ie.id = ce,
                        ue = {
                            Event: "?",
                            Site: "?",
                            Date: "????.??.??",
                            Round: "?",
                            White: "?",
                            Black: "?",
                            Result: "*"
                        },
                        e ? setHeader(["Variant", e]) : setVariant(!1, a),
                        a || updateSetup(generateFen()))
                    }
                    function reset() {
                        clear(0, !1, !0),
                        ie.hash = [1178310168, 378666140],
                        Q = [34, 10, 18, 66, 130, 18, 10, 34, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 33, 9, 17, 65, 129, 17, 9, 33],
                        re = 1,
                        ee[1] = 116,
                        ee[2] = 4,
                        ae[1] = 48,
                        ae[2] = 48
                    }
                    function load(e, t, a, s) {
                        var n, l, c, u, d, h, g, f, w, y, k, _, C = 0;
                        if (s ? (_ = (n = e.split(" "))[3],
                        k = n[2]) : (_ = (n = e.trim().split(/\s+/))[3] || "-",
                        k = n[2] || "-"),
                        void 0 === t ? (31 & k.charCodeAt(0)) < 9 && setVariant(o.Chess960, !0) : setVariant(t, !0),
                        l = n[0],
                        !s && !(l = function fixFenPieces(e, t) {
                            var a, s, n = e.length, r = 0, i = 0, l = t && (t === o.Crazyhouse || t === o.Bughouse);
                            for (a = 0; a < n; ++a)
                                if (+(s = e[a]) != +s)
                                    if ("/" === s) {
                                        if (8 !== i && (e = e.substr(0, a) + (8 - i) + e.substr(a),
                                        ++a,
                                        ++n),
                                        i = 0,
                                        ++r > 7) {
                                            if (!l && a < n - 1 || !/^[pnbrq]{0,63}$/i.test(e.substr(a + 1)))
                                                return !1;
                                            break
                                        }
                                    } else if (x[s]) {
                                        if (++i > 8)
                                            return !1
                                    } else {
                                        if ("~" !== s)
                                            return !1;
                                        l && a && /[nbrq]/i.test(e[a - 1]) || (e = e.substr(0, a) + e.substr(a + 1),
                                        --a,
                                        --n)
                                    }
                                else
                                    (i += 1 * s) > 8 && (e = e.substr(0, a) + (s - (i - 8)) + e.substr(a + 1),
                                    i = 8);
                            return e
                        }(l, J)))
                            return !1;
                        if (u = l.length,
                        clear(r[J], a, !0),
                        he) {
                            if (J === o.Bughouse && !Y.isDependent && (h = e.split(" | "),
                            !Y.siblingGame.load(1 === h.length ? e : h[1], t, a, s)))
                                return reset(),
                                !1;
                            for (d = 0; d < u; ++d)
                                if (+(g = l[d]) != +g)
                                    if ("/" === g) {
                                        if (C > 111) {
                                            for (++d; d < u; ++d)
                                                g = l[d],
                                                Y._hand[g < "a" ? 1 : 2] += 1 << B[g] >>> 0;
                                            break
                                        }
                                        C += 8
                                    } else
                                        Q[C] = x[g],
                                        "~" === l[d + 1] && (++d,
                                        Q[C] |= v),
                                        Q[C] & b && (ee[3 & Q[C]] = C),
                                        ++C;
                                else
                                    C += 1 * g
                        } else
                            for (d = 0; d < u; ++d)
                                +(g = l[d]) != +g ? "/" === g ? C += 8 : (Q[C] = x[g],
                                Q[C] & b && (ee[3 & Q[C]] = C),
                                ++C) : C += 1 * g;
                        if (te = "b" === n[1] ? 2 : 1,
                        "-" !== k)
                            if (pe) {
                                for (w = {
                                    1: [0, 0],
                                    2: [0, 0]
                                },
                                d = k.length - 1; d >= 0; --d)
                                    75 === (c = k.charCodeAt(d)) ? c = disambiguate960Rook(119, -1) : 81 === c ? c = disambiguate960Rook(112, 1) : 107 === c ? c = disambiguate960Rook(7, -1) : 113 === c && (c = disambiguate960Rook(0, 1)),
                                    f = c < 97 ? 1 : 2,
                                    y = U[String.fromCharCode(c)],
                                    (g = Q[y]) === (m | f) && (c >= 97 ? ee[f] >= 1 && ee[f] <= 6 && (ae[f] |= 1 << c - 97) : ee[f] >= 113 && ee[f] <= 118 && (ae[f] |= 1 << c - 65),
                                    ++w[f][1 * (ee[f] < y)]);
                                (w[1][0] > 1 || w[1][1] > 1) && (ae[1] = 0),
                                (w[2][0] > 1 || w[2][1] > 1) && (ae[2] = 0)
                            } else {
                                if (!s)
                                    for (d = k.length - 1; d >= 0; --d)
                                        g = Q[U[k[d]]],
                                        f = k.charCodeAt(d) < 97 ? 1 : 2,
                                        g === (m | f) && ee[f] === (1 === f ? 116 : 4) || (k = k.substr(0, d) + k.substr(d + 1) || "-");
                                for (d = k.length - 1; d >= 0; --d)
                                    switch (k[d]) {
                                    case "K":
                                        ae[1] |= $.KSIDE_CASTLE;
                                        break;
                                    case "Q":
                                        ae[1] |= $.QSIDE_CASTLE;
                                        break;
                                    case "k":
                                        ae[2] |= $.KSIDE_CASTLE;
                                        break;
                                    case "q":
                                        ae[2] |= $.QSIDE_CASTLE
                                    }
                            }
                        return !s && (2 !== _.length || 1 === te && "6" !== _[1] || 2 === te && "3" !== _[1] || Q[_.charCodeAt(0) - 97 + 16 * (8 - ("3" === _[1] ? 4 : 5))] !== (4 | swapColor(te)) || Q[i[_]]) && (_ = "-"),
                        se = "-" === _ ? p : i[_],
                        ne = 1 * n[4] || 0,
                        oe = 1 * n[5] || 1,
                        J === o["3-check"] && (n[6] && "+3+3" !== n[6] && (h = n[6].match(/^\+([0-3])\+([0-3])$/)),
                        h = h || [0, 0, 0],
                        de[1] = 1 * h[1],
                        de[2] = 1 * h[2]),
                        a || (re = oe,
                        updateSetup(generateFen())),
                        !0
                    }
                    function generateFen() {
                        return J ? function generateVariantFen() {
                            var e, t, a, s = 0, n = "", r = "";
                            for (e = 0; e < 120; ++e)
                                136 & e && (s && (n += s),
                                n += "/",
                                s = 0,
                                e += 8),
                                (a = Q[e]) ? (s && (n += s,
                                s = 0),
                                n += O[a & f],
                                he && a & v && (n += "~")) : ++s;
                            if (s && (n += s),
                            he && (n += "/" + handToString(Y._hand[1], !0) + handToString(Y._hand[2])),
                            pe) {
                                for (t = ae[2],
                                e = 0; t; )
                                    1 & t && (r = String.fromCharCode(e + 97) + r),
                                    t >>= 1,
                                    ++e;
                                for (t = ae[1],
                                e = 0; t; )
                                    1 & t && (r = String.fromCharCode(e + 65) + r),
                                    t >>= 1,
                                    ++e
                            } else
                                ae[1] & $.KSIDE_CASTLE && (r += "K"),
                                ae[1] & $.QSIDE_CASTLE && (r += "Q"),
                                ae[2] & $.KSIDE_CASTLE && (r += "k"),
                                ae[2] & $.QSIDE_CASTLE && (r += "q");
                            return n += " " + (1 === te ? "w" : "b") + " " + (r || "-") + " " + (se === p ? "-" : algebraic(se)) + " " + ne + " " + oe,
                            J === o["3-check"] ? n += " +" + de[1] + "+" + de[2] : J !== o.Bughouse || Y.isDependent || (n += " | " + Y.siblingGame.fen()),
                            n
                        }() : function generateStandardFen() {
                            var e, t, a = 0, s = "", n = "";
                            for (e = 0; e < 120; ++e)
                                136 & e && (a && (s += a),
                                s += "/",
                                a = 0,
                                e += 8),
                                (t = Q[e]) ? (a && (s += a,
                                a = 0),
                                s += O[t & f]) : ++a;
                            return a && (s += a),
                            ae[1] & $.KSIDE_CASTLE && (n += "K"),
                            ae[1] & $.QSIDE_CASTLE && (n += "Q"),
                            ae[2] & $.KSIDE_CASTLE && (n += "k"),
                            ae[2] & $.QSIDE_CASTLE && (n += "q"),
                            s + " " + (1 === te ? "w" : "b") + " " + (n || "-") + " " + (se === p ? "-" : algebraic(se)) + " " + ne + " " + oe
                        }()
                    }
                    function setHeader(e) {
                        var t, a, s;
                        for (t = 0; t < e.length; t += 2)
                            a = e[t],
                            s = e[t + 1],
                            a && ("Variant" === a && (setVariant(s),
                            s = J ? r[J] : void 0),
                            "Result" === a && "*" !== s && "1-0" !== s && "0-1" !== s && "1/2-1/2" !== s && (s = "*"),
                            void 0 !== s ? ue[a] = String(s) : Z.indexOf(a) > -1 ? ue[a] = "Date" === a ? "????.??.??" : "?" : delete ue[a]);
                        return ue
                    }
                    function updateSetup(e) {
                        ie.length > 0 || ce || (e !== T ? (ue.SetUp = "1",
                        ue.FEN = e,
                        ie.hash = null) : (delete ue.SetUp,
                        delete ue.FEN,
                        ie.hash = [1178310168, 378666140]))
                    }
                    function get(e) {
                        var t = Q[i[e]];
                        return t ? {
                            type: O[t & g | 2],
                            color: 3 & t,
                            promoted: 0 != (t & v)
                        } : null
                    }
                    function calculateLegalMoveInfo(s, o) {
                        var r, i, c, u, d, h, m, f, v, y, k, _, C, T, x = te, E = b | x, O = l;
                        if (e = [],
                        t = 0,
                        a = 0,
                        n = 0,
                        O[0] = O[1] = O[2] = O[3] = O[4] = O[5] = O[6] = O[7] = O[16] = O[17] = O[18] = O[19] = O[20] = O[21] = O[22] = O[23] = O[32] = O[33] = O[34] = O[35] = O[36] = O[37] = O[38] = O[39] = O[48] = O[49] = O[50] = O[51] = O[52] = O[53] = O[54] = O[55] = O[64] = O[65] = O[66] = O[67] = O[68] = O[69] = O[70] = O[71] = O[80] = O[81] = O[82] = O[83] = O[84] = O[85] = O[86] = O[87] = O[96] = O[97] = O[98] = O[99] = O[100] = O[101] = O[102] = O[103] = O[112] = O[113] = O[114] = O[115] = O[116] = O[117] = O[118] = O[119] = 0,
                        o !== p) {
                            for (C = function chooseKingThreats(e, t) {
                                return pe && ae[e] ? L : ae[e] & $.KSIDE_CASTLE && !Q[t + 1] && !Q[t + 2] ? ae[e] & $.QSIDE_CASTLE && !Q[t - 1] && !Q[t - 2] && !Q[t - 3] ? (n = $.KQSIDE_CASTLE,
                                W) : (n = $.KSIDE_CASTLE,
                                j) : ae[e] & $.QSIDE_CASTLE && !Q[t - 1] && !Q[t - 2] && !Q[t - 3] ? (n = $.QSIDE_CASTLE,
                                z) : P
                            }(x, o),
                            r = 0; r < 120; ++r)
                                if (136 & r && (r += 8),
                                u = Q[r])
                                    if (u & x)
                                        (!s || (0 | u) & s) && e.push(r);
                                    else if (0 != ((T = C[r - o + 119]) & u))
                                        if (4 & u)
                                            for (y = S[u],
                                            i = 1; i < 3; ++i)
                                                136 & (f = r + y[i]) || (O[f] |= 1,
                                                f === o && (++t,
                                                O[r] |= 2));
                                        else
                                            for (v = (y = S[u & g]).length,
                                            _ = u & w,
                                            i = 0; i < v; ++i)
                                                if (k = y[i],
                                                !(o > (f = r) && k < 0 && o - f > 16 || o < f && k > 0 && f - o > 16))
                                                    for (; !(136 & (f += k)); ) {
                                                        if (O[f] |= 1,
                                                        d = Q[f]) {
                                                            if (d & x)
                                                                if (f === o) {
                                                                    for (c = f - k; c !== r; c -= k)
                                                                        O[c] |= 2;
                                                                    O[r] |= 2,
                                                                    ++t,
                                                                    _ && 0 == (136 & (f += k)) && (O[f] |= 1)
                                                                } else if (_ && 256 & T && t < 2)
                                                                    for (m = f + k; 0 == (136 & m); ) {
                                                                        if (h = Q[m]) {
                                                                            h === E && (O[f] |= 4 + (Math.abs(k) << 3),
                                                                            ++a);
                                                                            break
                                                                        }
                                                                        m += k
                                                                    }
                                                            break
                                                        }
                                                        if (!_)
                                                            break
                                                    }
                            t > 1 && (e = [o])
                        } else
                            e = function getPieces(e, t) {
                                var a, s, n = [];
                                for (a = 0; a < 120; ++a)
                                    136 & a && (a += 8),
                                    (s = e[a]) && (s & t) === t && n.push(a);
                                return n
                            }(Q, x | s)
                    }
                    function validateEnPassant(e, a) {
                        var s, n, o, r = a + 16 * (1 === te ? 1 : -1);
                        return (1 !== t || 0 != (2 & l[a]) || 0 != (2 & l[r])) && (s = Q[e],
                        Q[a] = s,
                        Q[e] = 0,
                        n = Q[r],
                        Q[r] = 0,
                        o = inCheck(),
                        Q[e] = s,
                        Q[a] = 0,
                        Q[r] = n,
                        !o)
                    }
                    function addCastlingMoves(e) {
                        var t, a, s;
                        if (pe) {
                            if (ae[e])
                                for (a = (t = ee[e]) % 8,
                                s = 0; s < 8; ++s)
                                    ae[e] & 1 << s && canCastle960(Q, t, s, e) && (c[d++] = (s > a ? $.KSIDE_CASTLE : $.QSIDE_CASTLE) + (t << 7) + (t + (s - a) << y),
                                    ++s)
                        } else
                            n & $.KSIDE_CASTLE && (a = (t = ee[e]) + 2,
                            0 === l[t + 1] && 0 === l[t + 2] && (c[d++] = $.KSIDE_CASTLE + (t << 7) + (a << y))),
                            n & $.QSIDE_CASTLE && (a = (t = ee[e]) - 2,
                            0 === l[t - 1] && 0 === l[t - 2] && (c[d++] = $.QSIDE_CASTLE + (t << 7) + (a << y)))
                    }
                    function generateMoves(s, n) {
                        var o, r, i, p, m, b, f, v, _, C, T = te, x = swapColor(T), E = ee[T];
                        for (calculateLegalMoveInfo(s, E),
                        h = e.length,
                        d = u,
                        _ = 0; _ < h; ++_)
                            if (o = e[_],
                            p = Q[o],
                            !(t && a && 4 & l[o]))
                                if (4 & p)
                                    for (b = S[p],
                                    0 !== a && 0 != (4 & l[o]) && l[o] >> 3 != 16 || (m = o + b[0],
                                    0 === Q[m] && (addPawnMove(o, m, 0),
                                    q[T] === rank(o) && (m += b[0],
                                    Q[m] || addPawnMove(o, m, $.BIG_PAWN)))),
                                    r = 1; r < 3; ++r)
                                        136 & (m = o + (f = b[r])) || a && 4 & l[o] && l[o] >> 3 !== Math.abs(f) || (Q[m] & x ? addPawnMove(o, m, $.CAPTURE) : m === se && validateEnPassant(o, m) && (c[d++] = $.EP_CAPTURE | o << 7 | m << y));
                                else {
                                    if (a && 4 & l[o]) {
                                        if (8 & p)
                                            continue;
                                        if (!(M[o - ee[T] + 119] & p))
                                            continue;
                                        b = [f = l[o] >> 3, -f]
                                    } else
                                        b = S[p & g];
                                    if (C = o << 7,
                                    o === E) {
                                        for (r = 0; r < 8; ++r)
                                            0 == (136 & (m = o + (f = b[r]))) && (Q[m] ? Q[m] & x && 0 == (1 & l[m]) && (c[d++] = $.CAPTURE | C | m << y) : 0 == (1 & l[m]) && (c[d++] = C | m << y));
                                        0 === t && addCastlingMoves(T)
                                    } else
                                        for (i = b.length,
                                        v = p & w,
                                        r = 0; r < i; ++r)
                                            for (f = b[r],
                                            m = o; !(136 & (m += f)); ) {
                                                if (Q[m]) {
                                                    Q[m] & x && (0 === t || 2 & l[m]) && (c[d++] = $.CAPTURE | C | m << y);
                                                    break
                                                }
                                                if ((0 === t || 2 & l[m]) && (c[d++] = C | m << y),
                                                !v)
                                                    break
                                            }
                                }
                        return he && function drop(e, a, s) {
                            var n, o, r, i, u;
                            if (!e)
                                for (a && (a >>= 26),
                                i = 0; i < 5; ++i)
                                    if ((!a || (0 | a) == 1 << i) && Y._hand[s] & N[i] << R[i]) {
                                        for (0 === i ? (n = 16,
                                        o = 103,
                                        r = $.DROP) : (n = 0,
                                        o = 119,
                                        r = $.DROP | i << k),
                                        u = n; u <= o; ++u)
                                            136 & u && (u += 8),
                                            Q[u] || (0 === t || 1 === t && 2 & l[u]) && (c[d++] = r | u << y);
                                        if (a)
                                            return
                                    }
                        }(n, s, T),
                        d
                    }
                    function inCheckAfterMove(e, t, a, s) {
                        var n, r, i, l, c, u, d, h;
                        if (J === o["King of the Hill"] && e & b && kingOfTheHillWin(a))
                            return !0;
                        if (s & $.KQSIDE_CASTLE && (a = 1 === te ? s & $.KSIDE_CASTLE ? 117 : 115 : s & $.KSIDE_CASTLE ? 5 : 3,
                        e = m,
                        h = !0),
                        (n = ee[swapColor(te)]) === p)
                            return !1;
                        if (0 == (e & b) && M[a - n + 119] & e)
                            for (c = e & w,
                            l = a + (i = I[a - n + 119]); 0 == (136 & l); ) {
                                if (l === n) {
                                    if (4 & e) {
                                        if (1 == (3 & e) ? n - a < 0 : n - a > 0)
                                            return !0;
                                        break
                                    }
                                    return !0
                                }
                                if (l !== t && Q[l] || !c)
                                    break;
                                l += i
                            }
                        if (!h) {
                            if ((r = M[t - n + 119]) & w && (i = I[t - n + 119]) !== I[a - n + 119])
                                for (l = n - i; 0 == (136 & l); ) {
                                    if (l !== t && (u = Q[l])) {
                                        if (u & te && r & u && u & w)
                                            return !0;
                                        break
                                    }
                                    l -= i
                                }
                            if (s & $.EP_CAPTURE && (r = M[(d = a + 16 * (1 === te ? 1 : -1)) - n + 119]) & w)
                                for (l = n - (i = I[d - n + 119]); 0 == (136 & l); ) {
                                    if (l !== t && l !== d) {
                                        if (l === a)
                                            break;
                                        if (u = Q[l]) {
                                            if (u & te && r & u && u & w)
                                                return !0;
                                            break
                                        }
                                    }
                                    l -= i
                                }
                        }
                        return !1
                    }
                    function moveToSan(e, t) {
                        var a, s, n, r, i, l, p = "";
                        return e & $.KQSIDE_CASTLE ? p = e & $.KSIDE_CASTLE ? "O-O" : "O-O-O" : e & $.DROP ? ((a = e >> k) && (p += D[a]),
                        p += "@" + algebraic(n = e >> y & _)) : (n = e >> y & _,
                        4 & (r = Q[s = e >> 7 & _]) ? (e & $.ANY_CAPTURE && (p += String.fromCharCode(file(s) + 97) + "x"),
                        p += algebraic(n),
                        e & $.PROMOTION && (p += "=" + D[a = e >> k])) : (p += A[r & f],
                        h > 1 && (p += function getDisambiguator(e, t, a) {
                            var s, n, o, r, i, l;
                            if (d < 2)
                                return "";
                            for (e &= g,
                            l = 0; l < d; ++l)
                                if (a === (s = c[l]) >> y && (o = s >> 7 & _) !== t && Q[o] & e) {
                                    if (n = !0,
                                    rank(t) === rank(o)) {
                                        if (r)
                                            return algebraic(t);
                                        i = !0
                                    }
                                    if (file(t) === file(o)) {
                                        if (i)
                                            return algebraic(t);
                                        r = !0
                                    }
                                }
                            return n ? r ? String(8 - rank(t)) : String.fromCharCode(file(t) + 97) : ""
                        }(r, s, n)),
                        e & $.ANY_CAPTURE && (p += "x"),
                        p += algebraic(n))),
                        t || (e & $.KQSIDE_CASTLE ? (s = e >> 7 & _,
                        n = e >> y & _) : e & $.DROP_OR_PROMOTE && (r = F[a] + te),
                        inCheckAfterMove(r, s, n, e) && (me(e, s, n, a),
                        i = u,
                        u = d,
                        l = h,
                        J !== o.Chess && isVariantWin() ? p += "#" : generateMoves() - u ? p += "+" : p += "#",
                        d = u,
                        u = i,
                        h = l,
                        reverseMove(ie.pop()))),
                        p
                    }
                    function kingAttacked(e) {
                        return ee[e] !== p && function attacked(e, t) {
                            var a, s, n, o, r = S[8], i = 8 | e;
                            for (a = 0; a < 8; ++a)
                                if (0 == (136 & (n = t + r[a])) && ((s = Q[n]) & i) === i)
                                    return !0;
                            for (r = S[128],
                            a = 0; a < 8; ++a)
                                for (n = t + (o = r[a]); 0 == (136 & n); ) {
                                    if (s = Q[n]) {
                                        if (s & e && M[t - n + 119] & s) {
                                            if (!(4 & s))
                                                return !0;
                                            if (1 === e ? t - n < 0 : t - n > 0)
                                                return !0
                                        }
                                        break
                                    }
                                    n += o
                                }
                            return !1
                        }(swapColor(e), ee[e])
                    }
                    function inCheck() {
                        return kingAttacked(te)
                    }
                    function inCheckmate() {
                        return inCheck() && 0 === generateMoves()
                    }
                    function inStalemate() {
                        var e = !inCheck() && 0 === generateMoves();
                        return e && J === o.Bughouse && !Y.isDependent && (e = Y.siblingGame.inStalemate()),
                        e
                    }
                    function insufficientMaterial(e) {
                        var t, a, s = 0, n = 0, o = 0;
                        for (a = 0; a < 120; ++a)
                            if (136 & a && (a += 8),
                            t = Q[a]) {
                                if (e && 0 == (t & e))
                                    continue;
                                if (100 & t)
                                    return !1;
                                if (8 & t) {
                                    if (n || s++)
                                        return !1
                                } else if (16 & t) {
                                    if (s)
                                        return !1;
                                    if (++n,
                                    (rank(a) + a) % 2 && ++o,
                                    o && n !== o)
                                        return !1
                                }
                            }
                        return !0
                    }
                    function inThreefoldRepetition() {
                        if (ne < 8)
                            return !1;
                        for (var e, t = getCurrentHash(), a = !1, s = ne, n = !1, o = ie, r = o.length - 1; ; ) {
                            if ((r -= 2) < 0) {
                                if (o.id) {
                                    r = o.atMoveNode + r + 2,
                                    o = le[o.parentId];
                                    continue
                                }
                                if (-2 === r)
                                    return !1;
                                e = o.hash,
                                n = !0
                            } else
                                e = o[r].hash,
                                o[r].halfMoves > s || s < 2 ? n = !0 : s = o[r].halfMoves;
                            if (e[0] === t[0] && e[1] === t[1]) {
                                if (a)
                                    return !0;
                                a = !0
                            }
                            if (n)
                                return !1
                        }
                    }
                    function modifyHand(e) {
                        var t, a, n, r, i, l, c, u, d, h = e.move;
                        if (J === o.Crazyhouse || h & $.DROP ? (a = Y._hand,
                        i = e.hash,
                        d = e.color) : (a = Y.siblingGame._hand,
                        e.handSibling = !0,
                        X && ((l = Y.siblingGame._history()).length ? i = l[l.length - 1].hash : (l.hash || (l.hash = Y.siblingGame._hashPosition()),
                        i = l.hash)),
                        d = swapColor(e.color)),
                        e.captured) {
                            switch ((e.captured & v ? 4 : e.captured & g) & g) {
                            case 4:
                                c = 0;
                                break;
                            case 8:
                                c = 1;
                                break;
                            case 16:
                                c = 2;
                                break;
                            case m:
                                c = 3;
                                break;
                            default:
                                c = 4
                            }
                            t = 1 << R[c],
                            X && (r = a[d] >> R[c] & N[c],
                            u = s.zobristPiece[r + 63 * c + (1 === d ? 0 : 315)])
                        } else
                            t = -1 << R[n = h >> k],
                            X && (r = a[d] >> R[n] & N[n],
                            u = s.zobristPiece[r - 1 + 63 * n + (1 === d ? 0 : 315)]);
                        a[d] += t,
                        e.handChange = t,
                        X && hashNum(i, [31 * u[0] >>> 0, 17 * u[1] >>> 0])
                    }
                    function makeMoveChess(e, t, a, n) {
                        var o, r, i, l, c, u, d, h, g = te, w = swapColor(g), y = {
                            move: e,
                            epSquare: se,
                            halfMoves: ne,
                            castlingW: ae[1],
                            castlingB: ae[2],
                            color: g
                        }, k = 1 === g;
                        X && (l = getCurrentHash(),
                        y.hash = l,
                        hashNum(l, s.zobristTurn),
                        se !== p && hashEP(Q, l, se + (k ? 16 : -16), 4 | g)),
                        0 == (e & $.KQSIDE_CASTLE) ? he && e & $.DROP ? (Q[a] = F[n] | g,
                        X && hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[Q[a]] + 8 * (7 - rank(a)) + file(a)]),
                        modifyHand(y),
                        d = 0) : (d = Q[t],
                        (h = Q[a]) && (y.captured = h,
                        X && hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[Q[a] & f] + 8 * (7 - rank(a)) + file(a)]),
                        h & m && ae[w] && (pe ? rank(a) === (k ? 0 : 7) && (i = 1 << file(a),
                        ae[w] & i && (ae[w] ^= i,
                        X && (i > 1 << file(ee[g]) ? hashNum(l, s.zobristCastle[w - 1]) : hashNum(l, s.zobristCastle[w + 1])))) : a === (k ? 7 : 119) ? ae[w] & $.KSIDE_CASTLE && (ae[w] ^= $.KSIDE_CASTLE,
                        X && hashNum(l, s.zobristCastle[w - 1])) : a === (k ? 0 : 112) && ae[w] & $.QSIDE_CASTLE && (ae[w] ^= $.QSIDE_CASTLE,
                        X && hashNum(l, s.zobristCastle[w + 1])))),
                        Q[a] = e & $.PROMOTION ? F[n] | g | v : Q[t],
                        Q[t] = 0,
                        X && (hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[d & f] + 8 * (7 - rank(t)) + file(t)]),
                        hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[Q[a] & f] + 8 * (7 - rank(a)) + file(a)]))) : d = b,
                        e & $.EP_CAPTURE ? (k ? (u = a + 16,
                        c = 6) : (u = a - 16,
                        c = 8),
                        y.captured = 4 | w,
                        Q[u] = 0,
                        X && hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[4 | w] + 8 * (c - rank(a)) + file(a)])) : d & b ? (pe ? (e & $.KQSIDE_CASTLE && (Q[a] = 0,
                        Q[t] = 0,
                        e & $.KSIDE_CASTLE ? k ? (o = 118,
                        r = 117) : (o = 6,
                        r = 5) : k ? (o = 114,
                        r = 115) : (o = 2,
                        r = 3),
                        Q[o] = g | b,
                        Q[r] = g | m,
                        X && (hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[b | g] + 8 * (7 - rank(t)) + file(t)]),
                        hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[m | g] + 8 * (7 - rank(a)) + file(a)]),
                        hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[b | g] + 8 * (7 - rank(o)) + file(o)]),
                        hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[m | g] + 8 * (7 - rank(r)) + file(r)]))),
                        X && (0 != (ae[g] & ae[g] - 1) ? (hashNum(l, s.zobristCastle[g - 1]),
                        hashNum(l, s.zobristCastle[g + 1])) : ae[g] > 1 << file(ee[g]) ? hashNum(l, s.zobristCastle[g - 1]) : hashNum(l, s.zobristCastle[g + 1])),
                        ee[g] = o || a) : (e & $.KQSIDE_CASTLE && (Q[a] = Q[t],
                        Q[t] = 0,
                        e & $.KSIDE_CASTLE ? (o = a - 1,
                        r = a + 1) : (o = a + 1,
                        r = a - 2),
                        Q[o] = Q[r],
                        Q[r] = 0,
                        X && (hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[b | g] + 8 * (7 - rank(t)) + file(t)]),
                        hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[m | g] + 8 * (7 - rank(r)) + file(r)]),
                        hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[b | g] + 8 * (7 - rank(a)) + file(a)]),
                        hashNum(l, s.zobristPiece[64 * s.zobristPieceValueNumbers[m | g] + 8 * (7 - rank(o)) + file(o)]))),
                        X && (ae[g] & $.KSIDE_CASTLE && hashNum(l, s.zobristCastle[g - 1]),
                        ae[g] & $.QSIDE_CASTLE && hashNum(l, s.zobristCastle[g + 1])),
                        ee[g] = a),
                        ae[g] = 0) : d & m && ae[g] && (pe ? rank(t) === (k ? 7 : 0) && (i = 1 << file(t),
                        ae[g] & i && (ae[g] ^= i,
                        X && (i > 1 << file(ee[g]) ? hashNum(l, s.zobristCastle[g - 1]) : hashNum(l, s.zobristCastle[g + 1])))) : t === (k ? 119 : 7) ? ae[g] & $.KSIDE_CASTLE && (ae[g] ^= $.KSIDE_CASTLE,
                        X && hashNum(l, s.zobristCastle[g - 1])) : t === (k ? 112 : 0) && ae[g] & $.QSIDE_CASTLE && (ae[g] ^= $.QSIDE_CASTLE,
                        X && hashNum(l, s.zobristCastle[g + 1]))),
                        e & $.BIG_PAWN ? (se = k ? a + 16 : a - 16,
                        X && hashEP(Q, l, a, 4 | w)) : se = p,
                        4 & d || e & $.ANY_CAPTURE ? ne = 0 : ne++,
                        te = w,
                        ie.push(y)
                    }
                    function makeMoveVariant(e, t, a, n) {
                        var r, i = te;
                        makeMoveChess(e, t, a, n),
                        r = ie[ie.length - 1],
                        he ? (ne = r.halfMoves + 1,
                        r.captured && modifyHand(r),
                        J === o.Bughouse && (r.bughouseOrder = Y.moveCount() - 1 + Y.siblingGame.moveCount())) : J === o["3-check"] && kingAttacked(te) && (r.checked = !0,
                        X && de[i] && hashNum(r.hash, s.zobristCheck[de[i] + (1 === i ? -1 : 2)]),
                        ++de[i],
                        X && hashNum(r.hash, s.zobristCheck[de[i] + (1 === i ? -1 : 2)]))
                    }
                    function reverseMove(e) {
                        var t, a, s = te, n = swapColor(s), r = e.move, i = r >> y & _, l = r >> 7 & _;
                        if (te = n,
                        ae[2] = e.castlingB,
                        ae[1] = e.castlingW,
                        se = e.epSquare,
                        ne = e.halfMoves,
                        J) {
                            if (pe && r & $.KQSIDE_CASTLE)
                                return r & $.KSIDE_CASTLE ? 1 === n ? (a = 118,
                                t = 117) : (a = 6,
                                t = 5) : 1 === n ? (a = 114,
                                t = 115) : (a = 2,
                                t = 3),
                                Q[a] = 0,
                                Q[t] = 0,
                                Q[l] = n | b,
                                Q[i] = n | m,
                                void (ee[n] = l);
                            if (e.handChange && (J !== o.Crazyhouse && e.handSibling ? Y.siblingGame._hand[swapColor(n)] -= e.handChange : Y._hand[n] -= e.handChange),
                            r & $.DROP)
                                return void (Q[i] = 0);
                            e.checked && --de[n]
                        }
                        r & $.PROMOTION ? (Q[l] = 4 | n,
                        Q[i] = r & $.CAPTURE ? e.captured : 0) : (Q[l] = Q[i],
                        r & $.KQSIDE_CASTLE ? (Q[i] = 0,
                        r & $.KSIDE_CASTLE ? (t = i + 1,
                        a = i - 1) : (t = i - 2,
                        a = i + 1),
                        Q[t] = n | m,
                        Q[a] = 0,
                        ee[n] = l) : (i === ee[n] && (ee[n] = l),
                        r & $.CAPTURE ? Q[i] = e.captured : (Q[i] = 0,
                        r & $.EP_CAPTURE && (Q[i - (1 === n ? -16 : 16)] = 4 | s))))
                    }
                    function beautifyMove(e, t, a) {
                        var s, n, o = e >> y & _, r = {
                            color: te,
                            to: algebraic(o),
                            flags: e & _
                        };
                        return he && 0 != (e & $.DROP) ? (n = e >> k,
                        r.drop = n,
                        r.piece = F[n] + te) : (s = e >> 7 & _,
                        r.from = algebraic(s),
                        r.piece = Q[s],
                        e & $.PROMOTION && (n = e >> k,
                        r.promotion = F[n] + te),
                        e & $.CAPTURE ? r.captured = Q[o] : e & $.EP_CAPTURE && (r.captured = 4 | swapColor(te))),
                        r.san = t || moveToSan(e, a),
                        r
                    }
                    function isVariantWin() {
                        return J === o["3-check"] ? 3 === de[swapColor(te)] : J === o["King of the Hill"] ? kingOfTheHillWin(ee[swapColor(te)]) : void 0
                    }
                    function isBughouseWin() {
                        if (J === o.Bughouse)
                            return Y.siblingGame.inCheckmate()
                    }
                    function createVariation() {
                        var e = []
                          , t = generateFen()
                          , a = ie.length - 1
                          , s = ie[a];
                        return !!s && (e.parentId = ce,
                        e.id = le.length,
                        ie.curFen = t,
                        s.lines || (s.lines = []),
                        s.lines.push(e.id),
                        s.move ? reverseMove(s) : (se = s.epSquare,
                        --ne,
                        te = swapColor(te)),
                        2 === te && --oe,
                        e.atMoveNode = a,
                        e.hash = a ? ie[a - 1].hash : ie.hash,
                        ce = e.id,
                        le.push(e),
                        ie = e,
                        !0)
                    }
                    function selectLine(e) {
                        var t = generateFen();
                        ie.curFen = t,
                        ie = le[e],
                        ce = e,
                        load(ie.curFen, J, !0, !0)
                    }
                    return Y = {
                        WHITE: 1,
                        BLACK: 2,
                        PAWN: 4,
                        KNIGHT: 8,
                        BISHOP: 16,
                        ROOK: m,
                        QUEEN: 64,
                        KING: b,
                        FLAGS: $,
                        load: load,
                        reset: reset,
                        moves: function(e) {
                            var t, a, s, n = [], o = moveToSan;
                            for (e && (e.verbose && (o = beautifyMove),
                            e.type && (a = e.type | e.type << 24),
                            s = e.noDrop),
                            generateMoves(a, s),
                            t = 0; t < d; ++t)
                                n.push(o(c[t]));
                            return n
                        },
                        inCheck: inCheck,
                        inCheckmate: inCheckmate,
                        inStalemate: inStalemate,
                        isBughouseWin: isBughouseWin,
                        in50MoveRule: function() {
                            return ne >= 100
                        },
                        inDraw: function() {
                            return ne >= 100 || inStalemate() || insufficientMaterial() || inThreefoldRepetition() || Boolean(function isBughouseDraw() {
                                if (J === o.Bughouse)
                                    return Y.siblingGame.in50MoveRule() || Y.siblingGame.inThreefoldRepetition()
                            }())
                        },
                        insufficientMaterial: insufficientMaterial,
                        inThreefoldRepetition: inThreefoldRepetition,
                        isVariantWin: isVariantWin,
                        gameOver: function() {
                            return Y.inDraw() || inCheckmate() || Boolean(isVariantWin()) || Boolean(isBughouseWin())
                        },
                        isPositionValid: function(e) {
                            var t, a, s, n = 0;
                            if (!1 !== (e = e || {}).pawns)
                                for (t = 0; t <= 119; ) {
                                    if (4 & (s = Q[t]))
                                        return !1;
                                    8 == ++t && (t = 112)
                                }
                            if (!1 !== e.kings) {
                                for (t = 0; t <= 119; ++t)
                                    if (136 & t && (t += 8),
                                    (s = Q[t]) & b) {
                                        if (++n > 2)
                                            return !1;
                                        if (a && a & s)
                                            return !1;
                                        a = 3 & s
                                    }
                                if (2 !== n)
                                    return !1
                            }
                            return !1 === e.check || !1 === e.kings && ee[swapColor(te)] === p || !kingAttacked(swapColor(te))
                        },
                        validateFen: validateFen,
                        fen: generateFen,
                        pgn: function(e) {
                            return (e = e || {}).useResultHeader || ce || (isVariantWin() || inCheckmate() ? ue.Result = 2 === te ? "1-0" : "0-1" : Y.inStalemate() ? ue.Result = "1/2-1/2" : isBughouseWin() && (ue.Result = 1 === Y.siblingGame.turn() ? "1-0" : "0-1")),
                            H(e, ue, le, re, J, Y)
                        },
                        loadPgn: function(e, t, a) {
                            var s, n, r, i, l, c, u, d, h, p = {}, m = 0;
                            if ("number" != typeof t && (a = a || t,
                            t = 0),
                            a = a || {},
                            "string" == typeof e && (a.singleGame && (e = e.replace(/(?:\r?\n\s*){2,}/g, "\n")),
                            e = Y.tokenizePgn(e, a)),
                            t < 0 && (t = e.length + t),
                            !(i = e[t]))
                                return !1;
                            for (reset(),
                            n = i.length,
                            s = 0; s < n && "tagName" === (r = i[s]).type; ++s) {
                                if (!i[s + 1] || "tagValue" !== i[s + 1].type)
                                    return !1;
                                ++s,
                                "FEN" === r.value ? u = completeFen(i[s].value) : p[r.value] = i[s].value
                            }
                            if (a.variant && (p.Variant = a.variant),
                            p.Variant && !u && (u = T),
                            u || "1" === p.SetUp)
                                if ("0" === p.SetUp)
                                    p.FEN = u;
                                else if (!u || !load(u, p.Variant))
                                    return !1;
                            for (Y.header(p),
                            c = (l = Y)._history(); s < n; ++s)
                                if ("san" === (r = i[s]).type && 0 === m) {
                                    if (!l.move(r.value)) {
                                        if (!a.skipBadLines || !(0 !== ce || ie.length && a.allowBadMainLine))
                                            return reset(),
                                            !1;
                                        m = 1
                                    }
                                } else if ("result" === r.type && "*" === ue.Result)
                                    setHeader(["Result", r.value]);
                                else if ("a" === r.type && 0 === m && c[c.length - 1])
                                    c[c.length - 1].annotation = r.value;
                                else if ("nag" !== r.type && "aa" !== r.type || 0 !== m || !c[c.length - 1]) {
                                    if ("comment" === r.type && 0 === m)
                                        c.length ? (r.value.trim() && (c[c.length - 1].comment = r.value),
                                        r.commands && (c[c.length - 1].commands = r.commands,
                                        r.commands.clk && (c[c.length - 1].time = (d = r.commands.clk,
                                        h = void 0,
                                        10 * (3600 * (h = d.split(":"))[0] + 60 * h[1] + 1 * h[2]))))) : (c.initComment = String(r.value),
                                        r.commands && (c.commands = r.commands));
                                    else if ("variationStart" === r.type) {
                                        if (m > 0)
                                            ++m;
                                        else if (!createVariation())
                                            return reset(),
                                            !1;
                                        c = l._history()
                                    } else if ("variationEnd" === r.type)
                                        m > 0 && --m,
                                        0 === m && (selectLine(c.parentId),
                                        c = l._history());
                                    else if ("number" === r.type && J === o.Bughouse) {
                                        if (!(l = /b/i.test(r.value.slice(-1)) ? Y.siblingGame : Y))
                                            return !1;
                                        c = l._history()
                                    }
                                } else
                                    c[c.length - 1].additionalAnnotation || (c[c.length - 1].additionalAnnotation = []),
                                    -1 === c[c.length - 1].additionalAnnotation.indexOf(r.value) && c[c.length - 1].additionalAnnotation.push(r.value);
                            return !0
                        },
                        header: function(e) {
                            return Array.isArray(e) ? setHeader(e) : "object" == typeof e ? (Object.keys(e).forEach((function(t) {
                                setHeader([t, e[t]])
                            }
                            )),
                            ue) : ue
                        },
                        turn: function(e) {
                            return 1 !== e && 2 !== e || (te = e),
                            te
                        },
                        move: function playMove(e) {
                            var t, a, n, r, l, u, h, m, f, w, T, S, x;
                            if ("string" == typeof e) {
                                switch (e[r = e.length - 1]) {
                                case "+":
                                case "#":
                                    e = e.substr(0, r)
                                }
                                for (f = C.indexOf(e[0]) > 6 ? E[e[0]] : "O" === e[0] ? b : 4,
                                he && (-1 === e.indexOf("@") ? w = !0 : (w = !1,
                                f <<= 24)),
                                generateMoves(f, w),
                                r = 0; r < d; ++r)
                                    if (e === (u = moveToSan(c[r], !0))) {
                                        a = c[r];
                                        break
                                    }
                                if (!a)
                                    return "--" === e ? function makeNullMove() {
                                        var e, t = {
                                            color: te,
                                            san: "--",
                                            epSquare: se
                                        }, a = {
                                            color: te,
                                            san: "--"
                                        };
                                        return X && (e = getCurrentHash(),
                                        t.hash = e,
                                        hashNum(e, s.zobristTurn),
                                        se !== p && hashEP(Q, e, se + (1 === te ? 16 : -16), 4 | te)),
                                        se = p,
                                        ne++,
                                        1 === (te = swapColor(te)) && ++oe,
                                        ie.push(t),
                                        a
                                    }() : (e = Chess2.fixSanMove(e, Q, te)) ? playMove(e) : null;
                                h = a >> 7 & _,
                                m = a >> y & _,
                                n = a >> k
                            } else {
                                if (e.drop) {
                                    switch (e.drop) {
                                    case "p":
                                        n = 0;
                                        break;
                                    case "n":
                                        n = 1;
                                        break;
                                    case "b":
                                        n = 2;
                                        break;
                                    case "r":
                                        n = 3;
                                        break;
                                    case "q":
                                        n = 4;
                                        break;
                                    default:
                                        return null
                                    }
                                    f = 1 << 26 + n
                                } else {
                                    if (e.promotion)
                                        switch (e.promotion) {
                                        case "q":
                                            n = 4;
                                            break;
                                        case "n":
                                            n = 1;
                                            break;
                                        case "r":
                                            n = 3;
                                            break;
                                        case "b":
                                            n = 2;
                                            break;
                                        default:
                                            return null
                                        }
                                    h = i[e.from],
                                    w = !0,
                                    f = Q[h] & g
                                }
                                for (m = i[e.to],
                                t = ((n ? n << k : 0) | m << y) >> 7 | h,
                                generateMoves(f, w),
                                r = 0; r < d; ++r)
                                    if (c[r] >> 7 === t) {
                                        a = c[r];
                                        break
                                    }
                                if (!a)
                                    return (e = Chess2.fixObjMove(e, Q, te)) ? playMove(e) : null
                            }
                            return x = a & $.DROP_OR_PROMOTE ? F[n] + te : Q[h],
                            l = beautifyMove(a, u, !0),
                            T = inCheckAfterMove(x, h, m, a),
                            me(a, h, m, n),
                            T && (J !== o.Chess && isVariantWin() || 0 === generateMoves() ? l.san += "#" : l.san += "+"),
                            (S = ie[ie.length - 1]).san = l.san,
                            l.piece & v && (S.promoted = !0),
                            1 === te && ++oe,
                            l
                        },
                        undo: function(e) {
                            var t = ie.pop();
                            return t ? (1 === te && --oe,
                            t.move ? (reverseMove(t),
                            !!e || beautifyMove(t.move, t.san)) : (se = t.epSquare,
                            --ne,
                            te = swapColor(te),
                            !!e || {
                                san: "--",
                                color: t.color
                            })) : null
                        },
                        clear: function(e) {
                            clear(e)
                        },
                        put: function(e, t, a) {
                            var s, n = i[t], o = !1, r = Q[n], l = 3 & r, c = e.color;
                            if (isNaN(n) || !e.type || !c || -1 === C.indexOf(e.type))
                                return !1;
                            if (Q[n] = E[e.type] | c | (e.promoted ? v : 0),
                            Q[n] & b && (ee[c] = n),
                            r && Q[ee[l]] && Q[ee[l]] !== (b | l)) {
                                for (s = 0; s < 120; ++s)
                                    136 & s && (s += 8),
                                    Q[s] === (b | l) && (ee[l] = s,
                                    o = !0);
                                o || (ee[l] = p)
                            }
                            return a || load(generateFen(), J, !0, !1),
                            !0
                        },
                        get: get,
                        remove: function(e, t) {
                            var a, s = Q[i[e]], n = get(e), o = 3 & s;
                            if (Q[i[e]] = 0,
                            s & b)
                                for (ee[o] = p,
                                ae[o] = 0,
                                a = 0; a < 120; ++a)
                                    if (136 & a && (a += 8),
                                    Q[a] === (b | o)) {
                                        ee[s.color] = a;
                                        break
                                    }
                            return t || load(generateFen(), J, !0, !1),
                            n
                        },
                        history: function(e, t) {
                            for (var a, s = [], n = ie, o = n.length; ; ) {
                                if (-1 == --o) {
                                    if (n.id && !t) {
                                        o = n.atMoveNode,
                                        n = le[n.parentId];
                                        continue
                                    }
                                    break
                                }
                                e ? ((a = beautifyMove(n[o].move, n[o].san)).color = n[o].color,
                                !o && n.initComment && (a.firstComment = n.initComment),
                                void 0 !== n[o].comment && (a.comment = n[o].comment),
                                void 0 !== n[o].time && (a.time = n[o].time),
                                void 0 !== n[o].annotation && (a.annotation = n[o].annotation),
                                void 0 !== n[o].additionalAnnotation && (a.additionalAnnotation = n[o].additionalAnnotation),
                                void 0 !== n[o].commands && (a.commands = n[o].commands),
                                void 0 !== n[o].captured && (a.captured = n[o].captured),
                                void 0 !== n[o].promoted && (a.promoted = n[o].promoted),
                                void 0 !== n[o].lines && (a.lines = n[o].lines),
                                void 0 !== n[o].bughouseOrder && (a.bughouseOrder = n[o].bughouseOrder),
                                C.indexOf(n[o].san[0]) > 6 ? a.piece = E[n[o].san[0]] : "O" === n[o].san[0] ? a.piece = b : a.piece = 4,
                                a.piece |= a.color,
                                s.unshift(a)) : s.unshift(n[o].san)
                            }
                            return s
                        },
                        hashes: function() {
                            for (var e = [], t = ie, a = t.length; ; ) {
                                if (-1 == --a) {
                                    if (t.id) {
                                        a = t.atMoveNode,
                                        t = le[t.parentId];
                                        continue
                                    }
                                    t.hash || getCurrentHash(),
                                    e.unshift(t.hash);
                                    break
                                }
                                e.unshift(t[a].hash)
                            }
                            return e
                        },
                        moveCount: function() {
                            return ie.length
                        },
                        startingMoveNumber: function() {
                            return re
                        },
                        completeFen: completeFen,
                        createVariation: createVariation,
                        selectLine: selectLine,
                        hash: function() {
                            var e = getCurrentHash();
                            return J !== o.Bughouse || Y.isDependent ? e : [e, Y.siblingGame.hash()]
                        },
                        hashing: function(e) {
                            X = e,
                            J !== o.Bughouse || Y.isDependent || Y.siblingGame.hashing(X)
                        },
                        hand: function() {
                            if (he)
                                return handToString(Y._hand[1], !0) + handToString(Y._hand[2])
                        },
                        checks: function() {
                            if (J === o["3-check"])
                                return [de[1], de[2]]
                        },
                        tokenizePgn: V,
                        _hand: [],
                        _history: function(e) {
                            return e && (ce = (ie = e).id),
                            ie
                        },
                        _lines: function() {
                            return le
                        },
                        _hashPosition: hashPosition,
                        _board: function() {
                            return Q
                        }
                    },
                    G && load(G, K) || reset(),
                    Y
                }
                return Chess2.fixSanMove = function(e, t, a) {
                    var s, n, o;
                    if (/0|[?!+#]$|[18][QNRB]$|^P/.test(e))
                        return e.replace(/[?!+#]+$/, "").replace(/0/g, "O").replace(/([18])([QNRB])$/, "$1=$2").replace(/^P/, "");
                    if (n = e.indexOf("=") > 0 ? -4 : -2,
                    s = e.substr(n, 2),
                    a = swapColor(a),
                    t[i[s]] & a || /^[a-h]x?[a-h]/.test(e)) {
                        if (-1 === e.indexOf("x"))
                            return e.slice(0, n) + "x" + e.substr(n)
                    } else if (e.indexOf("x") > -1)
                        return e.replace("x", "");
                    return (o = e.match(/^([KQNRB]?)([a-h][1-8]?|[1-8])(x?[a-h][1-8])=?(.?)$/)) ? t[i[o[2]]] ? {
                        from: o[2],
                        to: s,
                        promotion: o[4].toLowerCase()
                    } : o[1] + o[3] + o[4] : void 0
                }
                ,
                Chess2.fixObjMove = function(e, t, a) {
                    if (t[i[e.from]] === (b | a) && e.to && e.from[1] === e.to[1]) {
                        if (e.from < e.to)
                            return "O-O";
                        if (e.from > e.to)
                            return "O-O-O"
                    }
                }
                ,
                Chess2.variants = r,
                Chess2
            }(),
            o = function(e) {
                var t = ["bench", "d", "eval", "flip", "isready", "perft", "ponderhit", "stop", "uci", "ucinewgame"]
                  , a = [{
                    cmd: "position",
                    args: ["fen", "startpos", "moves", "continuation"]
                }, {
                    cmd: "go",
                    args: ["binc", "btime", "confidence", "depth", "infinite", "mate", "mindepth", "mintime", "maxdepth", "maxtime", "movestogo", "movetime", "ponder", "searchmoves", "shallow", "winc", "wtime"]
                }]
                  , n = ["moves", "searchmoves"]
                  , o = ["ponder", "infinite", "startpos"]
                  , r = /Total Evaluation[\s\S]+\n$/i;
                function createWebWorker(e, t, a) {
                    var s = new Worker(e || "stockfish.js")
                      , n = {
                        terminate: function terminate() {
                            s.terminate()
                        },
                        postMessage: postMessage,
                        addEventListener: function addEventListener(e, t) {
                            n["on" + e] = t
                        }
                    };
                    function postMessage(e) {
                        s.postMessage(e)
                    }
                    return s.onmessage = function(e) {
                        n.onmessage(e)
                    }
                    ,
                    s.onerror = function(o) {
                        if (t.pathToNonWasmEngine && t.pathToNonWasmEngine !== e) {
                            o.preventDefault && o.preventDefault();
                            try {
                                s.terminate()
                            } catch (r) {}
                            return (s = createWebWorker(t.pathToNonWasmEngine, t, a)).onmessage = function(e) {
                                n.onmessage(e)
                            }
                            ,
                            function requeue(e) {
                                e.length && e.forEach((function(e) {
                                    e.message = "",
                                    postMessage(e.cmd)
                                }
                                ))
                            }(a._activeCommands()),
                            !1
                        }
                        if (t.onError)
                            return t.onError(o)
                    }
                    ,
                    n
                }
                function parseSearchLine(e) {
                    var t, a, s, n, o, r = {}, i = ["lowerbound", "upperbound", "score"], l = ["depth", "seldepth", "time", "nodes", "multipv", "cp", "mate", "currmovenumber", "hashfull", "nps", "tbhits", "sbhits", "cpuload"], c = ["depth", "seldepth", "time", "nodes", "pv", "multipv", "score", "cp", "mate", "lowerbound", "upperbound", "currmove", "currmovenumber", "hashfull", "nps", "tbhits", "sbhits", "cpuload", "string", "refutation", "currline", "bestmove", "ponder", "baseTurn", "pvSan", "bestmoveSan", "ponderSan", "bmc"], u = ["pv", "pvSan", "string", "refutation", "currline"];
                    for (a = (t = e.split(" ")).length,
                    s = "info" === t[0] ? 1 : 0,
                    r.mtype = t[0]; s < a; s += 1)
                        t[s] && (!o || n && c.indexOf(t[s]) > -1 ? (o = t[s],
                        i.indexOf(o) > -1 ? (r[o] = !0,
                        o = null) : n = u.indexOf(o) > -1 || -1 === c.indexOf(o)) : (l.indexOf(o) > -1 && (t[s] = Number(t[s])),
                        n ? (void 0 === r[o] && (r[o] = []),
                        r[o].push(t[s])) : (r[o] = t[s],
                        o = null)));
                    return "(none)" !== r.bestmove && "0000" !== r.bestmove || (r.bestmove = void 0,
                    r.bestmoveSan = void 0),
                    "(none)" !== r.ponder && "0000" !== r.ponder || (r.ponder = void 0,
                    r.ponderSan = void 0),
                    r
                }
                function getFirstWord(e) {
                    var t = e.indexOf(" ");
                    return -1 === t ? e : e.substr(0, t)
                }
                return function loadEngine(i, l) {
                    var c, u, d = {}, h = function createWorker(e, t) {
                        var a = e.pathToNonWasmEngine && "undefined" == typeof WebAssembly ? e.pathToNonWasmEngine : e.enginePath || e.pathToEngineWorker;
                        if (e.pathToWasmEngine && (a += "#" + e.pathToWasmEngine),
                        "undefined" != typeof Worker)
                            return createWebWorker(a, e, t)
                    }(i, d), p = [], m = [];
                    function onmessage(t) {
                        var a, s, n, o, i, l, c = "string" == typeof t ? t : t.data;
                        if (d)
                            if ((null == (a = c.indexOf) ? void 0 : a.call(c, "\n")) > -1)
                                for (i = c.split("\n"),
                                l = 0; l < i.length; l += 1)
                                    onmessage(i[l]);
                            else if (e.log && console.log("debug (onmessage): " + c),
                            d.stream && d.stream(c),
                            p.length && 0 !== c.indexOf("No such option") && 0 !== c.indexOf("id ") && 0 !== c.indexOf("Stockfish") && 0 !== c.indexOf("info string variant") && (n = function determineQueueNum(e, t) {
                                var a, s, n, o, r = getFirstWord(e);
                                if ("bench" !== t[0].cmd && "perft" !== t[0].cmd)
                                    for (a = "uciok" === r || "option" === r ? "uci" : "readyok" === r || "ready" === r ? "isready" : "json" === r ? "fetch" : "bestmove" === r || "info" === r ? "go" : "other",
                                    o = t.length,
                                    n = 0; n < o; n += 1)
                                        if ((s = getFirstWord(t[n].cmd)) === a || "other" === a && ("d" === s || "eval" === s))
                                            return n;
                                return 0
                            }(c, p),
                            o = p[n])) {
                                if (o.stream && !o.discard && o.stream(c),
                                void 0 === o.message ? o.message = "" : "" !== o.message && (o.message += "\n"),
                                o.message += c,
                                "uciok" === getFirstWord(c))
                                    s = !0;
                                else if ("readyok" === getFirstWord(c) || "ready" === getFirstWord(c))
                                    s = !0,
                                    d.ready = !0;
                                else if (0 !== c.indexOf("bestmove") && "bestmove" !== getFirstWord(c) || "bench" === o.cmd)
                                    if ("d" === o.cmd)
                                        0 !== c.indexOf("Legal uci moves") && 0 !== c.indexOf("Key is") || (o.done = !0,
                                        s = !0);
                                    else if ("fetch json" === o.cmd)
                                        try {
                                            o.message = JSON.parse(o.message.replace(/^json /gm, "").replace(/\n/g, "")),
                                            s = !0
                                        } catch (u) {}
                                    else
                                        "eval" === o.cmd ? r.test(o.message) && (s = !0) : (0 === c.indexOf("pawn key") || 0 === c.indexOf("Nodes/second") || 0 === c.indexOf("Unknown command")) && (s = !0);
                                else
                                    s = !0,
                                    o.message = c;
                                s && (p.splice(n, 1),
                                o.cb && !o.discard ? o.cb(o.message) : o.ondiscard && o.ondiscard())
                            }
                    }
                    function bestMoveSearch() {
                        var t, a, s, n, o, r = 1, i = [], l = [], u = null, h = m[0].args, p = m[0].cb, b = m[0].stream, g = h.timeout, f = 1;
                        function convertpv(e) {
                            var t = []
                              , a = l[e] || createSanPv(i[e]);
                            return i[e].forEach((function oneach(e, s) {
                                t.push({
                                    moveSan: a[s],
                                    moveLan: e
                                })
                            }
                            )),
                            t
                        }
                        function getpv(e, t, a, s) {
                            var n;
                            for (n = i.length - 1; n >= 0; n -= 1)
                                if (i[n][0] === e)
                                    return convertpv(n);
                            return a ? [{
                                moveSan: t,
                                moveLan: e
                            }, {
                                moveSan: s,
                                moveLan: a
                            }] : t ? [{
                                moveSan: t,
                                moveLan: e
                            }] : []
                        }
                        function convertScore(e) {
                            0 === e.mate ? (e.mateIn = 0,
                            e.cp = -31800 * f) : (e.mateIn = Number(e.mate * f) || null,
                            "number" != typeof e.mateIn || isNaN(e.mateIn) || "number" == typeof e.cp ? (e.cp *= f,
                            9 === Math.abs(e.cp) && (e.cp = 0),
                            h.normalize && e.depth <= 14 && "number" == typeof loadEngine._previousCP && 1 === e.multipv && function normalize(e) {
                                var t = .03 * Math.pow(32, e.depth / 14);
                                e.cp = loadEngine._previousCP + (e.cp - loadEngine._previousCP) * t
                            }(e)) : e.cp = 31800 * f * (e.mate / Math.abs(e.mate))),
                            e.score = e.cp / 100
                        }
                        function addBestMoveProps(o) {
                            var i;
                            if (o.baseTurn = s,
                            o.cp = t,
                            o.score = t / 100,
                            o.mate = a,
                            o.mateIn = u,
                            o.depth = r,
                            o.moveLan = o.bestmove,
                            o.moveLan) {
                                if (o.move = e.uciToObj(o.moveLan)[0],
                                !(i = n.move(o.move)))
                                    throw d.forceStop(),
                                    new Error("Bad moveLan in line: " + o.moveLan + " at " + n.fen() + "\ndata: " + JSON.stringify(o) + "\nargs: " + JSON.stringify(h));
                                if (o.moveSan = o.bestmoveSan = i.san,
                                o.ponder && ("(none)" !== o.ponder || "0000" !== o.ponder)) {
                                    if (!(i = n.move(e.uciToObj(o.ponder)[0])))
                                        throw d.forceStop(),
                                        new Error("Bad ponder in line: " + o.ponder + " at " + n.fen() + "\ndata: " + JSON.stringify(o) + "\nargs: " + JSON.stringify(h));
                                    o.ponderSan = i.san,
                                    n.undo(!0)
                                }
                                n.undo(!0)
                            }
                        }
                        function createSanPv(t) {
                            var a, s, o = t.length, r = [];
                            for (a = 0; a < o; ++a) {
                                if (!(s = n.move(e.uciToObj(t[a])[0])))
                                    throw d.forceStop(),
                                    new Error("Bad pv in line: " + t[a] + " (" + a + ") at " + n.fen() + "\npv: " + JSON.stringify(t) + "\nargs: " + JSON.stringify(h));
                                r.push(s.san)
                            }
                            for (a = 0; a < o; ++a)
                                n.undo(!0);
                            return r
                        }
                        function createTimeout() {
                            g && (clearTimeout(c),
                            c = setTimeout((function() {
                                d.stop(),
                                p && (p(),
                                p = void 0)
                            }
                            ), g))
                        }
                        h.timeout = void 0,
                        m[0].started = !0,
                        h.difficulty >= 0 && h.difficulty < 20 ? (d.setoption("Skill Level", h.difficulty),
                        h.maximumError >= 0 && h.maximumError <= 4999 && d.setoption("Skill Level Maximum Error", h.maximumError),
                        h.errorProbability >= 1 && h.errorProbability <= 128 && d.setoption("Skill Level Probability", h.errorProbability)) : d.setoption("Skill Level", 20),
                        void 0 !== h.contempt ? d.setoption("Contempt", h.contempt) : d.setoption("Contempt", "0"),
                        h.multiPv > 1 ? d.setoption("MultiPV", h.multiPv) : d.setoption("MultiPV", 1),
                        h.movetime || h.wtime && h.btime || h.depth || (h.btime = h.btime || 72e3,
                        h.wtime = h.wtime || 72e3),
                        !h.startpos && h.fen || h.moves || h.variant ? (n = e.createGame({
                            fen: h.fen ? (o = h.fen,
                            (o + "").replace(/\[([qrbnp]*)\]/i, "/$1").replace(/([0-3])\+([0-3]) (\d+ \d+)/, (function(e, t, a, s) {
                                return s + " +" + (3 - t) + "+" + (3 - a)
                            }
                            ))) : "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
                            moves: h.moves,
                            variant: h.variant,
                            disableHashing: !0
                        })).turn() === n.WHITE ? s = "w" : (s = "b",
                        f = -1) : (s = "w",
                        n = e.createGame({
                            disableHashing: !0
                        })),
                        d.setVariant(h.variant),
                        d.position(h),
                        d.go(h, (function returnBestMove(e) {
                            var a = parseSearchLine(e);
                            if (addBestMoveProps(a),
                            r > 14 && t < 5e3 && t > -5e3 && (loadEngine._previousCP = t),
                            a.pv = getpv(a.moveLan, a.moveSan),
                            1 === a.pv.length && a.ponder && (a.pv = getpv(a.moveLan, a.moveSan, a.ponder, a.ponderSan)),
                            p)
                                try {
                                    p(a)
                                } catch (s) {
                                    console.error(s)
                                }
                            m.shift(),
                            m.length > 0 && bestMoveSearch(),
                            clearTimeout(c)
                        }
                        ), (function streamInfo(e) {
                            var n = parseSearchLine(e);
                            n.score && (n.baseTurn = s,
                            convertScore(n),
                            !n.multipv && n.depth && (n.multipv = 1),
                            1 !== n.multipv && 0 !== n.depth || (t = n.cp,
                            a = n.mate,
                            u = n.mateIn)),
                            n.pv && b && (n.pvSan = createSanPv(n.pv)),
                            !n.pv || n.lowerbound || n.upperbound || (i.push(n.pv),
                            b && l.push(n.pvSan)),
                            n.depth > r ? r = n.depth : "bestmove" === n.mtype && addBestMoveProps(n),
                            !b || 0 === n.mateIn && n.pv || b(n),
                            createTimeout()
                        }
                        )),
                        createTimeout()
                    }
                    function startUp() {
                        d.isready((function onstart() {
                            i.settings ? d.uci((function onuci() {
                                Object.keys(i.settings).forEach((function oneach(e) {
                                    d.setoption(e, i.settings[e])
                                }
                                )),
                                l && l(d)
                            }
                            )) : l && l(d)
                        }
                        ))
                    }
                    return d.send = function(t, a, s) {
                        var n;
                        t = String(t).trim(),
                        e.log && console.log("debug (send): " + t),
                        "ucinewgame" !== t && "flip" !== t && "stop" !== t && "ponderhit" !== t && 0 !== t.indexOf("position") && 0 !== t.indexOf("setoption") ? p[p.length] = {
                            cmd: t,
                            cb: a,
                            stream: s
                        } : n = !0,
                        h && (h.postMessage(t),
                        n && a && setTimeout(a, 0))
                    }
                    ,
                    d._activeCommands = function() {
                        return p
                    }
                    ,
                    d.quit = function() {
                        h && h.terminate && (h.terminate(),
                        h = null,
                        d.ready = void 0),
                        clearTimeout(c)
                    }
                    ,
                    t.forEach((function oneach(e) {
                        d[e] = function makeSCmd(t, a) {
                            d.send(e, t, a)
                        }
                    }
                    )),
                    a.forEach((function oneach(e) {
                        d[e.cmd] = function makeCCmd(t, a, s) {
                            var r = [e.cmd];
                            u && t.fen && (t.fen = function convertStockfishVariantFen(e) {
                                return (e + "").replace(/^([^/]+)((?:\/[^/]+){7})\/([qrbnp]*)/i, "$1$2[$3]").replace(/( \d+ \d+) \+([0-3])\+([0-3])/, (function(e, t, a, s) {
                                    return " " + (3 - a) + "+" + (3 - s) + t
                                }
                                ))
                            }(t.fen)),
                            e.args.forEach((function oneach2(e) {
                                if (t[e] || 0 === t[e]) {
                                    if (n.indexOf(e) > -1) {
                                        if (!t[e] || !t[e].length)
                                            return;
                                        Array.isArray(t[e]) && (t[e] = t[e].join(" "))
                                    }
                                    r.push(e),
                                    -1 === o.indexOf(e) && r.push(t[e])
                                }
                            }
                            )),
                            d.send(r.join(" "), a, s)
                        }
                    }
                    )),
                    d.setoption = function(e, t) {
                        d.send("setoption name " + e + " value " + t)
                    }
                    ,
                    d.setVariant = function(e) {
                        var t;
                        e !== u && (t = String(e).toLowerCase().replace(/ |-/g, ""),
                        e && "chess" !== t ? "chess960" === t ? (d.setoption("UCI_Variant", "chess"),
                        d.setoption("UCI_Chess960", "true")) : ("threecheck" === t && (t = "3check"),
                        d.setoption("UCI_Variant", t),
                        d.setoption("UCI_Chess960", "false")) : (t = void 0,
                        d.setoption("UCI_Variant", "chess"),
                        d.setoption("UCI_Chess960", "false")),
                        u = t)
                    }
                    ,
                    d.loadBook = function(e, t) {
                        s.loadBook(e, (function onload(a, s) {
                            d.book = s,
                            d.pathToBook = e,
                            d.bookLoaded = !0,
                            a && (console.error("Error loading opening book."),
                            console.error(a),
                            d.pathToBook = null,
                            d.bookLoaded = !1),
                            t()
                        }
                        ))
                    }
                    ,
                    d.getBestMove = function(t, a, s) {
                        var n;
                        if ((t = t || {}).fen = t.fen || t.baseFen,
                        t.is960 && (t.variant = "Chess960"),
                        d.bookLoaded && t.useBook && (n = function getBookMove(t) {
                            var a, s, n;
                            if (n = t.moves && t.moves.length ? e.getFenFromMoves(t.fen, t.moves, t.variant) : t.fen,
                            (a = d.book.pick({
                                fen: n,
                                type: void 0 !== t.bookPick ? t.bookPick : "random",
                                chess960: "Chess960" === t.variant
                            })) && (e.getLegalMoves(n, t.variant).some((function(e) {
                                if (e.from + e.to + (e.promotion || "") === a)
                                    return s = e,
                                    !0
                            }
                            )),
                            s))
                                return {
                                    moveSan: s.san,
                                    moveLan: a,
                                    move: {
                                        from: s.from,
                                        to: s.to,
                                        promotion: s.promotion || null
                                    },
                                    baseTurn: n.split(" ")[1],
                                    pv: [{
                                        moveSan: s.san,
                                        moveLan: a
                                    }],
                                    depth: null,
                                    score: null,
                                    mateIn: null,
                                    isBookMove: !0
                                }
                        }(t),
                        n))
                            return setTimeout((function() {
                                n.mtype = "bestmove",
                                a(n)
                            }
                            ), 0);
                        !function queueBestMoveSearch(e, t, a) {
                            m.push({
                                args: e,
                                cb: t,
                                stream: a
                            }),
                            1 === m.length && bestMoveSearch()
                        }(t, a, s)
                    }
                    ,
                    d.stopAll = function(t) {
                        var a, s = p.length, n = 0;
                        function ondiscard() {
                            0 == (n -= 1) && t()
                        }
                        for (m = [],
                        a = 0; a < s; a += 1)
                            e.log && console.log("debug (stop_moves): " + a, getFirstWord(p[a].cmd)),
                            "go" !== getFirstWord(p[a].cmd) || p[a].discard || (d.stop(),
                            p[a].discard = !0,
                            t && (n += 1,
                            p[a].ondiscard = ondiscard));
                        t && !n && d.isready(t)
                    }
                    ,
                    d.restartEngine = function(e) {
                        return d.stopAll(),
                        d.quit(),
                        p = [],
                        m = [],
                        d.bookLoaded && !i.book && ((i = JSON.parse(JSON.stringify(i))).book = d.book),
                        loadEngine(i, e)
                    }
                    ,
                    d.forceStop = function() {
                        d.stopAll((function() {}
                        ))
                    }
                    ,
                    d.stopFast = function(e, t) {
                        var a;
                        d.stopAll((function() {
                            clearTimeout(a),
                            e(d)
                        }
                        )),
                        a = setTimeout((function() {
                            d.restartEngine(e)
                        }
                        ), t || 5e3)
                    }
                    ,
                    "undefined" != typeof Worker && (function addListener() {
                        h.addEventListener("message", onmessage, !1)
                    }(),
                    i.book && (d.book = i.book,
                    d.bookLoaded = !0,
                    d.pathToBook = i.pathToBook),
                    !d.book && i.pathToBook ? d.loadBook(i.pathToBook, startUp) : setTimeout(startUp, 0),
                    d.getFenFromMoves = e.getFenFromMoves,
                    d.getLegalMoves = e.getLegalMoves,
                    d.getPositionInfo = e.getPositionInfo,
                    d.isFenValid = e.isFenValid,
                    d.ready = !1,
                    d)
                }
            }
            ,
            function() {
                var e, t = n(), a = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1", r = 252, i = {
                    4: "p",
                    5: "P",
                    6: "p",
                    8: "n",
                    9: "N",
                    10: "n",
                    16: "b",
                    17: "B",
                    18: "b",
                    32: "r",
                    33: "R",
                    34: "r",
                    64: "q",
                    65: "Q",
                    66: "q",
                    128: "k",
                    129: "K",
                    130: "k"
                }, l = "pnbrq", c = 512, u = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!?{~}(^)[_]@#$,./&-*++=", d = "qnrbkp";
                function decodeTCN(e) {
                    var t, a, s, n, o = e.length, r = [];
                    for (t = 0; t < o; t += 2)
                        n = {},
                        a = u.indexOf(e[t]),
                        (s = u.indexOf(e[t + 1])) > 63 && (n.promotion = d[Math.floor((s - 64) / 3)],
                        s = a + (a < 16 ? -8 : 8) + (s - 1) % 3 - 1),
                        a > 75 ? n.drop = d[a - 79] : n.from = u[a % 8] + (Math.floor(a / 8) + 1),
                        n.to = u[s % 8] + (Math.floor(s / 8) + 1),
                        r.push(n);
                    return r
                }
                function uciToObj(e) {
                    var t, a, s = e.split(" "), n = s.length, o = [];
                    if (e)
                        for (t = 0; t < n; ++t)
                            4 === (a = s[t]).length ? "@" === a[1] ? o.push({
                                drop: a[0].toLowerCase(),
                                to: a.substr(2, 2)
                            }) : o.push({
                                from: a.substr(0, 2),
                                to: a.substr(2, 2)
                            }) : o.push({
                                from: a.substr(0, 2),
                                to: a.substr(2, 2),
                                promotion: a[4]
                            });
                    return o
                }
                function isSameMove(e, t) {
                    return e.san === t.san || e.from == t.from && e.to == t.to && e.promotion == t.promotion && e.drop == t.drop
                }
                function makePremove(e, a, s) {
                    var o, r, i, l, c, u = e.header().Variant, d = getPremoves(e.fen(), a, u);
                    if (d) {
                        for (o = d.length - 1; o >= 0; --o)
                            if (isSameMove(r = d[o], s)) {
                                i = !0;
                                break
                            }
                        if (i)
                            return r.drop ? e.put({
                                type: r.drop,
                                color: a
                            }, r.to, !0) : (l = e.remove(r.from, !0),
                            r.flags === t.FLAGS.KSIDE_CASTLE ? (c = e.remove("Chess960" === u ? r.to : "h" + r.from[1], !0),
                            e.put(l, "g" + r.from[1], !0),
                            e.put(c, "f" + r.from[1], !0)) : r.flags === t.FLAGS.QSIDE_CASTLE ? (c = e.remove("Chess960" === u ? r.to : "a" + r.from[1], !0),
                            e.put(l, "c" + r.from[1], !0),
                            e.put(c, "d" + r.from[1], !0)) : (r.promotion && (l.type = r.promotion,
                            l.promoted = !0),
                            e.put(l, r.to, !0))),
                            r
                    }
                    if (s.from && (s = n.fixObjMove(s, e._board(), a)))
                        return makePremove(e, a, {
                            san: s
                        })
                }
                function getPieces(e, t) {
                    var a, s, n, o = t ? {} : [], l = e._board();
                    if (t)
                        for (a = 112; a >= 0; ++a)
                            136 & a && (a -= 24),
                            (s = l[a]) && (o[n = u[7 & a] + (8 - (a >> 4))] = {
                                type: i[s & r],
                                color: 3 & s,
                                promoted: 0 != (s & c),
                                square: n
                            });
                    else
                        for (a = 112; a >= 0; ++a)
                            136 & a && (a -= 24),
                            (s = l[a]) && o.push({
                                type: i[s & r],
                                color: 3 & s,
                                promoted: 0 != (s & c),
                                rank: 8 - (a >> 4),
                                file: 1 + (7 & a)
                            });
                    return o
                }
                function makeMoves(e, t, a, s) {
                    var n, o, r, i, l, c, u, d, h, p;
                    for (a = a || {},
                    "string" == typeof t && (t = t.trim().split(" ")),
                    r = t.length,
                    n = 0; n < r; n += 1) {
                        if (l = "b" === t[n].board || "B" === t[n].board ? e.siblingGame : e,
                        c = "string" == typeof t[n] ? uciToObj(t[n])[0] : t[n].san ? t[n].san : t[n],
                        !l.move(c)) {
                            if (!a.autoPromote) {
                                if (a.skipBadLines)
                                    break;
                                return !1
                            }
                            if (!0 === a.autoPromote ? c.promotion = "q" : c.promotion = a.autoPromote,
                            !l.move(c)) {
                                if (a.skipBadLines)
                                    break;
                                return !1
                            }
                        }
                        if (d = (u = l._history())[u.length - 1],
                        s && (h = parseInt(s[n], 10)),
                        ("number" != typeof h || isNaN(h)) && (h = parseInt(t[n].time, 10)),
                        "number" != typeof h || isNaN(h) || (d.time = h,
                        h = void 0),
                        t[n].firstComment && (u.initComment = t[n].firstComment),
                        t[n].comment && (d.comment = t[n].comment),
                        t[n].annotation && (d.annotation = t[n].annotation),
                        t[n].additionalAnnotation && (d.additionalAnnotation = t[n].additionalAnnotation),
                        t[n].commands && (d.commands = t[n].commands),
                        t[n].lines)
                            for (i = t[n].lines.length,
                            o = 0; o < i; ++o) {
                                if (p = e._history().id,
                                e.createVariation(),
                                !makeMoves(e, t[n].lines[o], a) && !a.skipBadLines)
                                    return !1;
                                e.selectLine(p)
                            }
                    }
                    return !0
                }
                function extendChess(e) {
                    var t, s, o = -1, r = 0;
                    function fixContComment(t) {
                        var a = e._lines()[t.ids.line];
                        return a.initComment && (t.comment = (a.initComment + " " + (t.comment || "")).trim(),
                        a.initComment = ""),
                        !0
                    }
                    e.extended || (e.extended = !0,
                    t = {
                        header: e.header,
                        load: e.load,
                        loadPgn: e.loadPgn,
                        createVariation: e.createVariation,
                        undo: e.undo,
                        pgn: e.pgn
                    },
                    e._move = e.move,
                    e.premoves = [],
                    e.undo = function() {
                        return e.deletePosition(o, r)
                    }
                    ,
                    e.isLegalMove = function(a) {
                        return !!e._move(a) && t.undo(!0)
                    }
                    ,
                    e.premove = function(t, a) {
                        var s, o = e.premoves.length, r = n();
                        return o ? r.load(e.premoves[o - 1].fen, e.header().Variant) : r.load(e.fen(), e.header().Variant),
                        (s = makePremove(r, a, t)) ? (e.premoves.push({
                            move: s,
                            pieces: getPieces(r),
                            fen: r.fen()
                        }),
                        s) : null
                    }
                    ,
                    e.getPieces = function(t) {
                        return getPieces(e, t)
                    }
                    ,
                    e.origHistory = e.history,
                    e.history = function(t, a) {
                        var s, n, o, r = [], i = e._history(), l = i.length, c = e._lines();
                        for ("boolean" == typeof t && (t = {
                            verbose: t
                        }),
                        t = t || {},
                        a && (t.noParentLines = a),
                        t.toCurrent && (l = e.ids().move + 1); ; ) {
                            if (-1 == --l) {
                                if (i.id && !t.noParentLines) {
                                    l = i.atMoveNode,
                                    i = c[i.parentId];
                                    continue
                                }
                                break
                            }
                            if (t.verbose) {
                                for (n in s = {},
                                i[l])
                                    if (i[l][n] && "object" == typeof i[l][n])
                                        for (o in s[n] = i[l][n].constructor === Array ? [] : {},
                                        i[l][n])
                                            s[n][o] = i[l][n][o];
                                    else
                                        s[n] = i[l][n];
                                r.unshift(s)
                            } else
                                r.unshift(i[l].san)
                        }
                        return r
                    }
                    ,
                    e._getPos = function(s, n) {
                        var i, l;
                        return "number" != typeof s && (s = o),
                        "number" != typeof n && (n = r),
                        i = (l = e._lines())[n],
                        s >= 0 ? i[s] : i.id ? i.atMoveNode ? l[i.parentId][i.atMoveNode - 1] : e._getPos(i.atMoveNode - 1, i.parentId) : {
                            fen: t.header().FEN || a,
                            hash: i.hash,
                            initial: !0
                        }
                    }
                    ,
                    e.move = function(t, a) {
                        var s, n, i, l, c = e._history();
                        if (t && ("string" == typeof t || t.to && (t.from || t.drop))) {
                            if (r === c.id && o < c.length - 1 || a) {
                                if (e.moveForward(a, t))
                                    return !0;
                                o < c.length - 1 && (e.selectPosition(o + 1),
                                e.createVariation(),
                                c = e._history())
                            }
                            e.siblingGame && (i = e.isDependent ? e.siblingGame.fen() : e.fen()),
                            (s = e._move(t)) && (normalizeMoveObj(s),
                            r = c.id,
                            n = c[o = c.length - 1],
                            l = e._getPos(o - 1),
                            e.siblingGame ? (e.isDependent ? n.fen = e.siblingGame.fen() : n.fen = e.fen(),
                            n.beforeFen = i) : (n.fen = e.fen(),
                            n.beforeFen = l.fen),
                            l.initial ? (n.moveNumber = 0,
                            n.previous = null) : (n.moveNumber = l.moveNumber + 1,
                            n.previous = l.ids,
                            l.isContinuation && fixContComment(l)),
                            r && 0 === o && e._lines()[c.parentId][c.atMoveNode].move === n.move && (n.isContinuation = !0),
                            n.flags = s.flags,
                            n.to = s.to,
                            n.from = s.from,
                            n.drop = s.drop,
                            n.capturedStr = s.captured,
                            n.promotion = s.promotion,
                            n.piece = s.piece,
                            s.promoted && (n.promoted = !0),
                            s.capturedPromotedPawn && (n.capturedPromotedPawn = !0),
                            n.ids = {
                                move: o,
                                line: r
                            })
                        }
                        return s
                    }
                    ,
                    e.header = e.headers = function(a) {
                        var s = t.header(a);
                        return e.siblingGame && extendChess(e.siblingGame),
                        s
                    }
                    ,
                    e.load = function(a, s, n, i) {
                        var l = t.load(a, s, n, i);
                        return e.siblingGame && extendChess(e.siblingGame),
                        l && !n && (o = -1,
                        r = 0),
                        l
                    }
                    ,
                    e.removeEmptyLines = function() {
                        var t, a, s = e._lines();
                        for (t = s.length - 1; t > 0; --t)
                            s[t].length || (s[t] = void 0,
                            a = !0);
                        a && e.reorderLines()
                    }
                    ,
                    e.loadPgn = function(a, s, n) {
                        var i = t.loadPgn(a, s, n)
                          , l = e._history();
                        return e.removeEmptyLines(),
                        o = l.length - 1,
                        r = l.id,
                        i
                    }
                    ,
                    e.ids = function() {
                        return {
                            move: o,
                            line: r
                        }
                    }
                    ,
                    e.selectLine = function(t) {
                        e.selectPosition(null, t)
                    }
                    ,
                    e.moveBackward = function() {
                        var t;
                        if (o <= 1)
                            if (0 === r) {
                                if (-1 === o)
                                    return !1;
                                e.selectPosition(o - 1)
                            } else
                                (t = e._getPos(o - 1, r)).isContinuation ? e.selectPosition(e._history().atMoveNode, e._history().parentId) : t.initial ? e.selectPosition(-1, 0) : e.selectPosition(t.ids.move, t.ids.line);
                        else
                            e.selectPosition(o - 1);
                        return !0
                    }
                    ,
                    e.moveForward = function(t, a) {
                        var s, i, l, c, u, d, h = e._lines();
                        if ("string" == typeof a && (a = {
                            san: a
                        }),
                        !(s = h[r][o + 1]) || a && !isSameMove(a, s)) {
                            if (a && s && s.lines)
                                for (u = s.lines.length,
                                c = 0; c < u; ++c)
                                    if ((l = h[s.lines[c]][0]) && isSameMove(a, l)) {
                                        s = l,
                                        d = !0;
                                        break
                                    }
                            if (!d && t && (i = h[r][o]) && i.lines)
                                for (u = i.lines.length,
                                c = 0; c < u; ++c)
                                    if ((l = h[i.lines[c]][0]) && l.isContinuation && (l = h[i.lines[c]][1]) && (!a || isSameMove(a, l))) {
                                        s = l,
                                        d = !0;
                                        break
                                    }
                            if (!d)
                                return !!(a && a.san && (a = n.fixSanMove(a.san, e._board(), e.turn())) || a && a.to && a.from && Math.abs(a.to.charCodeAt(0) - a.from.charCodeAt(0)) > 1 && (a = n.fixObjMove(a, e._board(), e.turn()))) && e.moveForward(t, a)
                        }
                        return e.selectPosition(s.ids.move, s.ids.line)
                    }
                    ,
                    e.moveVariation = function(t, a) {
                        var s, n, o, r = e._lines(), i = r[t];
                        if (i && i.id)
                            for (n = (s = r[i.parentId][i.atMoveNode].lines).length - 1; n >= 0; --n)
                                if (s[n] === t && s[o = n - (a ? 1 : -1)])
                                    return s[n] = s[o],
                                    s[o] = t,
                                    e.reorderLines(),
                                    !0;
                        return !1
                    }
                    ,
                    e.promoteVariation = function(t, a) {
                        for (var s, n, i, l, c, u, d = e._lines(), h = d[t]; h && h[0] && h.id && (-1 !== a || h.parentId); ) {
                            for (s = d[i = h.parentId],
                            l = h.atMoveNode,
                            h[0].lines = s[l].lines.concat(h[0].lines || []),
                            s[l].lines = void 0,
                            u = s.length - l,
                            n = s.splice(l, u),
                            c = 0; c < u; ++c)
                                n[c].ids.line = t,
                                n[c].ids.move = c;
                            for (n.id = t,
                            n.parentId = i,
                            n.atMoveNode = l,
                            n.hash = h.hash,
                            0 === l ? (n.initComment = s.initComment,
                            s.initComment = h.initComment) : h.initComment && (s[l - 1].comment = ((s[l - 1].comment || "") + " " + h.initComment).trim()),
                            d[t] = n,
                            u = h.length,
                            c = 0; c < u; ++c)
                                h[c].ids.line = i,
                                h[c].ids.move = c + l,
                                s.push(h[c]);
                            for (n[0].isContinuation = !!h[0].isContinuation && fixContComment(n[0]),
                            s[l].isContinuation = !l && "number" == typeof s.parentId && d[s.parentId][s.atMoveNode].move === s[0].move && fixContComment(s[l]),
                            u = s[l].lines.length,
                            c = 0; c < u; ++c)
                                d[s[l].lines[c]].atMoveNode = l,
                                d[s[l].lines[c]][0] && (d[s[l].lines[c]][0].isContinuation = d[s[l].lines[c]][0].move === s[l].move && fixContComment(d[s[l].lines[c]][0]));
                            if (r === t ? (r = i,
                            o += l) : r === i && o >= l && (r = t,
                            o -= l),
                            1 === a)
                                break;
                            h = d[t = i]
                        }
                        return void 0 !== s && (e._history(d[r]),
                        e.reorderLines(),
                        !o && d[r][0].isContinuation && e.selectPosition(d[r].atMoveNode, d[r].parentId),
                        !0)
                    }
                    ,
                    e.reorderLines = function(t, a) {
                        var n, o, i, l, c, u, d, h, p, m, b = e._lines();
                        for (t ? p = a.length - 1 : (t = 0,
                        a = [b[0]],
                        p = 0,
                        s = !1),
                        i = (n = b[t]).length,
                        o = 0; o < i; ++o)
                            if ((l = n[o]).ids.line = p,
                            l.lines)
                                for (c = l.lines.length,
                                u = 0; u < c; ++u)
                                    (h = b[d = l.lines[u]]) ? (h.atMoveNode = o,
                                    m = a.length,
                                    l.lines[u] = m,
                                    h.parentId = p,
                                    s || d !== r || (s = !0,
                                    r = m),
                                    a.push(h),
                                    e.reorderLines(d, a)) : (1 === l.lines.length ? delete l.lines : l.lines.splice(u, 1),
                                    --u,
                                    --c);
                        t || e.saveLines(a, !0)
                    }
                    ,
                    e.createVariation = function() {
                        var a, s, n, i, l = e._history(), c = e._lines();
                        return o === l.length - 1 ? (a = t.createVariation(),
                        l = e._history(),
                        o = l.length - 1,
                        r = l.id,
                        a) : -1 !== o && (s = [],
                        n = l[o],
                        s.parentId = l.id,
                        s.id = c.length,
                        n.lines || (n.lines = []),
                        n.lines.push(s.id),
                        i = e._getPos(o - 1),
                        s.hash = i.hash,
                        s.atMoveNode = o,
                        c.push(s),
                        e.selectPosition(-1, s.id))
                    }
                    ,
                    e.selectLineEnd = function(t) {
                        return "number" != typeof t && (t = r),
                        (t !== r || o < e._history().length - 1) && e.selectPosition(null, t, !0)
                    }
                    ,
                    e.selectLineStart = function() {
                        var t, a;
                        return r ? (o > 1 || 1 === o && !e._getPos(0).isContinuation ? t = e._history() : (a = e._getPos(-1),
                        t = e._lines()[a.ids ? a.ids.line : 0]),
                        e.selectPosition(t.id ? t[1] && t[0].isContinuation ? 1 : 0 : -1, t.id)) : -1 !== o && e.selectPosition(-1, 0)
                    }
                    ,
                    e.selectPosition = function(a, s, n) {
                        var i = e._lines()
                          , l = e._history();
                        if ("number" == typeof s && (s !== r || n)) {
                            if (s < 0 || s >= i.length)
                                return !1;
                            if (l = i[s],
                            "number" != typeof a)
                                a = l.length - 1;
                            else if (a < -1 || a >= l.length)
                                return !1;
                            r = s,
                            e._history(l),
                            n = !0
                        }
                        if ("number" == typeof a && (a !== o || n)) {
                            if (a < -1 || a >= l.length)
                                return !1;
                            t.load(e._getPos(a).fen, t.header().Variant, !0, !0),
                            o = a
                        }
                        return !0
                    }
                    ,
                    e.resetToMainLine = function() {
                        var t = e._lines();
                        e.selectLineEnd(0),
                        t.length > 1 && (t.length = 1,
                        e.reorderLines())
                    }
                    ,
                    e.saveLines = function(t, a) {
                        var s, n, o, r = e._lines(), i = t.length;
                        for (t !== r && (r.length = 0),
                        n = 0; n < i; ++n) {
                            if (s = t[n],
                            n && "number" != typeof s.parentId)
                                return !1;
                            t !== r && r.push(s),
                            s.id = n
                        }
                        return a || (o = e.ids(),
                        e.selectPosition(-1, 0, !0),
                        e.selectPosition(o.move, o.line)),
                        !0
                    }
                    ,
                    e.deletePosition = function(t, a) {
                        var s, n, i = e._lines();
                        return !(!i[a] || !(i[a][t] || -1 === t && 0 !== a)) && (a && (0 === t || 1 === t && i[a][0].isContinuation) && (t = -1),
                        r > 0 && a !== r ? (s = function descendsFromMove(e, t, a) {
                            for (var s, n = e[t]; "number" == typeof (s = n.parentId); ) {
                                if (s === a)
                                    return n.atMoveNode;
                                n = e[s]
                            }
                            return !1
                        }(i, r, a),
                        n = !1 !== s && s >= t) : a === r && t <= o && (n = !0),
                        n && (t > 1 ? e.selectPosition(t - 1, a) : (e.selectPosition(i[a][0].isContinuation || 1 === t ? 1 : 0, a),
                        e.moveBackward())),
                        t > 0 ? i[a].length = t : a ? i[a] = null : i[0].length = 0,
                        e.reorderLines(),
                        e.ids())
                    }
                    ,
                    e.mark = function(t, a) {
                        var s = o < 0 ? e._lines()[r] : e._lines()[r][o]
                          , n = t.type
                          , i = 1;
                        t.color && ("arrow" === n ? e.mark({
                            key: t.color + t.key,
                            type: "cal"
                        }, a) : "square" === n && e.mark({
                            key: t.color + t.key,
                            type: "csl"
                        }, a)),
                        "cal" !== n && "csl" !== n && (n = "c_" + n,
                        i = 0),
                        s.commands && s.commands[n] && (s.commands[n] = s.commands[n].split(",").filter((function rm(e) {
                            return e.slice(i).split(";")[0] !== t.key.slice(i)
                        }
                        )).join(","),
                        s.commands[n] || delete s.commands[n]),
                        a || (s.commands || (s.commands = {}),
                        s.commands[n] = (s.commands[n] ? s.commands[n] + "," : "") + t.key + (t.data ? ";" + t.data.join(";") : ""))
                    }
                    ,
                    e.markings = function() {
                        var t, a, s, n, i, l, c, u, d = {}, h = o < 0 ? e._lines()[r] : e._lines()[r][o], p = {
                            cal: "arrow",
                            csl: "square"
                        };
                        for (a in h.commands) {
                            if (s = h.commands[a],
                            p[a])
                                a = p[a],
                                n = 0;
                            else {
                                if ("c_" !== a.substr(0, 2))
                                    continue;
                                a = a.slice(2),
                                n = 1
                            }
                            for (d[a] = d[a] || {},
                            l = (i = s.split(",")).length,
                            t = 0; t < l; ++t)
                                n ? (u = (c = i[t].split(";")).shift(),
                                d[a][u] = d[a][u] || {
                                    type: a,
                                    key: u
                                },
                                d[a][u].data = c) : (u = i[t].slice(1),
                                d[a][u] = d[a][u] || {
                                    type: a,
                                    key: u
                                },
                                d[a][u].color = i[t][0])
                        }
                        return d
                    }
                    ,
                    e.clearMarkings = function() {
                        var t, a = o < 0 ? e._lines()[r] : e._lines()[r][o];
                        for (t in a.commands)
                            /^c[sa]l$|^c_/.test(t) && delete a.commands[t]
                    }
                    ,
                    e.pgn = function(a) {
                        var s, n = e.ids();
                        return e.selectLineEnd(0),
                        s = t.pgn(a),
                        e.selectPosition(n.move, n.line),
                        s
                    }
                    ,
                    e.loadMoves = function(t, a) {
                        var s, n, i;
                        if (a = a || {},
                        "string" == typeof t && (t = decodeTCN(t)),
                        t) {
                            for (a.atCurrent || e.selectPosition(-1, 0),
                            i = r,
                            n = t.length,
                            s = 0; s < n; ++s) {
                                if (!e.move(t[s], !0) && (t[s].promotion = !0 === a.autoPromote ? "q" : a.autoPromote,
                                !e.move(t[s], !0)))
                                    return !1;
                                r !== i && "merge" !== a.method && (e.promoteVariation(r, 1),
                                "promote" !== a.method && (e._history()[o].lines = void 0,
                                e.reorderLines()),
                                i = r)
                            }
                            "merge" !== a.method && "promote" !== a.method && e.deletePosition(o + 1, r)
                        }
                        return !0
                    }
                    )
                }
                function createGame(e) {
                    var t, s;
                    if ((e = e || {}).game)
                        return e.game;
                    if (t = n(),
                    e.analysis && extendChess(t),
                    e.disableHashing && t.hashing(!1),
                    e.pgn) {
                        if (!(t.loadPgn(e.pgn, e.index, e.options) || "detect" === e.variant && n.variants.some((function(a) {
                            return e.options = e.options || {},
                            e.options.variant = a,
                            t.loadPgn(e.pgn, e.index, e.options)
                        }
                        ))))
                            return !1
                    } else {
                        if (e.headers && (e.variant = e.headers.Variant || e.variant,
                        e.fen || (e.fen = e.headers.FEN)),
                        "detect" === e.variant && e.fen && (e.fen.indexOf("|") > -1 ? e.variant = "Bughouse" : 9 === e.fen.split("/").length ? e.variant = "Crazyhouse" : e.fen.indexOf("+") > -1 ? e.variant = "3-check" : e.variant = void 0),
                        (e.fen || e.variant) && !t.load(e.fen || a, e.variant))
                            return !1;
                        e.headers && "object" == typeof e.headers && !Array.isArray(e.headers) && t.header(e.headers)
                    }
                    if (e.tcn)
                        if ("object" == typeof e.tcn) {
                            if (!function playBughouseTCN(e, t, a) {
                                var s, n, o, r = [decodeTCN(t[0]), decodeTCN(t[1])], i = [0, 0], l = [0, 0], c = r[0].length + r[1].length, u = Math.max(0 | a[0][0], 0 | a[0][1], 0 | a[1][0], 0 | a[1][1]), d = [0, 0], h = [0, 0];
                                for (s = [[u += 600 - u % 600, u], [u, u]]; c--; ) {
                                    if (h[0] = d[0] + s[0][l[0]] - a[0][i[0]] || 0,
                                    h[1] = d[1] + s[1][l[1]] - a[1][i[1]] || 0,
                                    r[n = h[0] <= h[1] ? 0 : 1][i[n]] || (n ^= 1),
                                    (!(o = n ? e.siblingGame : e).move(r[n][i[n]]) || c && o.inCheckmate() && o.undo(!0)) && !(o = (n ^= 1) ? e.siblingGame : e).move(r[n][i[n]]))
                                        return !1;
                                    o._history()[i[n]].time = a[n][i[n]],
                                    s[n][l[n]] = a[n][i[n]],
                                    d[n] = h[n],
                                    l[n] ^= 1,
                                    ++i[n]
                                }
                                return !0
                            }(t, e.tcn, e.timestamps || [[], []]))
                                return !1
                        } else
                            s = decodeTCN(e.tcn);
                    else
                        s = e.moves;
                    return !(s && !makeMoves(t, s, e, e.timestamps)) && t
                }
                function normalizeMoveObj(e) {
                    return e && (e.piece & c && (e.promoted = !0),
                    e.piece = i[e.piece & r],
                    e.captured && (e.captured & c && (e.capturedPromotedPawn = !0),
                    e.captured = i[255 & e.captured]),
                    e.promotion && (e.promotion = i[e.promotion & r]),
                    void 0 !== e.drop && (e.drop = l[e.drop])),
                    e
                }
                function normalizeHistory(e) {
                    var t, a, s, n, o, r, i, l = e.history(!0, !0);
                    if (e.siblingGame) {
                        for (t = e.siblingGame.history(!0, !0),
                        s = l.length + t.length,
                        a = [],
                        n = 0; n < s; ++n)
                            !l.length || t.length && t[0].bughouseOrder < l[0].bughouseOrder ? (o = t.shift()).board = "b" : (o = l.shift()).board = "a",
                            a.push(o);
                        l = a
                    }
                    for (s = l.length,
                    n = 0; n < s; ++n)
                        if ((r = l[n]).fen || normalizeMoveObj(r),
                        r.lines)
                            for (i = r.lines.length - 1; i >= 0; --i)
                                e.selectLine(r.lines[i]),
                                r.lines[i] = normalizeHistory(e).moves;
                    return {
                        moves: l
                    }
                }
                function getPremoves(e, a, s) {
                    var o, r, i, c, u, d, h, p, m = [];
                    function pawnCapture(e) {
                        var s, n = u[0] + "x" + e;
                        if (1 === a && 7 === o || 2 === a && 2 === o)
                            for (s = 4; s > 0; --s)
                                m.push({
                                    color: a,
                                    to: e,
                                    flags: t.FLAGS.CAPTURE | t.FLAGS.PROMOTION,
                                    from: u,
                                    promotion: 1 << s + 2,
                                    piece: 4,
                                    san: n + "=" + l[s].toUpperCase()
                                });
                        else
                            1 === o && 2 === a || 8 === o && 1 === a || m.push({
                                color: a,
                                to: e,
                                flags: t.FLAGS.CAPTURE,
                                from: u,
                                piece: 4,
                                san: n
                            })
                    }
                    if (1 !== a && 2 !== a || !t.load(e, s || "chess"))
                        return null;
                    for (e = t.fen(),
                    (c = n()).clear(),
                    s && c.header({
                        Variant: s
                    }),
                    t.turn(a),
                    c.turn(a),
                    o = 1; o < 9; ++o)
                        for (r = 1; r < 9; ++r)
                            u = String.fromCharCode(r + 96) + o,
                            (i = t.get(u)) && (t.remove(u, !0),
                            i.color === a && ("p" === i.type ? (r > 1 && pawnCapture(String.fromCharCode(r - 1 + 96) + (o + (1 === a ? 1 : -1))),
                            r < 8 && pawnCapture(String.fromCharCode(r + 1 + 96) + (o + (1 === a ? 1 : -1)))) : "k" === i.type && (h = u[0],
                            p = o),
                            c.put(i, u, !0),
                            m = m.concat(c.moves({
                                verbose: !0
                            })),
                            c.remove(u, !0)));
                    return "-" !== (d = e.split(" ")[2]) && d.split("").forEach((function(e) {
                        (1 === a && e < "a" || 2 === a && e >= "a") && ("k" === (e = e.toLowerCase()) ? m.push({
                            color: a,
                            to: "g" + p,
                            flags: t.FLAGS.KSIDE_CASTLE,
                            from: "e" + p,
                            piece: 128,
                            san: "O-O"
                        }) : "q" === e ? m.push({
                            color: a,
                            to: "c" + p,
                            flags: t.FLAGS.QSIDE_CASTLE,
                            from: "e" + p,
                            piece: 128,
                            san: "O-O-O"
                        }) : e > h ? m.push({
                            color: a,
                            to: e + p,
                            flags: t.FLAGS.KSIDE_CASTLE,
                            from: h + p,
                            piece: 128,
                            san: "O-O"
                        }) : m.push({
                            color: a,
                            to: e + p,
                            flags: t.FLAGS.QSIDE_CASTLE,
                            from: h + p,
                            piece: 128,
                            san: "O-O-O"
                        }))
                    }
                    )),
                    (m = m.concat(t.moves({
                        verbose: !0
                    }))).forEach((function(e) {
                        normalizeMoveObj(e)
                    }
                    )),
                    m
                }
                function getLegalMoves(e, a) {
                    var s, n, o, r;
                    if ("string" == typeof e) {
                        if (!(n = t).load(e, a))
                            return null
                    } else
                        n = createGame(e);
                    for (r = (s = n.moves({
                        verbose: !0
                    })).length,
                    o = 0; o < r; ++o)
                        normalizeMoveObj(s[o]);
                    return s
                }
                function jce(t, a) {
                    return (e = e || o(jce))(t, a)
                }
                return jce.gameFingerprints = function gameFingerprints(e) {
                    var t, n, o, r, i, l, c, u, d, h = createGame(e), p = [""], m = [];
                    if (!h)
                        return !1;
                    for (d = (u = h.header()).Variant || "",
                    l = h.hashes(),
                    t = "function" == typeof h.origHistory ? h.origHistory(!0) : h.history(!0),
                    i = l.length,
                    n = [l[0][0], l[0][1]],
                    m.push(s.to64BitHex(n) + d),
                    l[0] = s.to64BitHex(l[0]),
                    o = 1; o < i; ++o)
                        n[0] = (n[0] ^ l[o][0] * (o + 58465)) >>> 0,
                        n[1] = (n[1] ^ l[o][1] * (o + 984)) >>> 0,
                        l[o] = s.to64BitHex(l[o]),
                        m.push(s.to64BitHex(n) + d),
                        normalizeMoveObj(t[r = o - 1]),
                        c = (t[r].from ? t[r].from : t[r].drop.toUpperCase() + "@") + t[r].to + (t[r].promotion || ""),
                        r && (c = p[r] + " " + c),
                        p.push(c);
                    return {
                        startingFen: u.FEN || a,
                        hashes: l,
                        fingerprints: m,
                        moves: p,
                        variant: u.Variant
                    }
                }
                ,
                jce.getFenFromMoves = function getFenFromMoves(e, a, s) {
                    return t.reset(),
                    t.load(e, s),
                    !(a && !makeMoves(t, a)) && t.fen()
                }
                ,
                jce.getLegalMoves = getLegalMoves,
                jce.getPremoves = getPremoves,
                jce.getPositionInfo = function getPositionInfo(e, a, s) {
                    var n, o, r, i = {
                        gameOver: !1,
                        check: !1,
                        checkmate: !1,
                        draw: !1,
                        stalemate: !1,
                        threefold: !1,
                        insufficient: !1
                    };
                    if (Array.isArray(a) || (s = a,
                    a = null),
                    "boolean" == typeof s ? (n = s,
                    s = {}) : n = (s = s || {}).variant,
                    "string" == typeof e) {
                        if (0 !== (r = t).validateFen(e, n) || !r.load(e, n))
                            return !1
                    } else
                        r = createGame(e);
                    return !(a && !makeMoves(r, a)) && (s.getLegalMoves ? (o = getLegalMoves({
                        game: r
                    }),
                    i.legalMoves = o) : o = r.moves(),
                    r.inCheck() ? (i.check = !0,
                    i.checkmate = 0 === o.length) : i.stalemate = 0 === o.length,
                    s.premove && (s.check = !1,
                    s.kings = !1),
                    i.threefold = r.inThreefoldRepetition(),
                    i.insufficient = r.insufficientMaterial(s.color),
                    i.fiftyMoveRule = r.in50MoveRule(),
                    i.draw = i.stalemate || i.threefold || i.insufficient || i.fiftyMoveRule || r.inDraw(),
                    s.skipValidation || (i.isValid = r.isPositionValid(s)),
                    n && (i.variantWin = r.isVariantWin(),
                    void 0 === i.variantWin && (i.variantWin = r.isBughouseWin())),
                    i.gameOver = i.checkmate || i.draw || Boolean(i.variantWin),
                    i)
                }
                ,
                jce.isFenValid = function isFenValid(e, a) {
                    return 0 === t.validateFen(e, a)
                }
                ,
                jce.encodeTCN = function encodeTCN(e) {
                    var t, a, s, n, o, r, i, l, c, h, p, m = "";
                    for (Array.isArray(e) || (e = [e]),
                    c = e.length,
                    l = 0; l < c; l += 1)
                        h = (null == (t = e[l]) ? void 0 : t.drop) ? 79 + d.indexOf(e[l].drop) : u.indexOf(null == (a = e[l]) ? void 0 : a.from[0]) + 8 * ((null == (s = e[l]) ? void 0 : s.from[1]) - 1),
                        p = u.indexOf(null == (n = e[l]) ? void 0 : n.to[0]) + 8 * ((null == (o = e[l]) ? void 0 : o.to[1]) - 1),
                        (null == (r = e[l]) ? void 0 : r.promotion) && (p = 3 * d.indexOf(null == (i = e[l]) ? void 0 : i.promotion) + 64 + (p < h ? 9 + p - h : p - h - 7)),
                        m += u[h] + u[p];
                    return m
                }
                ,
                jce.decodeTCN = decodeTCN,
                jce.uciToObj = uciToObj,
                jce.generatePgn = function generatePgn(e) {
                    var t;
                    return (e = e || {}).disableHashing = !0,
                    !!(t = createGame(e)) && t.pgn(e)
                }
                ,
                jce.pgnToFen = function pgnToFen(e, a) {
                    var s, n, o = [];
                    if (t.reset(),
                    !t.loadPgn(e))
                        return !1;
                    if (s = t.moveCount(),
                    "number" == typeof a) {
                        for (a < 0 && (a = s + a + 1),
                        n = s - 1; n >= a && n >= 0; n -= 1)
                            t.undo();
                        return t.fen()
                    }
                    for (n = 0; n <= s; n += 1)
                        o.unshift(t.fen()),
                        t.undo();
                    return o
                }
                ,
                jce.pgnToJson = function pgnToJson(e, a, s) {
                    var n, o = [], r = t;
                    return "number" != typeof a && (s = a,
                    a = void 0),
                    n = r.tokenizePgn(e, s),
                    a < 0 && (a = n.length + a),
                    !!n && (s && s.includeFen && (r = createGame({
                        analysis: !0
                    })),
                    n.forEach((function(e, t) {
                        var n, i;
                        t === a || void 0 === a ? r.loadPgn([e], 0, s) ? (i = normalizeHistory(r),
                        n = r.header(),
                        o.push({
                            headers: n,
                            moves: i.moves
                        })) : o.push(!1) : o.push(void 0)
                    }
                    )),
                    "number" == typeof a ? o[a] : o)
                }
                ,
                jce.sanToObj = function sanToObj(e, a, s) {
                    return t.reset(),
                    !!t.load(a, s) && normalizeMoveObj(t.move(e))
                }
                ,
                jce.completeFen = t.completeFen,
                jce.shortenFen = function shortenFen(e, a) {
                    return t.completeFen(e).split(" ").slice(0, a || 4).join(" ")
                }
                ,
                jce.createGame = createGame,
                jce.getPositionDetails = function getPositionDetails(e, t) {
                    var a, s, n, o;
                    if ((e = e || {}).disableHashing = !0,
                    !(a = createGame(e)))
                        return null;
                    if (t)
                        if (e.premove) {
                            if (!(n = makePremove(a, e.color, t)))
                                return null
                        } else {
                            if (!(n = a.move(t)))
                                return null;
                            a.extended || normalizeMoveObj(n)
                        }
                    return o = a.fen(),
                    e.premove && (e.check = !1,
                    e.kings = !1),
                    e.skipValidation || a.isPositionValid(e) ? (s = o.split(" "),
                    {
                        fen: o,
                        pieces: getPieces(a),
                        sideToMove: a.turn(),
                        castling: s[2],
                        epSquare: "-" === s[3] ? null : s[3],
                        halfMoves: +s[4],
                        moveNumber: +s[5],
                        move: n,
                        hand: a.hand(),
                        checks: a.checks()
                    }) : null
                }
                ,
                jce.predict = function predict(e, t) {
                    var a = Math.min(Math.max(.20773843 * Math.atan(2.49085889 * e / 100 - 2.47841945 * t / 100) + .02262979 * e / 100 - .02256839 * t / 100 + .52239679, 0), 1)
                      , s = Math.min(Math.max(-.20720905 * Math.atan(2.49626837 * e / 100 - 2.48220286 * t / 100) + -.02352551 * e / 100 + .02172627 * t / 100 + .49443923, 0), 1)
                      , n = Math.min(Math.max(Math.exp(.037043456 * e / 100 + .178106427 * t / 100 - 8.069742932) + .004823544 * Math.exp(-1.364136591 * Math.pow(e / 100 - t / 100, 2)) + -.001625539, 0), 1)
                      , o = a + s + n;
                    return {
                        w: a / o,
                        b: s / o,
                        d: n / o
                    }
                }
                ,
                jce.FLAGS = t.FLAGS,
                jce.loadECO = function loadECO(e, t) {
                    s.loadBook(e, (function onload(e, a) {
                        if (!a || !a.json)
                            return t(e || new Error("Invalid book"));
                        t(e, (function queryECO(e) {
                            var t, n, o, r, i, l, c, u, d;
                            if (e.hash)
                                n = "string" == typeof e.hash ? [s.hex64ToDec(e.hash)] : [e.hash],
                                r = 1;
                            else {
                                if (!(t = createGame(e)))
                                    return !1;
                                r = (n = t.hashes()).length
                            }
                            for (o = 0; o < r; ++o)
                                if (i = a.json[s.to64BitHex(n[o])]) {
                                    if (i.constructor === Array)
                                        if (l && -1 === i[0].m.indexOf(l.m)) {
                                            for (u = i.length - 1; u >= 0; --u)
                                                if (!u || -1 !== i[u].m.indexOf(l.m)) {
                                                    (d = i[u]).e = i[0].e,
                                                    d.s = i[0].s,
                                                    d.mate = i[0].mate,
                                                    d.v = i[0].v,
                                                    d.h = i[0].h,
                                                    d.n = d.n || i[0].n,
                                                    d.u = d.u || i[0].u,
                                                    d.c = d.c || i[0].c;
                                                    break
                                                }
                                        } else
                                            d = i[0];
                                    else
                                        d = i;
                                    (d.n || e.allowNameless) && (l = d)
                                } else
                                    e.mustEndInBook && (l = void 0);
                            if (l)
                                return c = {
                                    name: l.n
                                },
                                l.m && (c.moves = l.m),
                                void 0 !== l.d && (c.sdiff = l.d / 100),
                                l.c && (c.code = l.c,
                                c.url = l.u || l.n.replace(/[\u00e1-\u00e5]/g, "a").replace(/[\u0107\u010d]/g, "c").replace(/[\u00e9\u00e8\u0117\u0113]/g, "e").replace(/[\u00f3\u00f6\u00f8]/g, "o").replace(/[\u016f\u00fc]/g, "u").replace(/['+,]/g, "").replace(/[^a-z0-9.]+/gi, "-").replace(/(with-\d|St)\.+-?/, "$1-")),
                                l.e ? (c.eval = l.e,
                                c.depth = l.h,
                                c.score = l.e[0].cp / 100,
                                void 0 !== l.e[0].mate && (c.mate = l.e[0].mate)) : (c.score = l.s / 100,
                                void 0 !== l.mate && (c.mate = l.mate)),
                                l.v && (c.bad = !0),
                                c
                        }
                        ), a.json)
                    }
                    ))
                }
                ,
                jce
            }()), l = a(3527), c = a.n(l);
            var u = (0,
            r.F)("consolidate_jce") ? c() : i
        },
        93798: function(e, t, a) {
            "use strict";
            a.d(t, {
                l: function() {
                    return l
                }
            });
            var s = a(88520)
              , n = a(43037);
            var o = a(54810);
            var r = a(73863)
              , i = a(91353);
            const l = {
                createJce: e=>{
                    const t = Object.assign({}, e, {
                        analysis: !0
                    });
                    return s.Z.createGame(t) || null
                }
                ,
                updateIdsFromJce: e=>e && e.jce ? (e.tree.selected = e.jce.ids(),
                e) : null,
                getSelectedIds: e=>e.jce.ids(),
                getPositionInfo: e=>{
                    const t = s.Z.getPositionInfo({
                        game: e.jce
                    }, {
                        skipValidation: !0,
                        getLegalMoves: !0
                    });
                    return e.settings.premoves ? t.legalPremoves = l.getLegalPremoves(e) : t.legalPremoves = [],
                    t
                }
                ,
                getPositionDetails: e=>Object.assign(s.Z.getPositionDetails({
                    game: e.jce,
                    kings: !1,
                    skipValidation: !0
                }), {
                    hand: l.getHand(e)
                }),
                addExtraCastlingMoves: e=>{
                    e.setup.legalMoves.forEach((t=>{
                        16 !== t.flags && 32 !== t.flags || ("chess960" === e.variant ? l.addCastlingMoves960(e, t) : l.addCastlingMoves(e, t))
                    }
                    ))
                }
                ,
                addCastlingMoves: (e,t)=>{
                    const a = 1 === t.color ? 1 : 8;
                    (16 === t.flags ? [8] : [1, 2]).forEach((s=>{
                        e.setup.legalMoves.push({
                            color: t.color,
                            flags: t.flags,
                            piece: "k",
                            from: t.from,
                            san: 16 === t.flags ? "O-O" : "O-O-O",
                            to: r.c.getSanFromFileRank({
                                file: s,
                                rank: a
                            })
                        })
                    }
                    ))
                }
                ,
                addCastlingMoves960: (e,t)=>{
                    const a = r.c.getFileRankFromSan(t.from).rank;
                    let s = 1
                      , n = 0;
                    for (; n < 2; ) {
                        const o = r.c.getPieceAt(e, {
                            file: s,
                            rank: a
                        });
                        void 0 !== o && "r" === o.type && n++,
                        (1 === n && 32 === t.flags || 2 === n && 16 === t.flags) && e.setup.legalMoves.push({
                            color: t.color,
                            flags: t.flags,
                            piece: "k",
                            from: t.from,
                            san: 16 === t.flags ? "O-O" : "O-O-O",
                            to: r.c.getSanFromFileRank({
                                file: s,
                                rank: a
                            })
                        })
                    }
                    s++
                }
                ,
                getHeaders: e=>e.jce.header(),
                getFen: e=>e.jce.fen(),
                getPgn: (e,t)=>e.jce.pgn(t),
                getPremoves: e=>(0,
                i.FR)("consolidate_jce") ? e.jce.premove.queue.map((t=>({
                    move: t,
                    pieces: e.jce.premove.getPieces()
                }))) : e.jce.premoves,
                getHand: e=>e.jce.hand(),
                getChecks: e=>e.jce.checks(),
                getLegalPremoves: e=>(0,
                i.FR)("consolidate_jce") ? e.jce.premove.moves() : s.Z.getPremoves(e.jce.premoves && e.jce.premoves.length > 0 ? e.jce.premoves[e.jce.premoves.length - 1].fen : e.jce.fen(), e.setup.playingAs, e.variant),
                load: (e,t)=>(e.jce.load(t) && l.updateIdsFromJce(e),
                e),
                loadPgn: (e,t)=>(e.jce.loadPgn(t) && l.updateIdsFromJce(e),
                e),
                loadPgnSoft(e, t) {
                    if (!e.jce.loadPgn(t)) {
                        const e = s.Z.createGame({
                            variant: "detect",
                            pgn: t
                        });
                        e && (t = e.pgn())
                    }
                    return e.jce.loadPgn(t) || l.updateIdsFromJce(e),
                    e
                },
                createVariation: e=>(e.jce.createVariation() && (e.jce.reorderLines(),
                l.updateIdsFromJce(e)),
                e),
                getJCEMove: (e,t)=>{
                    let a = t;
                    return l.isValidMoveObject(t) ? (a.san ? a = s.Z.sanToObj(a.san, l.getFen(e), e.variant) : a.tcn && (a = s.Z.decodeTCN(a.tcn)[0]),
                    a) : null
                }
                ,
                move: (e,t,a=!0)=>{
                    if (!t)
                        return null;
                    let s = !1;
                    if (!1 === a) {
                        const a = t.from ? e.jce.get(t.from) : null
                          , n = t.to ? e.jce.get(t.to) : null;
                        if (a && n && "k" === n.type)
                            return null;
                        e.jce.remove(t.to),
                        e.jce.remove(t.from);
                        const o = t.drop || t.put;
                        s = e.jce.put(a || {
                            type: o.toLowerCase(),
                            color: o && o.toUpperCase() === o ? 1 : 2
                        }, t.to),
                        t.from && a && null === t.to && (s = !0)
                    } else
                        t.drop && (t.drop = t.drop.toLowerCase()),
                        s = e.jce.move(t);
                    return s && l.updateIdsFromJce(e),
                    s
                }
                ,
                selectLine: (e,t)=>{
                    const a = n.x.getLine(e.tree.lines, t);
                    return a && (e.jce.selectLine(t),
                    e.tree.selected = {
                        line: t,
                        move: a.length - 1
                    }),
                    e
                }
                ,
                selectNode: (e,t={
                    line: 0,
                    move: 0
                })=>(e.jce.selectPosition(t.move, t.line),
                e),
                updateHeaders: (e,t)=>e.jce.header(t),
                clear: e=>e.jce.clear(e.variant),
                isFileRankEqual: (e,t)=>e.file && t.file && e.rank && t.rank && e.file === t.file && e.rank === t.rank,
                isValidMoveObject: e=>"string" == typeof e.from && "string" == typeof e.to || "string" == typeof e.san || "string" == typeof e.tcn || !e.from && "string" == typeof e.to && "string" == typeof e.drop || null === e.to && "string" == typeof e.from || !e.from && "string" == typeof e.to && "string" == typeof e.put,
                movesMatch: (e,t)=>!(e.from !== t.from || e.to !== t.to || e.promotion && e.promotion !== t.promotion || e.drop && e.drop !== t.drop),
                getMoveNumber: (e,t)=>1 === e ? Math.ceil(t / 2 + 1) : Math.floor(t / 2 + 1),
                isUserTurn: e=>e.setup.playingAs === e.setup.sideToMove,
                getFens: e=>{
                    const t = [e.setup.fen];
                    return (e.tree.lines || a(93189).Z.state.lines)[0].forEach((e=>{
                        t.push(e.fen)
                    }
                    )),
                    t
                }
                ,
                getLastTcn: e=>{
                    const t = o.j.getTcn(e);
                    return t.substr(t.length - 2)
                }
                ,
                getSanMoves: (e,t)=>{
                    const s = [];
                    return (e.tree.lines || a(93189).Z.state.lines)[0].some(((e,a)=>"number" == typeof t && a >= t || (s.push(e.san),
                    !1))),
                    s
                }
            }
        },
        54810: function(e, t, a) {
            "use strict";
            a.d(t, {
                j: function() {
                    return oe
                }
            });
            var s = a(73863)
              , n = Object.defineProperty
              , o = Object.getOwnPropertySymbols
              , r = Object.prototype.hasOwnProperty
              , i = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? n(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            var l = a(93798)
              , c = a(43037);
            const u = "INIT"
              , d = "LOAD"
              , h = "MAKE_MOVE"
              , p = "ILLEGAL_MOVE"
              , m = "JUMP_TO_POSITION"
              , b = "TREE_CHANGE"
              , g = "TREE_AMENDED"
              , f = "SETTINGS_CHANGE"
              , v = "PGN_HEADERS_UPDATED"
              , w = "CANCEL_PREMOVES"
              , y = "UPDATE_NODE"
              , k = {
                MAX_HISTORY_LIMIT: 200,
                getInitialHistory: ()=>[],
                add(e, t, a={}) {
                    if (e.length > k.MAX_HISTORY_LIMIT - 1) {
                        const t = e.findIndex((e=>null !== e));
                        e[t] = null
                    }
                    e.push({
                        type: t,
                        payload: a
                    })
                },
                getLastItem: e=>e[e.length - 1]
            };
            var _ = Object.defineProperty
              , C = Object.getOwnPropertySymbols
              , T = Object.prototype.hasOwnProperty
              , S = Object.prototype.propertyIsEnumerable
              , state_defNormalProp = (e,t,a)=>t in e ? _(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , state_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    T.call(t, a) && state_defNormalProp(e, a, t[a]);
                if (C)
                    for (var a of C(t))
                        S.call(t, a) && state_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            let x = {};
            const E = {
                q: 9,
                r: 5,
                b: 3,
                n: 3,
                p: 1,
                k: 0
            }
              , O = {
                getInitialSettings: ()=>({
                    variations: !1,
                    analysis: !1,
                    mainLineIsImmutable: !1,
                    rules: !0,
                    premoves: !1,
                    GTM: !1
                }),
                getInitialSetup: ()=>({
                    ranks: 8,
                    files: 8
                }),
                getInitialTree: ()=>({
                    initialMarkings: {
                        arrows: [],
                        effects: [],
                        squares: []
                    }
                }),
                getInitialMarkings: ()=>({
                    arrows: [],
                    blinkingSquares: [],
                    effects: [],
                    squares: []
                }),
                clearState: e=>(e.setup = O.getInitialSetup(),
                e),
                updateState: e=>{
                    e.setup = Object.assign({}, e.setup, l.l.getPositionInfo(e), l.l.getPositionDetails(e)),
                    l.l.addExtraCastlingMoves(e),
                    e.tree.lines = c.x.getLinesFromJce(e),
                    e.tree.selected = e.jce.ids(),
                    e.tree.selectedNode = c.x.getSelectedNode(e),
                    e.setup.capturedPieces = O.getCapturedPieces(e.setup),
                    e.setup.capturedScores = O.getCapturedScores(e.setup),
                    e.setup.result = O.getResult(e),
                    e.premoves = l.l.getPremoves(e),
                    e.variant = l.l.getHeaders(e).Variant || e.variant,
                    e.startingMoveNumber = e.setup.moveNumber;
                    const t = c.x.getNode(e.tree.lines, l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                    return t && (e.markings.squares = t.squares ? t.squares.map((e=>state_spreadValues({}, e))) : [],
                    e.markings.arrows = t.arrows ? t.arrows.map((e=>state_spreadValues({}, e))) : [],
                    e.setup.effects ? e.markings.effects = e.setup.effects : t.effects ? e.markings.effects = t.effects.map((e=>state_spreadValues({}, e))) : e.markings.effects = []),
                    x[e.id] = !0,
                    e.sibling && !x[e.sibling.id] && (e.sibling = O.updateState(e.sibling)),
                    x = {},
                    e
                }
                ,
                getCapturedPieces: e=>e.pieces.reduce(((e,t)=>{
                    if ("k" === t.type)
                        return e;
                    const a = t.promoted ? "p" : t.type;
                    return e[t.color - 1][a] -= 1,
                    e
                }
                ), [{
                    p: 8,
                    n: 2,
                    b: 2,
                    r: 2,
                    q: 1
                }, {
                    p: 8,
                    n: 2,
                    b: 2,
                    r: 2,
                    q: 1
                }]),
                getCapturedScores: e=>e.pieces.reduce(((e,t)=>(e[t.color - 1] += E[t.type],
                e)), [0, 0]),
                getResult: e=>{
                    const t = l.l.getHeaders(e).Result;
                    return "*" !== t ? t : e.setup.insufficient || e.setup.stalemate ? "1/2-1/2" : e.setup.gameOver && !e.setup.draw ? 1 === e.setup.sideToMove ? "0-1" : "1-0" : "*"
                }
            };
            var A = Object.defineProperty
              , M = Object.getOwnPropertySymbols
              , P = Object.prototype.hasOwnProperty
              , j = Object.prototype.propertyIsEnumerable
              , select_node_defNormalProp = (e,t,a)=>t in e ? A(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const select_node_selectNode = (e,t={},a=0,s=!0)=>{
                const n = c.x.findNode(e.jce._lines(), t, a, s)
                  , {line: o, move: r} = ((e,t)=>{
                    for (var a in t || (t = {}))
                        P.call(t, a) && select_node_defNormalProp(e, a, t[a]);
                    if (M)
                        for (var a of M(t))
                            j.call(t, a) && select_node_defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, e.tree.selected);
                if (!n)
                    return e;
                let i = {};
                return i = t.move + a < 0 && t.line === n.ids.line ? {
                    line: 0,
                    move: -1
                } : n.ids,
                l.l.selectNode(e, i),
                k.add(e.history, m, {
                    from: {
                        line: o,
                        move: r
                    },
                    to: i
                }),
                O.updateState(e)
            }
            ;
            var z = a(88520)
              , W = Object.defineProperty
              , L = Object.getOwnPropertySymbols
              , I = Object.prototype.hasOwnProperty
              , R = Object.prototype.propertyIsEnumerable
              , create_variation_defNormalProp = (e,t,a)=>t in e ? W(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const createVariation = (e,t,a={})=>{
                const s = ((e,t)=>{
                    for (var a in t || (t = {}))
                        I.call(t, a) && create_variation_defNormalProp(e, a, t[a]);
                    if (L)
                        for (var a of L(t))
                            R.call(t, a) && create_variation_defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, e.tree.selected);
                if (!e.settings.variations)
                    return null;
                void 0 !== a.line && void 0 !== a.move ? l.l.selectNode(e, a) : a = e.tree.selected;
                const n = c.x.getNode(e.jce._lines(), {
                    line: a.line,
                    move: a.move
                }).san;
                return l.l.createVariation(e),
                t && l.l.move(e, n),
                k.add(e.history, m, {
                    from: s,
                    to: a
                }),
                O.updateState(e)
            }
              , shouldNotMutateLine = e=>-1 !== e.tree.selected.move && e.settings.mainLineIsImmutable && c.x.isMainLine(e.tree.selected.line)
              , isValidMove = (e,t)=>null !== z.Z.getPositionDetails({
                fen: l.l.getFen(e),
                variant: l.l.getHeaders(e).Variant || "Chess"
            }, t)
              , makeMove = (e,t,a=!1)=>{
                const s = l.l.getJCEMove(e, t);
                if (null === s)
                    return k.add(e.history, p),
                    e;
                const n = e.settings.analysis || a;
                if (!c.x.isHead(e.jce._lines(), e.tree.selected)) {
                    if (!n)
                        return select_node_selectNode(e, c.x.getHeadIds(e.jce._lines(), e.tree.selected.line));
                    const t = c.x.getNextMatchingNode(e.jce._lines(), e.tree.selected, s);
                    if (t)
                        return select_node_selectNode(e, t.ids);
                    if (isValidMove(e, s)) {
                        if (k.add(e.history, g),
                        e.settings.variations)
                            return l.l.selectNode(e, {
                                line: e.tree.selected.line,
                                move: e.tree.selected.move + 1
                            }),
                            l.l.createVariation(e),
                            O.updateState(e),
                            makeMove(e, s);
                        if (!e.settings.mainLineIsImmutable)
                            return c.x.prune(e.jce._lines(), e.tree.selected),
                            makeMove(e, s)
                    }
                    return k.add(e.history, p),
                    e
                }
                if (!n && !l.l.isUserTurn(e))
                    return k.add(e.history, p),
                    e;
                if (n && e.settings.variations && shouldNotMutateLine(e) && isValidMove(e, s)) {
                    const t = c.x.getNextMatchingNode(e.jce._lines(), e.tree.selected, s);
                    return t ? select_node_selectNode(e, t.ids) : (createVariation(e, !0),
                    O.updateState(e),
                    makeMove(e, s))
                }
                return !shouldNotMutateLine(e) && l.l.move(e, s, e.settings.rules) ? (k.add(e.history, h, s),
                O.updateState(e)) : (k.add(e.history, p),
                e)
            }
              , setPlayingAs = (e,t)=>([1, 2].indexOf(t) >= 0 && (e.setup.playingAs = t),
            e);
            var N = a(91353);
            const B = {
                premove: (e,t)=>{
                    let a = !1;
                    return e.settings.premoves && !e.settings.analysis && ((0,
                    N.FR)("consolidate_jce") ? e.jce.premove.queue.length : e.jce.premoves.length) < 8 && (a = (0,
                    N.FR)("consolidate_jce") ? e.jce.premove.move(t) : e.jce.premove(t, e.setup.playingAs)),
                    a
                }
                ,
                cancelPremoves: e=>(0,
                N.FR)("consolidate_jce") ? !!e.jce.premove.queue.length && (e.jce.premove.cancel(),
                !0) : !!e.jce.premoves.length && (e.jce.premoves.length = 0,
                !0),
                consumePremove: e=>{
                    if ((0,
                    N.FR)("consolidate_jce"))
                        return e.jce.premove.consume(),
                        !0;
                    if (e.jce.premoves.length) {
                        const t = e.jce.premoves.shift();
                        if (l.l.move(e, t.move)) {
                            const t = e.jce.premoves.map((e=>e));
                            e.jce.premoves.length = 0;
                            for (let a = 0; a < t.length; a += 1) {
                                const s = t[a];
                                if (delete s.move.san,
                                !B.premove(e, s.move))
                                    break
                            }
                            return !0
                        }
                    }
                    return !1
                }
            }
              , changeSettings = (e,t)=>{
                const a = Object.prototype.hasOwnProperty.call(t, "premoves") && e.settings.premoves !== t.premoves;
                return e.settings = Object.assign(e.settings, t),
                e.settings.premoves || (e=>{
                    B.cancelPremoves(e) && (k.add(e.history, w),
                    O.updateState(e))
                }
                )(e),
                k.add(e.history, f),
                a && O.updateState(e),
                e
            }
              , loadFromFen = (e,t)=>t ? (c.x.clearAllMarkings(e.jce._lines()),
            l.l.load(e, t),
            k.add(e.history, d),
            O.updateState(e)) : null
              , clearMarkings = (e,t,a=!0)=>{
                const s = c.x.getNode(e.jce._lines(), t) || c.x.getNode(e.jce._lines(), l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                return (s.arrows && s.arrows.length || s.squares && s.squares.length || s.effects && s.effects.length) && (s.arrows = [],
                s.squares = [],
                s.effects = [],
                a && (O.updateState(e),
                k.add(e.history, b))),
                e
            }
              , convertFileToInteger = (e="")=>e.charCodeAt(0) - 97 + 1
              , createGame = (e={})=>{
                const t = {
                    id: s.c.getId(),
                    variant: e.variant || "chess",
                    settings: Object.assign(O.getInitialSettings(), e.settings),
                    setup: Object.assign(O.getInitialSetup(), e.setup),
                    tree: Object.assign(O.getInitialTree(), e.tree),
                    history: k.getInitialHistory(),
                    markings: Object.assign(O.getInitialMarkings(), e.markings),
                    premoves: []
                };
                return setPlayingAs(t, e.player || 1),
                Object.defineProperty(t, "jce", {
                    writable: !1,
                    enumerable: !1,
                    configurable: !1,
                    value: l.l.createJce(e)
                }),
                l.l.updateIdsFromJce(t),
                k.add(t.history, u),
                t.jce.siblingGame && !t.sibling && (t.sibling = {
                    id: s.c.getId(),
                    variant: t.variant || "chess",
                    sibling: t,
                    settings: t.settings,
                    setup: O.getInitialSetup(),
                    tree: O.getInitialTree(),
                    history: k.getInitialHistory(),
                    markings: Object.assign(O.getInitialMarkings(), e.markings),
                    premoves: []
                },
                Object.defineProperty(t.sibling, "jce", {
                    writable: !1,
                    enumerable: !1,
                    configurable: !1,
                    value: l.l.createJce({
                        game: t.jce.siblingGame
                    })
                }),
                l.l.updateIdsFromJce(t.sibling)),
                O.updateState(t),
                t
            }
            ;
            var F = a(43635)
              , D = Object.defineProperty
              , $ = Object.getOwnPropertySymbols
              , q = Object.prototype.hasOwnProperty
              , U = Object.prototype.propertyIsEnumerable
              , select_line_start_defNormalProp = (e,t,a)=>t in e ? D(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const selectLineStart = e=>{
                let t = c.x.getSelectedLine(e)
                  , a = 0;
                const s = ((e,t)=>{
                    for (var a in t || (t = {}))
                        q.call(t, a) && select_line_start_defNormalProp(e, a, t[a]);
                    if ($)
                        for (var a of $(t))
                            U.call(t, a) && select_line_start_defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, e.tree.selected);
                0 === e.tree.selected.move && void 0 !== t.parentId ? (l.l.selectLine(e, t.parentId),
                t = c.x.getSelectedLine(e)) : c.x.isMainLine(t.id) && (a = -1);
                const n = {
                    line: t.id,
                    move: a
                };
                return l.l.selectNode(e, n),
                k.add(e.history, m, {
                    from: s,
                    to: n
                }),
                O.updateState(e)
            }
              , deleteNode = (e,t={})=>{
                const a = Object.assign(e.tree.selected, t);
                return a.line > 0 && (a.move <= 0 || c.x.isFirstVisibleNode(e.jce._lines(), a)) && (a.move = -1),
                e.jce.deletePosition(a.move, a.line),
                k.add(e.history, b),
                O.updateState(e),
                e
            }
              , deleteRemainingNodes = (e,t={})=>{
                const a = Object.assign(e.tree.selected, t);
                return deleteNode(e, {
                    move: a.move + 1,
                    line: a.line
                })
            }
              , getTcn = (e,t)=>{
                const s = e.jce && e.jce._lines() || a(93189).Z.state.lines;
                return z.Z.encodeTCN(c.x.getLine(s, t) || s[0])
            }
            ;
            var Z = a(26211);
            const G = {
                p: 1,
                n: 32,
                b: 256,
                r: 2048,
                q: 16384
            }
              , setHand = (e,t,a)=>(e.jce._hand[t] = a.split("").reduce(((e,t)=>e + G[t]), 0),
            e.setup.hand = e.jce.hand(),
            e)
              , loadFromTcn = (e,t,a=s.c.getInitialFen(),n)=>{
                loadFromFen(e, a);
                const o = z.Z.decodeTCN(t);
                return o ? (o.forEach((t=>{
                    "Crazyhouse" !== e.variant && "Bughouse" !== e.variant || !t.drop || setHand(e, e.setup.sideToMove, t.drop),
                    makeMove(e, t, !0)
                }
                )),
                O.updateState(e),
                n ? select_node_selectNode(e, e.tree.selected, -1) : (k.add(e.history, d),
                e)) : null
            }
              , markArrow = (e,t,a,s=!0)=>{
                const n = c.x.getNode(e.jce._lines(), a) || c.x.getNode(e.jce._lines(), l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                return n.arrows || (n.arrows = []),
                n.arrows.find((e=>l.l.isFileRankEqual(e.fromFileRank, t.fromFileRank) && l.l.isFileRankEqual(e.toFileRank, t.toFileRank))) || (n.arrows.push(t),
                s && (O.updateState(e),
                k.add(e.history, b))),
                e
            }
              , markEffect = ({game: e, effect: t, ids: a, persist: s, updateState: n=!0})=>{
                if (s)
                    return e.setup.effects = t ? [t] : null,
                    O.updateState(e),
                    e;
                const o = c.x.getNode(e.jce._lines(), a) || c.x.getNode(e.jce._lines(), l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                return o.effects || (o.effects = []),
                o.effects.find((e=>l.l.isFileRankEqual(e.square, t.square))) || (o.effects.push(t),
                n && (O.updateState(e),
                k.add(e.history, b))),
                e
            }
              , markSquare = (e,t,a,s=!0)=>{
                const n = c.x.getNode(e.jce._lines(), a) || c.x.getNode(e.jce._lines(), l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                return n.squares || (n.squares = []),
                n.squares.find((e=>l.l.isFileRankEqual(e, t))) || (n.squares.push(t),
                s && (O.updateState(e),
                k.add(e.history, b))),
                e
            }
              , fixTcn = (e,t)=>{
                const a = createGame({
                    variant: e.variant,
                    fen: s.c.getFirstFen(e)
                });
                return loadFromTcn(a, t, a.setup.fen),
                getTcn(a)
            }
            ;
            var H = Object.defineProperty
              , V = Object.getOwnPropertySymbols
              , K = Object.prototype.hasOwnProperty
              , Y = Object.prototype.propertyIsEnumerable
              , merge_tcn_defNormalProp = (e,t,a)=>t in e ? H(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const mergeTcn = (e,t,a)=>{
                if ("string" != typeof t || e.settings.mainLineIsImmutable)
                    return null;
                if ("" === t)
                    return selectLineStart(e),
                    loadFromTcn(e, "", e.setup.fen);
                const s = ((e,t)=>{
                    for (var a in t || (t = {}))
                        K.call(t, a) && merge_tcn_defNormalProp(e, a, t[a]);
                    if (V)
                        for (var a of V(t))
                            Y.call(t, a) && merge_tcn_defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, e.tree.selected);
                let n = getTcn(e)
                  , o = t;
                const r = e.history.length - 1;
                if (!(n.includes(o) || o.includes(n) || (n = fixTcn(e, n),
                o = fixTcn(e, o),
                n.includes(o) || o.includes(n))))
                    return loadFromTcn(e, o);
                if (o.length < n.length)
                    select_node_selectNode(e, {
                        line: 0,
                        move: o.length / 2 - 1
                    }),
                    deleteRemainingNodes(e);
                else {
                    if (!(o.length > n.length))
                        return e;
                    {
                        let t;
                        if (select_node_selectNode(e, {
                            line: 0,
                            move: n.length / 2 - 1
                        }),
                        o.slice(n.length).match(/.{2}/g).forEach((a=>{
                            t = z.Z.decodeTCN(a)[0],
                            "Crazyhouse" !== e.variant && "Bughouse" !== e.variant || !t.drop || setHand(e, e.setup.sideToMove, t.drop),
                            makeMove(e, t, !0)
                        }
                        )),
                        e.history.slice(r + 1).some((e=>e && e.type === p)))
                            return select_node_selectNode(e, s),
                            deleteRemainingNodes(e),
                            e.history = e.history.slice(0, r),
                            mergeTcn(e, fixTcn(e, o))
                    }
                }
                if (a)
                    return select_node_selectNode(e, e.tree.selected, -1);
                if (s.line !== e.tree.selected.line || s.move !== e.tree.selected.move) {
                    const t = c.x.getNode(e.jce._lines(), s) ? s : e.tree.selected;
                    return select_node_selectNode(e, t)
                }
                return e
            }
            ;
            var Q = Object.defineProperty
              , J = Object.getOwnPropertySymbols
              , X = Object.prototype.hasOwnProperty
              , ee = Object.prototype.propertyIsEnumerable
              , select_line_end_defNormalProp = (e,t,a)=>t in e ? Q(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const selectLineEnd = (e,t=e.tree.selected.line)=>{
                const a = c.x.getLine(e.jce._lines(), t).length - 1
                  , s = ((e,t)=>{
                    for (var a in t || (t = {}))
                        X.call(t, a) && select_line_end_defNormalProp(e, a, t[a]);
                    if (J)
                        for (var a of J(t))
                            ee.call(t, a) && select_line_end_defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, e.tree.selected);
                if (e.tree.selected.move !== a || t !== e.tree.selected.line) {
                    const n = {
                        line: t,
                        move: a
                    };
                    return l.l.selectNode(e, n),
                    k.add(e.history, m, {
                        from: s,
                        to: n
                    }),
                    O.updateState(e)
                }
                return e
            }
            ;
            var te = Object.defineProperty
              , ae = Object.getOwnPropertySymbols
              , se = Object.prototype.hasOwnProperty
              , ne = Object.prototype.propertyIsEnumerable
              , reset_to_main_line_defNormalProp = (e,t,a)=>t in e ? te(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const oe = {
                addBlinkingSquare: (e,t,a,n)=>{
                    const l = s.c.getId()
                      , c = ((e,t)=>{
                        for (var a in t || (t = {}))
                            r.call(t, a) && __defNormalProp(e, a, t[a]);
                        if (o)
                            for (var a of o(t))
                                i.call(t, a) && __defNormalProp(e, a, t[a]);
                        return e
                    }
                    )({
                        id: l,
                        interval: t,
                        times: a
                    }, n);
                    return e.markings.blinkingSquares.push(c),
                    setTimeout((()=>{
                        const t = e.markings.blinkingSquares.findIndex((e=>e.id === l));
                        e.markings.blinkingSquares.splice(t, 1)
                    }
                    ), 0),
                    e
                }
                ,
                addVariant: (e,t)=>{
                    if (!t)
                        return e;
                    select_node_selectNode(e, {
                        line: 0,
                        move: 0
                    });
                    return t.match(/.{2}/g).forEach((t=>makeMove(e, {
                        tcn: t
                    }, !0))),
                    e
                }
                ,
                canMoveBackward: (e,t=1)=>{
                    if (0 === e.tree.selected.line && e.tree.selected.move - t < -1)
                        return !1;
                    const s = e.tree.lines || a(93189).Z.state.lines;
                    return null !== c.x.findNode(s, e.tree.selected, -1 * t, !1)
                }
                ,
                canMoveForward: (e,t=1)=>{
                    const s = e.tree.lines || a(93189).Z.state.lines;
                    return null !== c.x.findNode(s, e.tree.selected, t, !1)
                }
                ,
                changeSettings: changeSettings,
                clearAnalysis: e=>{
                    const t = oe.resetToMainLine(e)
                      , a = c.x.clearAnalysis(t.jce._lines());
                    return t.jce.saveLines(a),
                    k.add(t.history, b),
                    O.updateState(e)
                }
                ,
                clearArrow: (e,t,a)=>{
                    const s = c.x.getNode(e.jce._lines(), a) || c.x.getNode(e.jce._lines(), l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                    s.arrows || (s.arrows = []);
                    const n = s.arrows.findIndex((e=>l.l.isFileRankEqual(e.fromFileRank, t.fromFileRank) && l.l.isFileRankEqual(e.toFileRank, t.toFileRank)));
                    return -1 !== n && (s.arrows.splice(n, 1),
                    O.updateState(e),
                    k.add(e.history, b)),
                    e
                }
                ,
                clearBlinkingSquare: (e,t)=>(e.markings.blinkingSquares[t] && delete e.markings.blinkingSquares[t],
                e),
                clearBoard: e=>(changeSettings(e, {
                    rules: !1
                }),
                loadFromFen(e, "8/8/8/8/8/8/8/8 w - - 0 1"),
                k.add(e.history, d),
                O.updateState(e)),
                clearEffect: (e,t,a)=>{
                    const s = c.x.getNode(e.jce._lines(), a) || c.x.getNode(e.jce._lines(), l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                    s.effects || (s.effects = []);
                    const n = s.effects.findIndex((e=>l.l.isFileRankEqual(e.square, t.square)));
                    return -1 !== n && (s.effects.splice(n, 1),
                    O.updateState(e),
                    k.add(e.history, b)),
                    e
                }
                ,
                clearMarkedSquare: (e,t,a)=>{
                    const s = c.x.getNode(e.jce._lines(), a) || c.x.getNode(e.jce._lines(), l.l.getSelectedIds(e)) || e.tree.initialMarkings;
                    s.squares || (s.squares = []);
                    const n = s.squares.findIndex((e=>l.l.isFileRankEqual(e, t)));
                    return -1 !== n && (s.squares.splice(n, 1),
                    O.updateState(e),
                    k.add(e.history, b)),
                    e
                }
                ,
                clearMarkings: clearMarkings,
                clearNodes: (e,t={})=>{
                    const a = e.jce._lines();
                    if (!a)
                        return e;
                    if (void 0 === t.line && void 0 === t.move)
                        return a.forEach((e=>{
                            e.forEach(((e,t)=>c.x.clearNode(a, {
                                line: e.ids.line,
                                move: t
                            })))
                        }
                        )),
                        k.add(e.history, b),
                        e;
                    if (void 0 === t.move) {
                        const s = c.x.getLine(e.jce._lines(), t.line);
                        return s ? (s.forEach(((e,t)=>c.x.clearNode(a, {
                            line: s.id,
                            move: t
                        }))),
                        k.add(e.history, b),
                        e) : e
                    }
                    return c.x.getNode(a, t) ? (c.x.clearNode(a, t),
                    k.add(e.history, b),
                    e) : e
                }
                ,
                convertLanToFileRanks: (e=[])=>({
                    fromFileRank: {
                        file: convertFileToInteger(e[0]),
                        rank: Number(e[1])
                    },
                    toFileRank: {
                        file: convertFileToInteger(e[2]),
                        rank: Number(e[3])
                    }
                }),
                createGame: createGame,
                createVariation: createVariation,
                deleteLine: (e,t)=>e.jce.deletePosition(-1, t) ? (k.add(e.history, b),
                O.updateState(e),
                e) : null,
                deleteNode: deleteNode,
                deleteRemainingNodes: deleteRemainingNodes,
                getCurrentFullLine: e=>{
                    const t = e.jce._history().length - e.jce.ids().move - 1
                      , a = e.jce.history(!0);
                    return 0 === t ? a : a.slice(0, -t)
                }
                ,
                getPgn: (e,t)=>l.l.getPgn(e, t),
                getPgnHeaders: e=>l.l.getHeaders(e),
                getSelectedNode: e=>c.x.getSelectedNode(e),
                getTcn: getTcn,
                isMoveLegal: (e,t)=>{
                    let a = !1;
                    if (!e.settings.rules)
                        return !0;
                    for (let s = 0; s < e.setup.legalMoves.length; s++) {
                        const n = e.setup.legalMoves[s];
                        if (n.from === t.from && n.to === t.to) {
                            a = !0;
                            break
                        }
                    }
                    return a
                }
                ,
                loadFromFen: loadFromFen,
                loadFromLan: (e,t,a,s)=>{
                    const n = t.map((e=>z.Z.encodeTCN({
                        from: e.slice(0, 2),
                        to: e.slice(2, 4),
                        promotion: e.slice(4, 5) || void 0
                    }))).join("");
                    return oe.loadFromTcn(e, n, a, s)
                }
                ,
                loadFromPgn: (e,t,a,s=!1)=>{
                    if (!t)
                        return e;
                    const n = (e=>(Object.keys(Z.v).forEach((function(t) {
                        e = e.replace(new RegExp(`\\${t}\\b`,"gm"), (0,
                        F.TW)(t))
                    }
                    )),
                    e))(t);
                    return s && !e.jce.loadPgn(n) ? l.l.loadPgnSoft(e, n) : l.l.loadPgn(e, n),
                    O.updateState(e),
                    a ? select_node_selectNode(e, e.tree.selected, a) : (k.add(e.history, d),
                    e)
                }
                ,
                loadFromSanMoves: (e,t,a,s)=>t && t.length ? (a && l.l.load(e, a),
                t.forEach((t=>makeMove(e, {
                    san: t
                }, !0))),
                O.updateState(e),
                s ? select_node_selectNode(e, e.tree.selected, -1) : (k.add(e.history, d),
                e)) : null,
                loadFromTcn: loadFromTcn,
                makeMove: makeMove,
                makeOpponentMove: (e,t)=>(setPlayingAs(e, 3 - e.setup.playingAs),
                makeMove(e, t),
                setPlayingAs(e, 3 - e.setup.playingAs),
                O.updateState(e)),
                markArrow: markArrow,
                markEffect: markEffect,
                markSquare: markSquare,
                mergeTcn: mergeTcn,
                moveBackward: (e,t=1)=>select_node_selectNode(e, e.tree.selected, -1 * t, !1),
                moveForward: (e,t=1)=>select_node_selectNode(e, e.tree.selected, t, !1),
                moveToEnd: e=>(c.x.isMainLine(e.tree.selected.line) || l.l.selectLine(e, 0),
                selectLineEnd(e),
                O.updateState(e)),
                moveToStart: e=>(c.x.isMainLine(e.tree.selected.line) || l.l.selectLine(e, 0),
                selectLineStart(e),
                O.updateState(e)),
                moveVariation: (e,t,a=!0)=>{
                    const s = c.x.getLine(e.jce._lines(), t);
                    if (s && void 0 !== s.parentId) {
                        const n = c.x.getLine(e.jce._lines(), s.parentId)[s.atMoveNode];
                        let o = -1;
                        if (n.lines.forEach(((e,a)=>{
                            t === e && (o = a)
                        }
                        )),
                        o > -1) {
                            let e = null;
                            a && o > 0 ? (e = n.lines[o - 1],
                            n.lines[o - 1] = t,
                            n.lines[o] = e) : !a && o < n.lines.length - 1 && (e = n.lines[o + 1],
                            n.lines[o + 1] = t,
                            n.lines[o] = e)
                        }
                        k.add(e.history, b)
                    }
                    return e
                }
                ,
                promoteVariation: (e,t)=>{
                    let a = t;
                    void 0 === a && (a = e.tree.selected);
                    let s = c.x.getLine(e.jce._lines(), a.line);
                    if (s && void 0 !== s.parentId) {
                        let t = a.move;
                        for (; !(void 0 === s.parentId || e.settings.mainLineIsImmutable && c.x.isMainLine(s.parentId)); ) {
                            const a = c.x.getLine(e.jce._lines(), s.parentId)
                              , n = c.x.isContinuation(e.jce._lines(), s.id) ? 1 : 0
                              , o = s[n] && s[n].commentBefore
                              , r = s.atMoveNode
                              , i = s.slice(0);
                            s.length = 0,
                            o && a[r - 1] && (a[r - 1].comment ? (" " !== a[r - 1].comment.substr(-1) && (a[r - 1].comment += " "),
                            a[r - 1].comment += o) : a[r - 1].comment = o,
                            delete i[n].commentBefore,
                            delete s.initComment);
                            const u = a.slice(r)
                              , d = u[0].lines.map((e=>e));
                            delete u[0].lines,
                            u.forEach(((t,a)=>{
                                t.lines && t.lines.length && t.lines.forEach((t=>{
                                    const n = c.x.getLine(e.jce._lines(), t);
                                    n.parentId = s.id,
                                    n.atMoveNode = a
                                }
                                ))
                            }
                            )),
                            a.length = r,
                            i.forEach((t=>{
                                t.ids = {
                                    line: a.id,
                                    move: a.length
                                },
                                t.lines && t.lines.length && t.lines.forEach((t=>{
                                    const s = c.x.getLine(e.jce._lines(), t);
                                    s.parentId = a.id,
                                    s.atMoveNode = a.length
                                }
                                )),
                                a.push(t)
                            }
                            )),
                            u.forEach(((e,t)=>{
                                e.ids = {
                                    line: s.id,
                                    move: t
                                },
                                s.push(e)
                            }
                            )),
                            a[r].lines = d,
                            a[r].lines.forEach((t=>{
                                c.x.getLine(e.jce._lines(), t).parentId = a.id
                            }
                            )),
                            l.l.selectNode(e, {
                                line: a.id,
                                move: r + t
                            }),
                            s = c.x.getLine(e.jce._lines(), s.parentId),
                            t = r + t
                        }
                    }
                    return e.jce.saveLines(e.tree.lines),
                    k.add(e.history, b),
                    O.updateState(e)
                }
                ,
                resetToMainLine: e=>{
                    const t = ((e,t)=>{
                        for (var a in t || (t = {}))
                            se.call(t, a) && reset_to_main_line_defNormalProp(e, a, t[a]);
                        if (ae)
                            for (var a of ae(t))
                                ne.call(t, a) && reset_to_main_line_defNormalProp(e, a, t[a]);
                        return e
                    }
                    )({}, e.tree.selected);
                    c.x.isMainLine(e.tree.selected.line) || l.l.selectLine(e, 0),
                    selectLineEnd(e);
                    const a = e.tree.selected;
                    return e.tree.lines.length = 1,
                    e.tree.lines = c.x.rebuildIds(e.tree.lines),
                    e.jce.saveLines(e.tree.lines),
                    k.add(e.history, m, {
                        from: t,
                        to: a
                    }),
                    O.updateState(e)
                }
                ,
                selectLineEnd: selectLineEnd,
                selectLineStart: selectLineStart,
                selectNode: select_node_selectNode,
                setPlayingAs: setPlayingAs,
                updateMarkings: ({arrow: e, effect: t, game: a, ids: s, square: n, resetFirst: o=!0})=>{
                    const r = !1;
                    return o && clearMarkings(a, s, r),
                    e && markArrow(a, e, s, r),
                    t && markEffect({
                        game: a,
                        effect: t,
                        ids: s,
                        updateState: r
                    }),
                    n && markSquare(a, n, s, r),
                    O.updateState(a),
                    k.add(a.history, b),
                    a
                }
                ,
                updateNode: (e,t={},a)=>{
                    const s = e.jce._lines()
                      , n = c.x.findNode(s, t);
                    if (!n || !a || a.commentBefore && !c.x.isFirstVisibleNode(s, t))
                        return null;
                    const o = c.x.getLine(s, t.line);
                    if (void 0 === a.commentBefore && c.x.isFirstVisibleNode(s, t) ? delete o.initComment : a.commentBefore && (o.initComment = a.commentBefore),
                    a.insertCommentAfterLastNode && o.length) {
                        const e = o[o.length - 1];
                        e && (e.comment = a.insertCommentAfterLastNode,
                        delete a.insertCommentAfterLastNode)
                    }
                    if (a.annotation && (a.annotation = (0,
                    F.JX)(n, a.annotation) ? "" : (0,
                    F.TW)(a.annotation)),
                    a.additionalAnnotation) {
                        if (!(0,
                        F.ie)(a.additionalAnnotation))
                            return null;
                        (0,
                        F.lz)(n, a.additionalAnnotation) && (a.additionalAnnotation = []),
                        a.additionalAnnotation = [].concat((0,
                        F.TW)(a.additionalAnnotation))
                    }
                    return Object.assign(n, a),
                    k.add(e.history, y, {
                        line: t.line,
                        move: t.move
                    }),
                    O.updateState(e)
                }
                ,
                updatePgnHeaders: (e,t)=>{
                    if (!t)
                        return null;
                    const a = Object.keys(t).reduce(((e,a)=>("Date" === a && "number" == typeof t[a] && (t[a] = s.c.formatJSTimestampForPgn(t[a])),
                    e.push(a),
                    e.push(t[a]),
                    e)), []);
                    return l.l.updateHeaders(e, a),
                    k.add(e.history, v),
                    e.setup.result = O.getResult(e),
                    e
                }
            }
        },
        43635: function(e, t, a) {
            "use strict";
            a.d(t, {
                lz: function() {
                    return additionalAnnotationExists
                },
                JX: function() {
                    return annotationExists
                },
                ie: function() {
                    return isNagFormat
                },
                TW: function() {
                    return O
                }
            });
            a(43037);
            var s = a(26211)
              , n = a(18160);
            const o = "after"
              , r = "before"
              , i = "addAnnotation"
              , l = "addEvalNotation"
              , c = "clearAnalysis"
              , u = "createContinuation"
              , d = "createVariation"
              , h = "deleteComment"
              , p = "deleteLine"
              , m = "deleteMove"
              , b = "insertComment"
              , g = "moveVariationDown"
              , f = "moveVariation"
              , v = "promoteVariation"
              , w = "removeAnnotation"
              , y = "removeBegin"
              , k = "removeEnd"
              , _ = "removeEvalAnnotation"
              , C = "removeFocus"
              , T = "setBegin"
              , S = "setEnd"
              , x = "setFocus"
              , E = [{
                code: "$1",
                display: s.v.$1,
                meaning: n.Z.trans("Good move"),
                action: i
            }, {
                code: "$2",
                display: s.v.$2,
                meaning: n.Z.trans("Bad move"),
                action: i
            }, {
                code: "$3",
                display: s.v.$3,
                meaning: n.Z.trans("Excellent move"),
                action: i
            }, {
                code: "$4",
                display: s.v.$4,
                meaning: n.Z.trans("Blunder"),
                action: i
            }, {
                code: "$5",
                display: s.v.$5,
                meaning: n.Z.trans("Speculative move"),
                action: i
            }, {
                code: "$6",
                display: s.v.$6,
                meaning: n.Z.trans("Dubious move"),
                action: i
            }, {
                code: "$10",
                display: s.v.$10,
                meaning: n.Z.trans("Drawish"),
                action: l
            }, {
                code: "$13",
                display: s.v.$13,
                meaning: n.Z.trans("Unclear"),
                action: l
            }, {
                code: "$14",
                display: s.v.$14,
                meaning: n.Z.trans("White has a slight advantage"),
                action: l
            }, {
                code: "$15",
                display: s.v.$15,
                meaning: n.Z.trans("Black has a slight advantage"),
                action: l
            }, {
                code: "$16",
                display: s.v.$16,
                meaning: n.Z.trans("White has a moderate advantage"),
                action: l
            }, {
                code: "$17",
                display: s.v.$17,
                meaning: n.Z.trans("Black has a moderate advantage"),
                action: l
            }, {
                code: "$18",
                display: s.v.$18,
                meaning: n.Z.trans("White has a decisive advantage"),
                action: l
            }, {
                code: "$19",
                display: s.v.$19,
                meaning: n.Z.trans("Black has a decisive advantage"),
                action: l
            }, {
                code: "$22",
                display: s.v.$22,
                meaning: n.Z.trans("The position is in zugzwang"),
                action: l
            }, {
                code: "$146",
                display: s.v.$146,
                meaning: n.Z.trans("Novelty"),
                action: l
            }]
              , O = (n.Z.trans("Clear All Analysis"),
            n.Z.trans("Insert Continuation"),
            n.Z.trans("Insert Alternate Line"),
            n.Z.trans("Delete Comment After"),
            n.Z.trans("Delete Comment Before"),
            n.Z.trans("Delete Entire Variation"),
            n.Z.trans("Delete Move"),
            n.Z.trans("Comment After"),
            n.Z.trans("Comment Before"),
            n.Z.trans("Move Variation Down"),
            n.Z.trans("Move Variation Up"),
            n.Z.trans("Promote"),
            n.Z.trans("Remove Annotation"),
            n.Z.trans("Remove Begin"),
            n.Z.trans("Remove End"),
            n.Z.trans("Remove Evaluation Annotation"),
            n.Z.trans("Remove Focus"),
            n.Z.trans("Set Begin"),
            n.Z.trans("Set End"),
            n.Z.trans("Set Focus"),
            (()=>{
                const e = [];
                E.forEach((t=>{
                    const a = e[e.length - 1] || null;
                    a && 4 !== a.length ? a.push(t) : e.push([t])
                }
                ))
            }
            )(),
            e=>Object.prototype.hasOwnProperty.call(s.v, e) || Object.prototype.hasOwnProperty.call(s.f9, e) ? isNagFormat(e) ? s.v[e] : O(s.f9[e]) : e || "")
              , additionalAnnotationExists = (e,t)=>e.additionalAnnotation && Array.isArray(e.additionalAnnotation) && O(e.additionalAnnotation[0]) === O(t)
              , annotationExists = (e,t)=>O(e.annotation) === O(t)
              , isNagFormat = e=>e && "$" === e.charAt(0)
        },
        4593: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return i
                }
            });
            var s = a(86673);
            let n = null;
            var o = new class VisibilityObserver {
                constructor() {
                    return null == n && (n = this,
                    this.observer = new IntersectionObserver((e=>{
                        e.forEach((e=>{
                            e.intersectionRatio > 0 && (s.Z.emit("visibility-observer-change", e.target),
                            this.observer.unobserve(e.target))
                        }
                        ))
                    }
                    ),{
                        rootMargin: "200px 0px",
                        threshold: .01
                    })),
                    n
                }
                observe(e) {
                    this.observer.observe(e)
                }
                unobserve(e) {
                    this.observer.unobserve(e)
                }
            }
              , r = a(97203);
            const cacheBinding = (e,t)=>{
                e.dataset.chessSrc = t.value.src,
                e.dataset.chessSrcset = t.value.srcset
            }
              , setAttributes = e=>{
                const t = e.dataset.chessSrc
                  , a = "false" !== e.dataset.chessSrcset ? `${(0,
                r.q)(t)} 2x` : void 0;
                t && e.setAttribute("src", t),
                a && e.setAttribute("srcset", a)
            }
            ;
            var i = {
                bind: (e,t)=>{
                    (null == t ? void 0 : t.value) && (cacheBinding(e, t),
                    s.Z.on("visibility-observer-change", (t=>{
                        t === e && (setAttributes(e),
                        e.dataset.visible = !0,
                        o.unobserve(e))
                    }
                    )),
                    o.observe(e))
                }
                ,
                componentUpdated(e, t) {
                    (null == t ? void 0 : t.value) && (cacheBinding(e, t),
                    void 0 !== e.dataset.visible && setAttributes(e))
                }
            }
        },
        13450: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return i
                }
            });
            var s, n = a(61682), o = a(99660), r = a(91353);
            var i = class {
                constructor(e=null) {
                    e && (this.editor = e)
                }
                getEditor() {
                    return !this.editor && window.tinymce && (this.editor = window.tinymce),
                    this.editor ? Promise.resolve(this.editor) : function lazyLoadTinyMCE() {
                        return s || (s = new Promise((function(e, t) {
                            var a = document.createElement("script");
                            a.src = window.Config.pathToTinyMCE,
                            a.async = !0,
                            a.type = "text/javascript",
                            a.onload = function() {
                                e()
                            }
                            ,
                            a.onerror = function(e) {
                                t(e || new Error("failed to load tinymce"))
                            }
                            ,
                            a.onreadystatechange = function() {
                                "complete" === a.readyState && e()
                            }
                            ,
                            document.body.appendChild(a)
                        }
                        ))),
                        s
                    }().then((()=>(this.editor = window.tinymce,
                    this.editor)))
                }
                init(e) {
                    const t = (0,
                    o.KZ)() ? n._G.DARK_MODE : ""
                      , a = Object.assign(e, {
                        body_class: t
                    });
                    return this.getEditor().then((e=>e.init(a)))
                }
                execCommand(...e) {
                    this.getEditor().then((t=>t.activeEditor.execCommand(...e)))
                }
                fire(e) {
                    this.getEditor().then((t=>t.activeEditor.fire(e)))
                }
                getContent() {
                    if (!this.editor)
                        throw new Error("TinyMCE not initialized");
                    return this.editor.activeEditor.getContent()
                }
                getParams() {
                    return this.getEditor().then((e=>{
                        if (e.activeEditor)
                            return (0,
                            r.FR)("tinymce_editor_beta") ? window.top.tinymceDialogParameters : e.activeEditor.windowManager.getParams()
                    }
                    ))
                }
                insertContent(e) {
                    this.getEditor().then((t=>t.activeEditor.insertContent(e)))
                }
                setContent(e) {
                    this.getEditor().then((t=>t.activeEditor.setContent(e)))
                }
                destroy() {
                    this.editor && this.editor.activeEditor.destroy()
                }
                closePopup() {
                    this.getEditor().then((e=>e.activeEditor.windowManager.close(window)))
                }
                openPopup() {
                    this.getEditor().then((e=>e.activeEditor.windowManager.open()))
                }
            }
        },
        68033: function(e, t, a) {
            "use strict";
            var s = a(49790)
              , n = a(26670)
              , o = a(14164);
            t.Z = e=>{
                const t = (0,
                o.i)(e);
                return t && (0,
                n.el)({
                    type: s.V5.error,
                    message: t
                }),
                Promise.reject(e)
            }
        },
        42898: function(e, t, a) {
            "use strict";
            a.d(t, {
                c: function() {
                    return URLSearchParamEntries
                }
            });
            const URLSearchParamEntries = (e=window.location.search)=>[...new URLSearchParams(e).entries()].reduce(((e,[t,a])=>Object.assign({
                [t]: a
            }, e)), {})
        },
        84606: function(e, t) {
            var a, s, n, o;
            o = function() {
                "use strict";
                var e = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var a = arguments[t];
                        for (var s in a)
                            Object.prototype.hasOwnProperty.call(a, s) && (e[s] = a[s])
                    }
                    return e
                }
                  , t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                  , a = function() {
                    function defineProperties(e, t) {
                        for (var a = 0; a < t.length; a++) {
                            var s = t[a];
                            s.enumerable = s.enumerable || !1,
                            s.configurable = !0,
                            "value"in s && (s.writable = !0),
                            Object.defineProperty(e, s.key, s)
                        }
                    }
                    return function(e, t, a) {
                        return t && defineProperties(e.prototype, t),
                        a && defineProperties(e, a),
                        e
                    }
                }();
                function _classCallCheck(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }
                var s = function() {
                    function Router2(e, t) {
                        _classCallCheck(this, Router2),
                        this.context_ = e || {
                            base_url: "",
                            prefix: "",
                            host: "",
                            port: "",
                            scheme: "",
                            locale: ""
                        },
                        this.setRoutes(t || {})
                    }
                    return a(Router2, [{
                        key: "setRoutingData",
                        value: function setRoutingData(e) {
                            this.setBaseUrl(e.base_url),
                            this.setRoutes(e.routes),
                            "prefix"in e && this.setPrefix(e.prefix),
                            "port"in e && this.setPort(e.port),
                            "locale"in e && this.setLocale(e.locale),
                            this.setHost(e.host),
                            this.setScheme(e.scheme)
                        }
                    }, {
                        key: "setRoutes",
                        value: function setRoutes(e) {
                            this.routes_ = Object.freeze(e)
                        }
                    }, {
                        key: "getRoutes",
                        value: function getRoutes() {
                            return this.routes_
                        }
                    }, {
                        key: "setBaseUrl",
                        value: function setBaseUrl(e) {
                            this.context_.base_url = e
                        }
                    }, {
                        key: "getBaseUrl",
                        value: function getBaseUrl() {
                            return this.context_.base_url
                        }
                    }, {
                        key: "setPrefix",
                        value: function setPrefix(e) {
                            this.context_.prefix = e
                        }
                    }, {
                        key: "setScheme",
                        value: function setScheme(e) {
                            this.context_.scheme = e
                        }
                    }, {
                        key: "getScheme",
                        value: function getScheme() {
                            return this.context_.scheme
                        }
                    }, {
                        key: "setHost",
                        value: function setHost(e) {
                            this.context_.host = e
                        }
                    }, {
                        key: "getHost",
                        value: function getHost() {
                            return this.context_.host
                        }
                    }, {
                        key: "setPort",
                        value: function setPort(e) {
                            this.context_.port = e
                        }
                    }, {
                        key: "getPort",
                        value: function getPort() {
                            return this.context_.port
                        }
                    }, {
                        key: "setLocale",
                        value: function setLocale(e) {
                            this.context_.locale = e
                        }
                    }, {
                        key: "getLocale",
                        value: function getLocale() {
                            return this.context_.locale
                        }
                    }, {
                        key: "buildQueryParams",
                        value: function buildQueryParams(e, a, s) {
                            var n = this
                              , o = void 0
                              , r = new RegExp(/\[\]$/);
                            if (a instanceof Array)
                                a.forEach((function(a, o) {
                                    r.test(e) ? s(e, a) : n.buildQueryParams(e + "[" + ("object" === (void 0 === a ? "undefined" : t(a)) ? o : "") + "]", a, s)
                                }
                                ));
                            else if ("object" === (void 0 === a ? "undefined" : t(a)))
                                for (o in a)
                                    this.buildQueryParams(e + "[" + o + "]", a[o], s);
                            else
                                s(e, a)
                        }
                    }, {
                        key: "getRoute",
                        value: function getRoute(e) {
                            var t = [this.context_.prefix + e, e + "." + this.context_.locale, this.context_.prefix + e + "." + this.context_.locale, e];
                            for (var a in t)
                                if (t[a]in this.routes_)
                                    return this.routes_[t[a]];
                            throw new Error('The route "' + e + '" does not exist.')
                        }
                    }, {
                        key: "generate",
                        value: function generate(t, a) {
                            var s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
                              , n = this.getRoute(t)
                              , o = a || {}
                              , r = e({}, o)
                              , i = ""
                              , l = !0
                              , c = ""
                              , u = void 0 === this.getPort() || null === this.getPort() ? "" : this.getPort();
                            if (n.tokens.forEach((function(e) {
                                if ("text" === e[0])
                                    return i = Router2.encodePathComponent(e[1]) + i,
                                    void (l = !1);
                                if ("variable" !== e[0])
                                    throw new Error('The token type "' + e[0] + '" is not supported.');
                                var a = n.defaults && e[3]in n.defaults;
                                if (!1 === l || !a || e[3]in o && o[e[3]] != n.defaults[e[3]]) {
                                    var s = void 0;
                                    if (e[3]in o)
                                        s = o[e[3]],
                                        delete r[e[3]];
                                    else {
                                        if (!a) {
                                            if (l)
                                                return;
                                            throw new Error('The route "' + t + '" requires the parameter "' + e[3] + '".')
                                        }
                                        s = n.defaults[e[3]]
                                    }
                                    if (!0 !== s && !1 !== s && "" !== s || !l) {
                                        var c = Router2.encodePathComponent(s);
                                        "null" === c && null === s && (c = ""),
                                        i = e[1] + c + i
                                    }
                                    l = !1
                                } else
                                    a && e[3]in r && delete r[e[3]]
                            }
                            )),
                            "" === i && (i = "/"),
                            n.hosttokens.forEach((function(e) {
                                var t = void 0;
                                "text" !== e[0] ? "variable" === e[0] && (e[3]in o ? (t = o[e[3]],
                                delete r[e[3]]) : n.defaults && e[3]in n.defaults && (t = n.defaults[e[3]]),
                                c = e[1] + t + c) : c = e[1] + c
                            }
                            )),
                            i = this.context_.base_url + i,
                            n.requirements && "_scheme"in n.requirements && this.getScheme() != n.requirements._scheme) {
                                var d = c || this.getHost();
                                i = n.requirements._scheme + "://" + d + (d.indexOf(":" + u) > -1 || "" === u ? "" : ":" + u) + i
                            } else if (void 0 !== n.schemes && void 0 !== n.schemes[0] && this.getScheme() !== n.schemes[0]) {
                                var h = c || this.getHost();
                                i = n.schemes[0] + "://" + h + (h.indexOf(":" + u) > -1 || "" === u ? "" : ":" + u) + i
                            } else
                                c && this.getHost() !== c + (c.indexOf(":" + u) > -1 || "" === u ? "" : ":" + u) ? i = this.getScheme() + "://" + c + (c.indexOf(":" + u) > -1 || "" === u ? "" : ":" + u) + i : !0 === s && (i = this.getScheme() + "://" + this.getHost() + (this.getHost().indexOf(":" + u) > -1 || "" === u ? "" : ":" + u) + i);
                            if (Object.keys(r).length > 0) {
                                var p = void 0
                                  , m = []
                                  , b = function add2(e, t) {
                                    t = null === (t = "function" == typeof t ? t() : t) ? "" : t,
                                    m.push(Router2.encodeQueryComponent(e) + "=" + Router2.encodeQueryComponent(t))
                                };
                                for (p in r)
                                    this.buildQueryParams(p, r[p], b);
                                i = i + "?" + m.join("&")
                            }
                            return i
                        }
                    }], [{
                        key: "getInstance",
                        value: function getInstance() {
                            return n
                        }
                    }, {
                        key: "setData",
                        value: function setData(e) {
                            Router2.getInstance().setRoutingData(e)
                        }
                    }, {
                        key: "customEncodeURIComponent",
                        value: function customEncodeURIComponent(e) {
                            return encodeURIComponent(e).replace(/%2F/g, "/").replace(/%40/g, "@").replace(/%3A/g, ":").replace(/%21/g, "!").replace(/%3B/g, ";").replace(/%2C/g, ",").replace(/%2A/g, "*").replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/'/g, "%27")
                        }
                    }, {
                        key: "encodePathComponent",
                        value: function encodePathComponent(e) {
                            return Router2.customEncodeURIComponent(e).replace(/%3D/g, "=").replace(/%2B/g, "+").replace(/%21/g, "!").replace(/%7C/g, "|")
                        }
                    }, {
                        key: "encodeQueryComponent",
                        value: function encodeQueryComponent(e) {
                            return Router2.customEncodeURIComponent(e).replace(/%3F/g, "?")
                        }
                    }]),
                    Router2
                }();
                s.Route,
                s.Context;
                var n = new s;
                return {
                    Router: s,
                    Routing: n
                }
            }(),
            s = [],
            a = o.Routing,
            void 0 === (n = "function" == typeof a ? a.apply(t, s) : a) || (e.exports = n)
        },
        36577: function(e, t, a) {
            "use strict";
            a.d(t, {
                t: function() {
                    return getCustomAnimatedGif
                }
            });
            var s = a(57367)
              , n = a(63754);
            const seekGifUntilReady = (e,t)=>{
                s.Z.get(e).then((a=>{
                    202 === a.status ? setTimeout(seekGifUntilReady.bind(null, e, t), 2e3) : 200 === a.status && t(e)
                }
                )).catch((()=>{
                    t(e)
                }
                ))
            }
              , getCustomAnimatedGif = ({tcn: e, flip: t, isChess960: a, initialPosition: o})=>{
                const r = n.Z.generate("web_game_callback_create_dyn_gif_url")
                  , i = {
                    tcn: e,
                    flip: t,
                    isChess960: a,
                    initialSetup: o
                };
                return s.Z.post(r, i).then((e=>new Promise((t=>{
                    seekGifUntilReady(e.data, t)
                }
                ))))
            }
        },
        44829: function(e, t, a) {
            "use strict";
            a.d(t, {
                O: function() {
                    return getShareUrl
                }
            });
            const getShareUrl = ()=>{
                let e;
                const t = window.document.documentElement.lang
                  , a = window.location
                  , s = t.split("-")[0];
                return e = a.pathname.split("/")[1] === s || "en" === s ? a.href : `${a.protocol}//${a.hostname}/${s}${a.pathname}`,
                e
            }
        },
        67193: function(e, t, a) {
            "use strict";
            a.d(t, {
                Mx: function() {
                    return o
                },
                _j: function() {
                    return r
                }
            });
            var s = a(63754)
              , n = a(18160);
            const o = {
                CHESS_GAME: "chessGame",
                CHESS_PROBLEM: "chessProblem",
                SIMPLE_DIAGRAM: "simpleDiagram"
            }
              , r = (n.Z.trans("We cannot find an analysis with that URL."),
            n.Z.trans("We cannot find the game in that URL."),
            n.Z.trans("Something wrong with loaded PGN, we load it in soft mode"),
            n.Z.trans("No Result (*)"),
            n.Z.trans("White Won (1-0)"),
            n.Z.trans("Black Won (0-1)"),
            n.Z.trans("Draw (1/2-1/2)"),
            {
                getChessDiagram: e=>s.Z.generate("web_tinymce_get_chessdiagram", {
                    id: e || "new"
                }),
                getSavedAnalysisFromUrl: e=>s.Z.generate("web_analysis_game_callback_view", {
                    uuid: e
                })
            });
            n.Z.trans("White to move"),
            n.Z.trans("Black to move")
        },
        74200: function(e, t, a) {
            "use strict";
            a.d(t, {
                ON: function() {
                    return generateImage
                },
                FM: function() {
                    return getDiagramPieceStyle
                },
                L7: function() {
                    return parseBoardOptions
                },
                $O: function() {
                    return stripDisabledPieceStyles
                },
                U7: function() {
                    return createTextSetup
                },
                jI: function() {
                    return getDiagramConfig
                }
            });
            var s = a(67104)
              , n = a(59526)
              , o = a(67193)
              , r = (a(48486),
            a(13450),
            a(70917))
              , i = (a(68033),
            a(44614));
            const cleanDiagramString = (e,t)=>{
                const a = t ? e.trim().split(" ")[0].trim() : e.split("\n")[1];
                return a ? a.trim() : ""
            }
              , generateImage = e=>`<div style="text-align: center;"><img id="chess_com_diagram_0_${e}" class="chessDiagramEditorImg mceItemNonEditable" src="/bundles/web/images/diagram-placeholder.png" name="mce_chessDiagramEditorImg" /></div><br>`
              , getDiagramPieceStyle = e=>n.Y.pieces.includes(e) ? (0,
            s.jw)().pieceStyle : e
              , getDiagramType = (e,t=!1)=>e ? t ? o.Mx.CHESS_PROBLEM : o.Mx.CHESS_GAME : o.Mx.SIMPLE_DIAGRAM
              , parseBoardOptions = e=>{
                const t = e.data
                  , a = t.match(/\n?(.+)?&amp;(.+)?/g);
                let s = !1;
                a && (s = a.some((e=>!e.includes("[") && !e.includes("]"))));
                const n = t.split(":")
                  , o = {};
                return o.isPuzzle = "chessProblem" === cleanDiagramString(n[1], s),
                o.boardStyle = cleanDiagramString(n[2], s),
                o.pieceStyle = cleanDiagramString(n[3], s),
                o.flipBoard = "true" === cleanDiagramString(n[5], s),
                o.focus = Number(cleanDiagramString(n[10], s)),
                o.begin = Number(cleanDiagramString(n[11], s)),
                o.end = Number(cleanDiagramString(n[12], s)),
                o.coordinates = "true" === cleanDiagramString(n[7], s),
                o.pgn = (0,
                r.l_)(t.substr(t.indexOf("["), t.length).trim()),
                o
            }
              , stripDisabledPieceStyles = e=>e.filter((e=>!n.Y.pieces.includes(e.code)));
            function createTextSetup(e, t) {
                const a = function splitPotentiallyMultiPgn(e) {
                    return -1 !== e.indexOf('[Event "') ? function splitMultiPgn(e) {
                        const t = '[Event "';
                        return e.split(t).slice(1).map((e=>`[Event "${e}`))
                    }(e) : [e]
                }(e)
                  , s = t;
                return a.map((e=>{
                    return s.pgn = e.replace(/\\/g, ""),
                    `&-diagramtype:\n    ${(t = s).diagramType}\n    &-colorscheme:\n    ${t.boardStyle}\n    &-piecestyle:\n    ${t.pieceStyle}\n    &-float:\n    left\n    &-flip:\n    ${t.isBoardFlipped}\n    &-prompt:\n    false\n    &-coords:\n    ${t.coords}\n    &-size:\n    45\n    &-lastmove:\n\n    &-focusnode:\n    ${t.focusNode}\n    &-beginnode:\n    ${t.beginNode}\n    &-endnode:\n    ${t.endNode}\n    &-hideglobalbuttons:\n    false\n    &-pgnbody:\n    ${t.pgn}`.replace(/^[^\S\r\n]+/gm, "");
                    var t
                }
                )).join("")
            }
            const getLimitMove = e=>(0,
            i.u)(e) ? e.ids.move + 1 : ""
              , getDiagramConfig = ({boardOptions: e, hasMoves: t, isPuzzle: a, nodeLimit: s})=>({
                beginNode: getLimitMove(s.begin),
                boardStyle: e.boardStyle,
                coords: Boolean(e.coordinates),
                diagramType: getDiagramType(t, a),
                endNode: getLimitMove(s.end),
                focusNode: getLimitMove(s.focus),
                isBoardFlipped: e.flipBoard,
                pgn: "",
                pieceStyle: getDiagramPieceStyle(e.pieceStyle)
            })
        },
        48486: function(e, t, a) {
            "use strict";
            a.d(t, {
                Ck: function() {
                    return getChessDiagram
                }
            });
            var s = a(67193)
              , n = a(57367);
            function getChessDiagram(e, t="") {
                return n.Z.post(s._j.getChessDiagram(e), {
                    textSetup: t
                })
            }
        },
        24073: function(e, t, a) {
            "use strict";
            var s = a(63754)
              , n = a(18160);
            t.Z = {
                color: {
                    BLACK: "black",
                    WHITE: "white",
                    label: {
                        BLACK: n.Z.trans("Black"),
                        WHITE: n.Z.trans("White"),
                        COLOR: n.Z.trans("Color")
                    }
                },
                alert: {
                    ERROR: "error",
                    MESSAGE: n.Z.trans("Invalid Username")
                },
                gameSource: {
                    MASTER: "master",
                    OTHER: "other",
                    OWN: "own",
                    label: {
                        MASTER: n.Z.trans("Master Games"),
                        OTHER: n.Z.trans("Other Players"),
                        OWN: n.Z.trans("My Games")
                    }
                },
                gameType: {
                    ALL: "all",
                    BLITZ: "blitz",
                    DAILY: "daily",
                    LIGHTNING: "lightning",
                    LIVE: "live",
                    STANDARD: "standard",
                    label: {
                        GAME_TYPE: n.Z.trans("Game type"),
                        ALL: n.Z.trans("All Games"),
                        BLITZ: n.Z.trans("- Blitz"),
                        DAILY: n.Z.trans("Daily Chess"),
                        LIGHTNING: n.Z.trans("- Bullet"),
                        LIVE: n.Z.trans("Live Chess"),
                        STANDARD: n.Z.trans("- Rapid")
                    }
                },
                label: {
                    FIND: n.Z.trans("Find"),
                    HELP_MESSAGE: n.Z.trans("Only the following games are imported: Standard rules (no variants) that are at least 15 ply (or 29 ply if timeout) and played against a human (no computers)."),
                    LIMIT_REACHED: `\n      <a href="${s.Z.generate("web_membership", {
                        c: "explorer"
                    })}">\n        ${n.Z.trans("Please upgrade to get full access to Explorer.")}\n      </a>`,
                    LOADING: n.Z.trans("Loading..."),
                    NO_GAMES: n.Z.trans("There are no games with this position found in the database."),
                    SEARCH: n.Z.trans("View all games from current position"),
                    UPGRADE_TO_EXPLORE_OWN: `\n      <a href="${s.Z.generate("web_membership", {
                        c: "explorer"
                    })}">\n        ${n.Z.trans("Upgrade to premium to explore your own games.")}\n      </a>`,
                    USERNAME: n.Z.trans("Username"),
                    MASTER_PLAYER_NAME: n.Z.trans("Master player name"),
                    CHOOSE_GAME: n.Z.trans("Choose game")
                },
                mainControls: {
                    ANALYSIS: n.Z.trans("Analysis"),
                    MOVE_BACK: n.Z.trans("Move Back"),
                    MOVE_FORWARD: n.Z.trans("Move Forward"),
                    PRACTICE: n.Z.trans("Practice vs Computer"),
                    RESET: n.Z.trans("Reset")
                },
                GAME_SEARCH_COUNT_THRESHOLD: 1e4,
                upgrade: {
                    BODY: n.Z.trans("Continue to explore this or any other line with unlimited Explorer and review and play the same lines as grandmasters!"),
                    FREE_TRIAL: n.Z.trans("Start Free Trial"),
                    TITLE: n.Z.trans("Go Premium for Unlimited Explorer"),
                    NEW_TITLE: n.Z.trans("Want Unlimited Openings?"),
                    HEADER_TEXT: n.Z.trans("Explorer Limit Reached"),
                    REFERRAL: "explorer",
                    SUBTITLE: n.Z.trans("Explorer Move Limit Reached"),
                    UNLOCK: n.Z.trans("Unlock Explorer")
                },
                LABEL_MINIMUM_PERCENT: 10
            }
        },
        93189: function(e, t, a) {
            "use strict";
            var s = a(43037);
            const n = ["additionalAnnotation", "annotation", "arrows", "color", "comment", "commentBefore", "fen", "flags", "from", "ids", "lines", "moveNumber", "piece", "previous", "promotion", "san", "time", "to"];
            t.Z = (()=>{
                let e;
                const t = {
                    lines: []
                };
                return {
                    state: t,
                    updateLines: a=>{
                        t.lines = [...a],
                        (a || []).forEach(((o,r)=>{
                            e = s.x.isContinuation(a, o.id),
                            t.lines[r] = o.map((t=>{
                                const a = {};
                                return n.forEach((e=>{
                                    void 0 !== t[e] && (a[e] = t[e])
                                }
                                )),
                                e && 0 === t.ids.move && (a.commentBefore = o.initComment),
                                a
                            }
                            )),
                            t.lines[r].atMoveNode = o.atMoveNode,
                            t.lines[r].id = o.id,
                            t.lines[r].parentId = o.parentId
                        }
                        ))
                    }
                }
            }
            )()
        },
        24452: function(e, t, a) {
            "use strict";
            a.d(t, {
                MD: function() {
                    return getUserPopoverPosition
                },
                bt: function() {
                    return getPosition
                },
                _O: function() {
                    return positionTooltip
                },
                fs: function() {
                    return removePositionStyle
                }
            });
            var s = a(93644);
            const n = "top"
              , o = "right"
              , r = "bottom"
              , i = "left"
              , l = "bottom-left"
              , getUserPopoverPosition = (e,t=220,a=320)=>{
                const s = {
                    top: null,
                    left: null,
                    right: null,
                    x: null,
                    y: null
                }
                  , l = e.width / 2
                  , c = window
                  , u = c.innerHeight - 310
                  , d = e.bottom + t < c.innerHeight
                  , h = a - 28 - 12
                  , p = a - h
                  , m = e.left + l + h < c.innerWidth;
                return d ? (s.top = e.bottom,
                s.y = r) : (s.top = u,
                s.y = n),
                m ? (s.left = e.left + l - p,
                s.right = window.innerWidth - e.right,
                s.x = o) : (s.left = e.left + l - h,
                s.right = window.innerWidth - e.right,
                s.x = i),
                s.top = Math.round(s.top),
                s.left = Math.round(s.left),
                s.right = Math.round(s.right),
                s
            }
              , getPosition = (e,t,a,s=0)=>{
                if (!e || !t)
                    return null;
                const c = e.getBoundingClientRect()
                  , u = {}
                  , d = window.innerWidth - c.x
                  , canFitTop = ()=>c.top - (t.clientHeight + s) > 0
                  , canFitLeft = ()=>c.left - (t.clientWidth + s) > 0;
                return a === n && canFitTop() || a === r && !(c.bottom + t.clientHeight + s < window.innerHeight) ? (u.left = c.left - (t.clientWidth - c.width) / 2,
                u.rtlLeft = d - t.clientWidth / 2 - c.width / 2,
                u.top = c.top - t.clientHeight - s,
                u.placement = n) : a === r || a === n && !canFitTop() ? (u.left = c.left - (t.clientWidth - c.width) / 2,
                u.rtlLeft = d - t.clientWidth / 2 - c.width / 2,
                u.top = c.bottom + s,
                u.placement = r) : a === i && canFitLeft() || a === o && !(c.right + t.clientWidth + s < window.innerWidth) ? (u.left = c.left - t.clientWidth - s,
                u.rtlLeft = c.rtlLeft - t.clientWidth - s,
                u.top = c.top - (t.clientHeight - c.height) / 2,
                u.placement = i) : a === o || a === i && !canFitLeft() ? (u.left = c.right + s,
                u.rtlLeft = c.rtlLeft + s,
                u.top = c.top - (t.clientHeight - c.height) / 2,
                u.placement = o) : a === l && (u.left = c.right - c.width / 2 - t.clientWidth - s,
                u.rtlLeft = c.rtlLeft - t.clientWidth - s,
                u.top = c.bottom + s,
                u.placement = l),
                {
                    left: Math.round(u.left),
                    placement: u.placement,
                    rtlLeft: Math.round(u.rtlLeft),
                    top: Math.round(u.top)
                }
            }
              , positionTooltip = (e,t,a,n=0)=>{
                if (!e || !t)
                    return null;
                const o = getPosition(e, t, a, n);
                return (0,
                s.t)() ? t.style.transform = `translate(-${o.rtlLeft}px, ${o.top}px)` : t.style.transform = `translate(${o.left}px, ${o.top}px)`,
                t.classList.add(o.placement),
                t
            }
              , removePositionStyle = e=>e ? (e.style.transform = "translate(-100%, -100%)",
            e.classList.remove(i, o, r, n),
            e) : null
        },
        31352: function(e, t, a) {
            "use strict";
            a.d(t, {
                J: function() {
                    return createUserService
                }
            });
            var s = a(35174)
              , n = a(73167)
              , o = a(92591)
              , r = a(87692);
            function getDefaultBoardOptions() {
                return {
                    animationType: "default",
                    boardSize: "auto",
                    boardStyle: "green",
                    coordinates: "inside",
                    darkMode: !0,
                    highlightLegalMoves: !0,
                    highlightMoves: !0,
                    isWhiteOnBottom: !1,
                    moveListDisplayType: "text",
                    moveMethod: "drag",
                    pieceStyle: "neo",
                    playSounds: !0,
                    soundTheme: "default"
                }
            }
            function createAddFriend(e) {
                return function addFriend(t, a=!1) {
                    const {actionQueue: s, http: n, Router: o} = e
                      , r = {
                        user: t
                    };
                    return a && (r.recommendation = 1),
                    s.add(n.post, o.generate("web_friend_request_callback", r))
                }
            }
            function createApproveFriendRequest(e) {
                return function approveFriendRequest(t) {
                    const {actionQueue: a, http: s, Router: n} = e;
                    return a.add(s.put, n.generate("web_friend_accept_request_callback", {
                        user: t
                    }))
                }
            }
            function createBlockUser(e) {
                return function blockUser(t) {
                    const {actionQueue: a, CSRFToken: s, http: n, Router: o} = e;
                    return a.add(n.post, o.generate("web_member_callback_block_member", {
                        username: t
                    }), {
                        _token: s
                    })
                }
            }
            function createCancelFriendRequest(e) {
                return function cancelFriendRequest(t) {
                    const {actionQueue: a, http: s, Router: n} = e;
                    return a.add(s.post, n.generate("web_friend_cancel_request_callback", {
                        user: t
                    }))
                }
            }
            function createCheckMembershipStatus(e) {
                return function checkMembershipStatus(t) {
                    const {membership: a, service: s, user: n} = e;
                    if (!s.isLoggedIn())
                        return !1;
                    let o = !1;
                    switch (t) {
                    case "isActivated":
                        o = n.isActivated;
                        break;
                    case "isStaff":
                        o = n.membershipLevel >= a.staff;
                        break;
                    case "isStaffOnly":
                        o = n.membershipLevel === a.staff;
                        break;
                    case "isModerator":
                        o = n.membershipLevel >= a.moderator;
                        break;
                    case "isModeratorOnly":
                        o = n.membershipLevel === a.moderator;
                        break;
                    case "isDiamond":
                        o = n.membershipLevel >= a.diamond;
                        break;
                    case "isDiamondOnly":
                        o = n.membershipLevel === a.diamond;
                        break;
                    case "isPlatinum":
                        o = n.membershipLevel >= a.platinum;
                        break;
                    case "isPlatinumOnly":
                        o = n.membershipLevel === a.platinum;
                        break;
                    case "isSilver":
                    case "isPremium":
                        o = n.membershipLevel >= a.silver;
                        break;
                    case "isSilverOnly":
                        o = n.membershipLevel === a.silver;
                        break;
                    case "isGold":
                        o = n.membershipLevel >= a.gold;
                        break;
                    case "isGoldOnly":
                        o = n.membershipLevel === a.gold;
                        break;
                    case "isBasic":
                        o = n.membershipLevel === a.basic;
                        break;
                    default:
                        o = !1
                    }
                    return o
                }
            }
            function createCheckValidUsername(e) {
                return function checkValidUsername(t) {
                    const {http: a, Router: s} = e;
                    return a.get(s.generate("web_user_callback_valid_username", {
                        username: t
                    }))
                }
            }
            function createDeclineFriendRequest(e) {
                return function declineFriendRequest(t) {
                    const {actionQueue: a, http: s, Router: n} = e;
                    return a.add(s.post, n.generate("web_friend_decline_request_callback", {
                        user: t
                    }))
                }
            }
            function createDeleteFriend(e) {
                return function deleteFriend(t) {
                    const {actionQueue: a, http: s, Router: n} = e;
                    return a.add(s.delete, n.generate("web_friend_delete_callback", {
                        user: t
                    }))
                }
            }
            function createDismissFollowSuggestion(e) {
                return function dismissFollowSuggestion(t) {
                    const {actionQueue: a, http: s, Router: n} = e;
                    return a.add(s.post, n.generate("web_user_callback_dismiss_follow_suggestion", {
                        username: t
                    }))
                }
            }
            function createEligibleFirstTrial(e) {
                return function EligibleFirstTrial() {
                    const {service: t, user: a} = e;
                    return t.isLoggedIn() && a.eligibleFirstTrial
                }
            }
            var i = a(27376)
              , l = a(82220);
            function createFetchReportReasonsData(e) {
                return function fetchReportReasonsData() {
                    const {http: t, Router: a} = e;
                    return t.get(a.generate("web_user_callback_report_reasons"))
                }
            }
            function createGenerateProfileLink(e) {
                return function generateProfileLink(t) {
                    const {Router: a} = e;
                    return t ? `<a href="${a.generate("web_member_view", {
                        username: t
                    })}" target="_self">${t}</a>` : ""
                }
            }
            function createGet(e) {
                return function get(t) {
                    const {user: a} = e;
                    return a ? t ? a[t] : a : null
                }
            }
            function createGetAvatar(e) {
                return function getAvatar(t) {
                    const {http: a, Router: s} = e;
                    return a.get(s.generate("pubapi_player_profile", {
                        username: t
                    }))
                }
            }
            function createGetFollowSuggestions(e) {
                return function getFollowSuggestions() {
                    const {http: t, Router: a} = e;
                    return t.get(a.generate("web_user_callback_follow_suggestions"))
                }
            }
            function createGetFriends(e) {
                return function getFriends(t) {
                    const {http: a, Router: s} = e;
                    return a.get(s.generate("web_friend_callback_friends_search", t))
                }
            }
            function createGetOpponents(e) {
                return function getOpponents() {
                    const {http: t, Router: a} = e;
                    return t.get(a.generate("web_user_callback_recent_opponents"))
                }
            }
            var c = a(45381);
            function getPromises() {
                return window.chesscom.promises || (window.chesscom.promises = {}),
                window.chesscom.promises
            }
            function createGetRoles(e) {
                return function getRoles() {
                    const {http: t, Router: a} = e;
                    return (0,
                    c.jl)() ? function execAndCache({id: e, promise: t}) {
                        const a = getPromises();
                        return a[e] || (a[e] = new Promise(((e,a)=>{
                            t().then(e).catch(a)
                        }
                        ))),
                        a[e]
                    }({
                        id: r.Zj.FETCH_ROLES,
                        promise: ()=>t.get(a.generate("web_security_callback_user_roles"))
                    }) : []
                }
            }
            function createGetUser(e) {
                return function getUser(t) {
                    const {http: a, Router: s} = e;
                    return a.get(s.generate("web_user_callback_popup", {
                        username: t
                    }))
                }
            }
            function createGuestUpdateSkillLevel(e) {
                return function guestUpdateSkillLevel(t) {
                    const {http: a, Router: s} = e;
                    return a.post(s.generate("web_guest_update_skill_level"), {
                        skill_level: Number(t)
                    })
                }
            }
            function createIsEnabled(e) {
                return function isEnabled() {
                    const {service: t, user: a} = e;
                    return t.isLoggedIn() && a.isEnabled
                }
            }
            function createIsImpersonating(e) {
                return function isImpersonating() {
                    const {service: t, user: a} = e;
                    return t.isLoggedIn() && a.isImpersonating
                }
            }
            function createIsLoggedIn(e) {
                return function isLoggedIn() {
                    const {is2FARoute: t, user: a} = e;
                    return a && a.id && !t()
                }
            }
            function createReportUser(e) {
                return function reportUser(t) {
                    const {callbacks: a, http: s, Router: n} = e;
                    return s.post(n.generate(a.REPORT_USER), t)
                }
            }
            var u = a(94952)
              , d = a(20517)
              , h = a(3510)
              , p = a(6159)
              , m = a(11721)
              , b = Object.defineProperty
              , g = Object.defineProperties
              , f = Object.getOwnPropertyDescriptors
              , v = Object.getOwnPropertySymbols
              , w = Object.prototype.hasOwnProperty
              , y = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? b(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function createSaveBoardSetting(e) {
                return async function saveBoardSetting(t, a) {
                    const s = function createUndoAction(t, a) {
                        const {service: s, update: n} = e
                          , {boardOptions: o} = s.get();
                        return n("boardOptions", (r = ((e,t)=>{
                            for (var a in t || (t = {}))
                                w.call(t, a) && __defNormalProp(e, a, t[a]);
                            if (v)
                                for (var a of v(t))
                                    y.call(t, a) && __defNormalProp(e, a, t[a]);
                            return e
                        }
                        )({}, o),
                        i = {
                            [t]: a
                        },
                        g(r, f(i))));
                        var r, i
                    }(t, a);
                    return function toggleUiClasses(e, t) {
                        "coordinates" === e && (0,
                        u.a)("outside" === t)
                    }(t, a),
                    Promise.all([createSavePromise(t, a), createSettingsServiceSavePromise(t, a)]).then(e.emitUser).catch((()=>{
                        s(),
                        e.emitUser()
                    }
                    ))
                }
                ;
                function createSavePromise(t, a) {
                    const {actionQueue: s, http: n, Router: o} = e
                      , [r,i] = (0,
                    p.M)(t, a);
                    return s.add(n.post, o.generate(d.f[r]), {
                        action: i
                    })
                }
                function createSettingsServiceSavePromise(e, t) {
                    if (!window.chesscom.features.includes("settings_service_data_sync"))
                        return Promise.resolve();
                    const a = (0,
                    m.R)({
                        [e]: t
                    });
                    return (0,
                    h.z)(a)
                }
            }
            var k = Object.defineProperty
              , _ = Object.getOwnPropertySymbols
              , C = Object.prototype.hasOwnProperty
              , T = Object.prototype.propertyIsEnumerable
              , search_username_defNormalProp = (e,t,a)=>t in e ? k(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function createSearchUsername(e) {
                return function searchUsername(t, a={}) {
                    const {http: s, routes: n} = e;
                    return s.get(n.usernameSearch(((e,t)=>{
                        for (var a in t || (t = {}))
                            C.call(t, a) && search_username_defNormalProp(e, a, t[a]);
                        if (_)
                            for (var a of _(t))
                                T.call(t, a) && search_username_defNormalProp(e, a, t[a]);
                        return e
                    }
                    )({
                        query: t
                    }, a)))
                }
            }
            function createSet(e) {
                return function set(t, a) {
                    const {user: s} = e;
                    return s ? (s[t] = a,
                    s) : null
                }
            }
            function createSetArchiveView(e) {
                return function setArchiveView(t) {
                    const {emitUser: a, http: s, Router: n, update: o} = e
                      , r = o("archiveView", t);
                    return s.post(n.generate("web_user_callback_set_archive_view"), {
                        archiveView: t
                    }).then(a).catch((()=>{
                        r(),
                        a()
                    }
                    ))
                }
            }
            function createSetFairPlayAgree(e) {
                return function setFairPlayAgree(t) {
                    const {emitUser: a, http: s, Router: n, update: o} = e
                      , r = o("fairPlayAgree", t);
                    return s.post(n.generate("web_user_callback_set_fair_play_agree", {
                        fairPlayAgree: t ? 1 : 0
                    })).then(a).catch((()=>{
                        r(),
                        a()
                    }
                    ))
                }
            }
            function createSetHomeContentType(e) {
                return function setHomeContentType(t) {
                    const {emitUser: a, http: s, Router: n, update: o} = e
                      , r = o("homeContentType", t);
                    return s.post(n.generate("web_user_callback_set_home_recent_content_type"), {
                        recentContentType: t
                    }).then(a).catch((()=>{
                        r(),
                        a()
                    }
                    ))
                }
            }
            function createTrackUser(e) {
                return function trackUser(t) {
                    const {actionQueue: a, CSRFToken: s, http: n, Router: o} = e;
                    return a.add(n.post, o.generate("web_member_callback_track_member", {
                        username: t
                    }), {
                        _token: s
                    })
                }
            }
            function createUnblockUser(e) {
                return function unblockUser(t) {
                    const {actionQueue: a, CSRFToken: s, http: n, Router: o} = e;
                    return a.add(n.post, o.generate("web_member_callback_unblock_member", {
                        username: t
                    }), {
                        _token: s
                    })
                }
            }
            function createUntrackUser(e) {
                return function untrackUser(t) {
                    const {actionQueue: a, CSRFToken: s, http: n, Router: o} = e;
                    return a.add(n.post, o.generate("web_member_callback_untrack_member", {
                        username: t
                    }), {
                        _token: s
                    })
                }
            }
            var S = Object.defineProperty
              , x = Object.getOwnPropertySymbols
              , E = Object.prototype.hasOwnProperty
              , O = Object.prototype.propertyIsEnumerable
              , service_defNormalProp = (e,t,a)=>t in e ? S(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function createUserService({cache: e, callbacks: t, CSRF: a, getCurrentUser: c, http: u, includeBoardOptions: d=!1, Router: h, routes: p}) {
                const m = (0,
                o.j)(!0)
                  , b = (0,
                s.I)()
                  , g = function getInitialUser() {
                    const t = c()
                      , a = function getDefaultUser() {
                        var e;
                        return {
                            avatarUrl: null == (e = null == window ? void 0 : window.Config) ? void 0 : e.noAvatar,
                            archiveView: "grid",
                            boardOptions: {
                                animationType: "default",
                                boardSize: "auto",
                                boardStyle: "green",
                                coordinates: "inside",
                                darkMode: !0,
                                highlightLegalMoves: !0,
                                highlightMoves: !0,
                                isWhiteOnBottom: !1,
                                moveListDisplayType: "text",
                                moveMethod: "drag",
                                pieceStyle: "neo",
                                playSounds: !0,
                                soundTheme: "default"
                            },
                            country: null,
                            features: {},
                            flag: null,
                            friends: [],
                            homeContentType: "following",
                            isLoggedIn: !1,
                            loading: {
                                friends: !1,
                                opponents: !1
                            },
                            membership: null,
                            opponents: [],
                            rating: null,
                            roles: [],
                            username: ""
                        }
                    }();
                    if (!t)
                        return a;
                    const s = Object.assign({}, a, t);
                    if (!t.isImpersonating) {
                        const t = e.getBoardOptions();
                        Object.keys(t).length && Object.assign(s.boardOptions, (0,
                        n.ei)(t, ["animationType", "boardSize", "boardStyle", "coordinates", "darkMode", "highlightLegalMoves", "highlightMoves", "isWhiteOnBottom", "moveListDisplayType", "moveMethod", "pieceStyle", "playSounds", "soundTheme"]))
                    }
                    return s
                }()
                  , f = {
                    actionQueue: m,
                    callbacks: t,
                    CSRFToken: a.getToken(),
                    emitUser: emitUser,
                    http: u,
                    is2FARoute: l.Z,
                    membership: r.p0,
                    Router: h,
                    routes: p,
                    update: function update(t, a) {
                        const s = g[t];
                        return g[t] = a,
                        e.setBoardOptions(a),
                        function undo() {
                            g[t] = s,
                            e.setBoardOptions(s)
                        }
                    },
                    user: g
                }
                  , v = ((e,t)=>{
                    for (var a in t || (t = {}))
                        E.call(t, a) && service_defNormalProp(e, a, t[a]);
                    if (x)
                        for (var a of x(t))
                            O.call(t, a) && service_defNormalProp(e, a, t[a]);
                    return e
                }
                )({
                    addFriend: createAddFriend(f),
                    approveFriendRequest: createApproveFriendRequest(f),
                    blockUser: createBlockUser(f),
                    cancelFriendRequest: createCancelFriendRequest(f),
                    checkMembershipStatus: createCheckMembershipStatus(f),
                    checkValidUsername: createCheckValidUsername(f),
                    declineFriendRequest: createDeclineFriendRequest(f),
                    deleteFriend: createDeleteFriend(f),
                    dismissFollowSuggestion: createDismissFollowSuggestion(f),
                    eligibleFirstTrial: createEligibleFirstTrial(f),
                    fetchBoardOptions: d ? function fetchBoardOptions() {
                        return (0,
                        l.Z)() ? Promise.resolve() : (0,
                        i.R)().catch(getDefaultBoardOptions)
                    }
                    : void 0,
                    fetchReportReasonsData: createFetchReportReasonsData(f),
                    generateProfileLine: createGenerateProfileLink(f),
                    get: createGet(f),
                    getAvatar: createGetAvatar(f),
                    getFollowSuggestions: createGetFollowSuggestions(f),
                    getFriends: createGetFriends(f),
                    getOpponents: createGetOpponents(f),
                    getRoles: createGetRoles(f),
                    getUser: createGetUser(f),
                    guestUpdateSkillLevel: createGuestUpdateSkillLevel(f),
                    isEnabled: createIsEnabled(f),
                    isImpersonating: createIsImpersonating(f),
                    isLoggedIn: createIsLoggedIn(f),
                    reportUser: createReportUser(f),
                    saveBoardSetting: createSaveBoardSetting(f),
                    searchUsername: createSearchUsername(f),
                    set: createSet(f),
                    setArchiveView: createSetArchiveView(f),
                    setFairPlayAgree: createSetFairPlayAgree(f),
                    setHomeContentType: createSetHomeContentType(f),
                    trackUser: createTrackUser(f),
                    unblockUser: createUnblockUser(f),
                    untrackUser: createUntrackUser(f)
                }, b);
                return async function fetchAndApplyBoardOptions() {
                    if (v.fetchBoardOptions)
                        try {
                            const t = await v.fetchBoardOptions();
                            v.set("boardOptions", t),
                            e.setBoardOptions(t),
                            emitUser()
                        } catch (t) {}
                }(),
                v.acceptFollowSuggestion = v.trackUser,
                f.service = v,
                v;
                function emitUser(e) {
                    b.emit(e, g)
                }
            }
        },
        92957: function(e, t, a) {
            "use strict";
            a.d(t, {
                X: function() {
                    return registerModules
                }
            });
            var s = a(92685);
            const registerModules = e=>{
                Object.keys(e).forEach((t=>{
                    const a = e[t];
                    s.Z.state && s.Z.state[t] || s.Z.registerModule(t, a)
                }
                ))
            }
        },
        89483: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return l
                }
            });
            var s = function createContextLocaleService() {
                var e, t, a, s, n, o;
                const r = {
                    contentLanguage: null == (t = null == (e = window.context) ? void 0 : e.i18n) ? void 0 : t.contentLanguage,
                    language: null == (s = null == (a = window.context) ? void 0 : a.i18n) ? void 0 : s.locale,
                    speaksEnglish: "en_US" === (null == (o = null == (n = window.context) ? void 0 : n.i18n) ? void 0 : o.locale)
                };
                return {
                    get: function get(e) {
                        return r[e]
                    }
                }
            }()
              , n = a(99644)
              , o = a(49790)
              , r = a(26670)
              , i = a(18160);
            const prepAlertMessage = e=>e.data && e.data.message || o.R0.badRequest;
            var l = {
                namespaced: !0,
                mutations: {
                    setLoading: (e,t)=>{
                        e.loading = t
                    }
                    ,
                    setLoadingUser: (e,t)=>{
                        e.loadingUser[t.username] = t.loading
                    }
                    ,
                    setLoadingFriends: (e,t)=>{
                        e.loading.friends = t
                    }
                    ,
                    setFriends: (e,t)=>{
                        e.friends = t
                    }
                    ,
                    setLoadingOpponents: (e,t)=>{
                        e.loading.opponents = t
                    }
                    ,
                    setOpponents: (e,t)=>{
                        e.opponents = t
                    }
                    ,
                    setAvatarUrl: (e,t)=>{
                        e.avatarUrl = t
                    }
                    ,
                    setSettingsAvatarUrl: (e,t)=>{
                        e.settingsAvatarUrl = t
                    }
                    ,
                    setArchiveView: (e,t)=>{
                        e.archiveView = t
                    }
                    ,
                    setFairPlayAgree: (e,t)=>{
                        e.fairPlayAgree = t
                    }
                    ,
                    setHomeContentType: (e,t)=>{
                        e.homeContentType = t
                    }
                    ,
                    setIsThreeD: (e,t)=>{
                        e.isThreeD = t
                    }
                    ,
                    setFollowSuggestions: (e,t)=>{
                        e.followSuggestions = t
                    }
                    ,
                    removeFollowSuggestedUser: (e,t)=>{
                        const a = e.followSuggestions
                          , s = a.findIndex((e=>e.username === t));
                        -1 !== s && (a.splice(s, 1),
                        e.followSuggestions = a)
                    }
                    ,
                    setFollowMessage: (e,t)=>{
                        e.followMessage = t
                    }
                    ,
                    setRoles: (e,t)=>{
                        e.roles = t
                    }
                    ,
                    setRating: (e,t)=>{
                        e.rating = t
                    }
                    ,
                    setLoggedIn: (e,t)=>{
                        e.isLoggedIn = t
                    }
                    ,
                    setUsername: (e,t)=>{
                        e.username = t
                    }
                    ,
                    setMembershipLevel(e, t) {
                        e.membershipLevel = t
                    }
                },
                actions: function createUserActions(e) {
                    return {
                        init: ({dispatch: t})=>{
                            e.isLoggedIn() && (t("getFriends"),
                            t("getOpponents"))
                        }
                        ,
                        getFriends: ({commit: t})=>(t("setLoading", !0),
                        e.getFriends({
                            user: e.get("id"),
                            avatarSize: 50
                        }).then((e=>{
                            t("setLoading", !1),
                            t("setFriends", e.data.friends)
                        }
                        )).catch((()=>{
                            t("setLoading", !1),
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        ))),
                        getOpponents: ({commit: t})=>(t("setLoading", !0),
                        e.getOpponents().then((e=>{
                            t("setLoading", !1),
                            t("setOpponents", e.data)
                        }
                        )).catch((()=>{
                            t("setLoading", !1),
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        ))),
                        getFollowSuggestions: ({commit: t})=>e.getFollowSuggestions().then((e=>{
                            if (e.data.users && e.data.users.length > 0) {
                                t("setFollowSuggestions", e.data.users);
                                let a = i.Z.trans("Consider following...");
                                e.data.notYetFollowing && (a = i.Z.trans("You are not currently following anyone. Here are a few suggestions...")),
                                t("setFollowMessage", a)
                            } else
                                t("setFollowMessage", null)
                        }
                        )).catch((()=>(0,
                        r.el)({
                            type: o.V5.error,
                            message: o.R0.badRequest
                        }))),
                        acceptFollowSuggestion: ({commit: e, dispatch: t},a)=>{
                            e("removeFollowSuggestedUser", a),
                            t("trackUser", a)
                        }
                        ,
                        dismissFollowSuggestion: ({commit: t},a)=>(t("removeFollowSuggestedUser", a),
                        e.dismissFollowSuggestion(a).catch((()=>{
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        ))),
                        getAvatar: ({commit: t},a)=>{
                            if (!e.get("avatarUrl"))
                                return e.getAvatar(a).then((e=>{
                                    t("setAvatarUrl", e.data.avatar)
                                }
                                ))
                        }
                        ,
                        addFriend: ({commit: t, dispatch: a},s)=>{
                            const n = s.userId || s
                              , i = s.dispatchCallback || "getFriends";
                            return t("setLoading", !0),
                            e.addFriend(n).then((e=>{
                                t("setLoading", !1),
                                (0,
                                r.el)({
                                    type: o.V5.success,
                                    message: prepAlertMessage(e)
                                })
                            }
                            )).then((()=>{
                                i.includes("/") ? a(i, null, {
                                    root: !0
                                }) : a(i)
                            }
                            )).catch((e=>{
                                t("setLoading", !1),
                                (0,
                                r.el)({
                                    type: o.V5.error,
                                    message: e.response.data.message
                                })
                            }
                            ))
                        }
                        ,
                        deleteFriend: ({commit: t, dispatch: a},s)=>{
                            const n = s.userId || s
                              , i = s.dispatchCallback || "getFriends";
                            return t("setLoading", !0),
                            e.deleteFriend(n).then((e=>{
                                t("setLoading", !1),
                                (0,
                                r.el)({
                                    type: o.V5.success,
                                    message: prepAlertMessage(e)
                                })
                            }
                            )).then((()=>{
                                i.includes("/") ? a(i, null, {
                                    root: !0
                                }) : a(i)
                            }
                            )).catch((()=>{
                                t("setLoading", !1),
                                (0,
                                r.el)({
                                    type: o.V5.error,
                                    message: o.R0.badRequest
                                })
                            }
                            ))
                        }
                        ,
                        approveFriendRequest: ({dispatch: t},a)=>{
                            const s = a.userId || a
                              , n = a.dispatchCallback || "getFriends";
                            return e.approveFriendRequest(s).then((e=>{
                                (0,
                                r.el)({
                                    type: o.V5.success,
                                    message: prepAlertMessage(e)
                                })
                            }
                            )).then((()=>{
                                n.includes("/") ? t(n, null, {
                                    root: !0
                                }) : t(n)
                            }
                            )).catch((()=>{
                                (0,
                                r.el)({
                                    type: o.V5.error,
                                    message: o.R0.badRequest
                                })
                            }
                            ))
                        }
                        ,
                        blockUser: (t,a)=>e.blockUser(a).then((e=>{
                            (0,
                            r.el)({
                                type: o.V5.success,
                                message: prepAlertMessage(e)
                            })
                        }
                        )).catch((()=>{
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        )),
                        unblockUser: (t,a)=>e.unblockUser(a).then((e=>{
                            (0,
                            r.el)({
                                type: o.V5.success,
                                message: prepAlertMessage(e)
                            })
                        }
                        )).catch((()=>{
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        )),
                        trackUser: (t,a)=>e.trackUser(a).then((e=>{
                            (0,
                            r.el)({
                                type: o.V5.success,
                                message: prepAlertMessage(e)
                            })
                        }
                        )).catch((()=>{
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        )),
                        untrackUser: (t,a)=>e.untrackUser(a).then((e=>{
                            (0,
                            r.el)({
                                type: o.V5.success,
                                message: prepAlertMessage(e)
                            })
                        }
                        )).catch((()=>{
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        )),
                        setArchiveView: ({commit: t},a)=>{
                            if (function isValidArchiveView(e) {
                                return ["grid", "list"].includes(e)
                            }(a))
                                return e.get("archiveView") !== a ? e.setArchiveView(a).then((()=>{
                                    t("setArchiveView", a)
                                }
                                )) : void 0
                        }
                        ,
                        setFairPlayAgree: ({commit: t})=>(t("setFairPlayAgree", !0),
                        e.setFairPlayAgree(!0)),
                        setHomeContentType: ({commit: t},a)=>{
                            if (function isValidHomeContentType(e) {
                                return ["following", "my_activity"].includes(e)
                            }(a))
                                return t("setHomeContentType", a),
                                e.setHomeContentType(a)
                        }
                        ,
                        setIsThreeD: ({commit: e},t)=>{
                            e("setIsThreeD", t)
                        }
                        ,
                        cancelFriendRequest: (t,a)=>e.cancelFriendRequest(a).then((e=>{
                            (0,
                            r.el)({
                                type: o.V5.success,
                                message: prepAlertMessage(e)
                            })
                        }
                        )).catch((()=>{
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        )),
                        declineFriendRequest: (t,a)=>e.declineFriendRequest(a).then((e=>{
                            (0,
                            r.el)({
                                type: o.V5.success,
                                message: prepAlertMessage(e)
                            })
                        }
                        )).catch((()=>{
                            (0,
                            r.el)({
                                type: o.V5.error,
                                message: o.R0.badRequest
                            })
                        }
                        )),
                        refreshUserRoles({commit: t}) {
                            if (e.isLoggedIn())
                                return e.getRoles().then((e=>{
                                    t("setRoles", e.data)
                                }
                                ))
                        },
                        checkValidUsername: (t,a)=>e.checkValidUsername(a).then((e=>e.data)).catch((()=>(0,
                        r.el)({
                            type: o.V5.error,
                            message: o.R0.badRequest
                        })))
                    }
                }(n.Z),
                state: function createUserState(e, t) {
                    var a;
                    return {
                        chessTitle: e.get("chessTitle") || "",
                        cohort: e.get("cohort"),
                        flairCode: e.get("flairCode"),
                        friends: e.get("friends"),
                        roles: e.get("roles"),
                        opponents: e.get("opponents"),
                        boardSettings: e.get("boardSettings"),
                        loading: !1,
                        eligibleFirstTrial: e.eligibleFirstTrial(),
                        isActivated: e.checkMembershipStatus("isActivated"),
                        isLoggedIn: e.isLoggedIn(),
                        isEnabled: e.isEnabled("isEnabled"),
                        isImpersonating: e.isImpersonating(),
                        isStaff: e.checkMembershipStatus("isStaff"),
                        isStaffOnly: e.checkMembershipStatus("isStaffOnly"),
                        isModerator: e.checkMembershipStatus("isModerator"),
                        isModeratorOnly: e.checkMembershipStatus("isModeratorOnly"),
                        isDiamond: e.checkMembershipStatus("isDiamond"),
                        isDiamondOnly: e.checkMembershipStatus("isDiamondOnly"),
                        isPlatinum: e.checkMembershipStatus("isPlatinum"),
                        isPlatinumOnly: e.checkMembershipStatus("isPlatinumOnly"),
                        isSilver: e.checkMembershipStatus("isSilver"),
                        isSilverOnly: e.checkMembershipStatus("isSilverOnly"),
                        isGold: e.checkMembershipStatus("isGold"),
                        isGoldOnly: e.checkMembershipStatus("isGoldOnly"),
                        isGuest: e.get("isGuest"),
                        isPremium: e.checkMembershipStatus("isPremium"),
                        isBasic: e.checkMembershipStatus("isBasic"),
                        id: e.get("id"),
                        language: t.get("language"),
                        contentLanguage: t.get("contentLanguage"),
                        username: e.get("username"),
                        avatarUrl: e.get("avatarUrl"),
                        settingsAvatarUrl: e.get("settingsAvatarUrl"),
                        avatarLargeUrl: e.get("avatarLargeUrl"),
                        lastLoginDate: e.get("lastLoginDate"),
                        registerDate: e.get("registerDate"),
                        timezone: e.get("timezone"),
                        diagramSettings: e.get("diagramSettings"),
                        speaksEnglish: t.get("speaksEnglish"),
                        isThreeD: !1,
                        archiveView: e.get("getArchiveView"),
                        homeContentType: e.get("homeContentType"),
                        membershipLevel: e.get("membershipLevel"),
                        isContentHidden: e.get("isContentHidden"),
                        fairPlayAgree: e.get("fairPlayAgree"),
                        features: e.get("features"),
                        followSuggestions: [],
                        followMessage: "",
                        country: e.get("country"),
                        flag: null == (a = e.get("country")) ? void 0 : a.id,
                        rating: e.get("rating"),
                        membership: e.get("membership"),
                        safeMode: e.get("safeMode"),
                        uuid: e.get("uuid")
                    }
                }(n.Z, s),
                getters: {
                    chessTitle: e=>e.chessTitle,
                    isActivated: e=>e.isActivated,
                    id: e=>e.id,
                    isImpersonating: e=>e.isImpersonating,
                    isLoggedIn: e=>e.isLoggedIn,
                    username: e=>e.username,
                    roles: e=>e.roles,
                    isPremium: e=>e.isPremium,
                    hyphenatedLanguage: e=>(e.language || "").replace("_", "-")
                }
            }
        },
        43037: function(e, t, a) {
            "use strict";
            a.d(t, {
                x: function() {
                    return s
                }
            });
            const s = {
                getLine: (e,t)=>e[t] || null,
                getNode: (e,t,a)=>{
                    if ("number" == typeof t) {
                        if (void 0 !== a) {
                            const n = s.getLine(e, Math.max(0, t));
                            return n ? n[a] : null
                        }
                        return null
                    }
                    if (!t)
                        return null;
                    const n = s.getLine(e, Math.max(0, t.line));
                    return n ? n[t.move] : null
                }
                ,
                getSelectedLine: e=>s.getLine(e.jce._lines(), e.tree.selected.line),
                getSelectedNode: e=>s.getNode(e.jce._lines(), e.tree.selected),
                nodeIsSelected: (e,t)=>!!(t || t.line || t.move) && (e.selected.line === t.line && e.selected.move === t.move),
                getLinesFromJce: e=>s.formatLinesFromJce(e.jce._lines()),
                getJceSelectedLine: e=>e._lines()[e._history().id],
                formatLinesFromJce: e=>s.consolidateComments(e),
                consolidateComments: e=>e.map((t=>{
                    const a = s.isContinuation(e, t.id) ? s.getNode(e, t.id, 1) : s.getNode(e, t.id, 0);
                    return a ? (t.initComment && (a.commentBefore = t.initComment),
                    t) : t
                }
                )),
                isContinuation: (e,t)=>{
                    const a = s.getLine(e, t);
                    if (!a)
                        return !1;
                    if (void 0 !== a.parentId && void 0 !== a[0]) {
                        const t = s.getNode(e, a.parentId, a.atMoveNode);
                        return !(!t || !t.move) && t.move === a[0].move
                    }
                    return !1
                }
                ,
                isMainLine: e=>0 === e,
                getNextNodeIds: (e,t)=>!e || e.move + t < 0 ? null : {
                    line: e.line,
                    move: e.move + t
                },
                getNextContinuationLineId: (e,t)=>{
                    const a = s.getNode(e, t);
                    if (!a || !a.lines)
                        return null;
                    const n = a.lines.find((t=>s.isContinuation(e, t)));
                    return -1 !== n ? n : null
                }
                ,
                getParentNode: (e,t)=>{
                    const a = {
                        line: e[t.line].parentId,
                        move: e[t.line].atMoveNode
                    };
                    return s.findNode(e, a)
                }
                ,
                getParentNodeIds: (e,t)=>{
                    const a = s.getLine(e, t.line);
                    return a && void 0 !== a.parentId ? {
                        line: a.parentId,
                        move: a.atMoveNode
                    } : null
                }
                ,
                deleteRemainingNodes: (e,t)=>e ? (e.length = t + 1,
                e) : null,
                deleteNode: (e,t)=>s.prune(e, {
                    line: t.line,
                    move: t.move - 1
                }),
                deleteLine: (e,t)=>{
                    const a = s.getLine(e, t);
                    if (void 0 !== a.parentId) {
                        const n = s.getNode(e, {
                            line: a.parentId,
                            move: a.atMoveNode
                        });
                        n.lines = n.lines.filter((e=>e !== t)),
                        0 === n.lines.length && delete n.lines
                    }
                    const n = e.filter((e=>s.isMainLine(e.id) || e.id !== t));
                    return s.rebuildIds(n)
                }
                ,
                rebuildIds: e=>{
                    const t = [];
                    return e.forEach(((e,a)=>{
                        e.id !== a && (t[e.id] = a)
                    }
                    )),
                    e.map((a=>(a.id = void 0 !== t[a.id] ? t[a.id] : a.id,
                    void 0 !== t[a.parentId] && (a.parentId = t[a.parentId]),
                    a.forEach((a=>{
                        a.ids.line = void 0 !== t[a.ids.line] ? t[a.ids.line] : a.ids.line,
                        a.lines && a.lines.length > 0 && (a.lines = a.lines.map((e=>void 0 !== t[e] ? t[e] : e)).filter((t=>void 0 !== e[t])),
                        0 === a.lines.length && delete a.lines)
                    }
                    )),
                    a)))
                }
                ,
                prune: (e,t)=>s.getNode(e, {
                    line: t.line,
                    move: t.move + 1
                }) ? (e[t.line] = s.deleteRemainingNodes(e[t.line], t.move),
                !s.isMainLine(t.line) && s.isFirstVisibleNode(e, t) && e.splice(e.findIndex((e=>e.id === t.line)), 1),
                e.sort(((e,t)=>e.id - t.id)).reduce(((e,t)=>{
                    const a = s.getNode(e, {
                        line: t.parentId,
                        move: t.atMoveNode
                    });
                    return (s.isMainLine(t.id) || a) && e.push(t),
                    e
                }
                ), [])) : e,
                isFirstNodeInTree: e=>0 === e.line && -1 === e.move,
                isFirstVisibleNode: (e,t)=>s.isContinuation(e, t.line) ? 1 === t.move : 0 === t.move,
                isFirstNodeInLine: (e,t)=>t && e && e[t.line] && e[t.line][0] && e[t.line][0].ids && e[t.line][0].ids.line === t.line && e[t.line][0].ids.move === t.move,
                isHead: (e,t)=>t && e[t.line].length - 1 === t.move || !1,
                getHeadIds: (e,t)=>({
                    line: t,
                    move: e[t].length - 1
                }),
                nodeMatchesMove: (e,t,a)=>{
                    const n = s.getNode(e, t);
                    return !!n && (n.from === a.from && n.to === a.to && (n.promotion || null) === (a.promotion || null))
                }
                ,
                shouldMatchMove: (e,t,a)=>e && 1 === t && 0 === a,
                getNextMatchingNode: (e,t={},a)=>{
                    const n = s.getNode(e, t)
                      , o = s.getNode(e, t.line, t.move + 1);
                    return e.reduce(((e,t)=>e.concat(t)), []).filter((e=>n && e.moveNumber === n.moveNumber + 1 || o && e.moveNumber === o.moveNumber)).filter((t=>!!(n && t.ids.line === n.ids.line || o && t.ids.line === o.ids.line) || (!!(n && n.lines && -1 !== n.lines.indexOf(t.ids.line) && s.isContinuation(e, t.ids.line)) || !(!o || !o.lines || -1 === o.lines.indexOf(t.ids.line) || s.isContinuation(e, t.ids.line))))).filter((t=>s.nodeMatchesMove(e, t.ids, a))).sort(((e,t)=>e.ids.line - t.ids.line))[0] || null
                }
                ,
                clearNode: (e,t)=>{
                    const a = s.getNode(e, t);
                    return a ? (delete a.comment,
                    delete a.annotation,
                    a) : null
                }
                ,
                findNode: (e,t={},a,n=!0)=>{
                    if (!e || void 0 === t.line)
                        return null;
                    if ("string" == typeof a)
                        switch (t.move) {
                        case "begin":
                            t.move = 0;
                            break;
                        case "end":
                            t.move = e[0].length - 1
                        }
                    else if (void 0 === t.move)
                        return e[t.line];
                    let o;
                    return a && 0 !== Math.abs(a) && (t = new Array(Math.abs(a)).fill(a / Math.abs(a)).reduce(((t,a)=>{
                        if (null === t)
                            return null;
                        const r = s.isContinuation(e, t.line);
                        let i = s.getNextNodeIds(t, a);
                        if (s.getNode(e, i) && (-1 !== a || !r || 0 !== i.move))
                            return i;
                        switch (a) {
                        case 1:
                            return n ? t : (o = s.getNextContinuationLineId(e, t),
                            null !== o ? {
                                line: o,
                                move: 1
                            } : null);
                        case -1:
                            return i = r ? s.getParentNodeIds(e, t) : s.getNextNodeIds(s.getParentNodeIds(e, t), -1),
                            s.getNode(e, i) ? i : t;
                        default:
                            return null
                        }
                    }
                    ), t)),
                    s.getNode(e, t) || null
                }
                ,
                clearNodeMarkings: (e,t)=>{
                    const a = s.getNode(e, t);
                    return a ? (delete a.squares,
                    delete a.arrows,
                    delete a.effects,
                    a) : null
                }
                ,
                clearNodeAnalysis: (e,t)=>{
                    const a = s.getNode(e, t);
                    return a ? (delete a.comment,
                    delete a.annotation,
                    delete a.additionalAnnotation,
                    a) : null
                }
                ,
                clearAllMarkings: e=>e ? (e.forEach((t=>{
                    t.length > 0 && t.forEach((t=>s.clearNodeMarkings(e, {
                        line: t.ids.line,
                        move: t.ids.move
                    })))
                }
                )),
                e) : null,
                clearAnalysis: e=>e ? (e.forEach((t=>{
                    t.length > 0 && t.forEach((t=>s.clearNodeAnalysis(e, {
                        line: t.ids.line,
                        move: t.ids.move
                    })))
                }
                )),
                e) : null
            }
        },
        73863: function(e, t, a) {
            "use strict";
            a.d(t, {
                c: function() {
                    return u
                }
            });
            var s = a(70125)
              , n = Object.defineProperty
              , o = Object.defineProperties
              , r = Object.getOwnPropertyDescriptors
              , i = Object.getOwnPropertySymbols
              , l = Object.prototype.hasOwnProperty
              , c = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? n(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    l.call(t, a) && __defNormalProp(e, a, t[a]);
                if (i)
                    for (var a of i(t))
                        c.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>o(e, r(t));
            const u = {
                getId: e=>{
                    const t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
                    return Array(e || 20).fill(void 0).reduce((e=>e + t.charAt(Math.floor(Math.random() * t.length))), "")
                }
                ,
                getInitialFen: ()=>"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
                formatJSTimestampForPgn: e=>{
                    const t = new Date(e)
                      , a = `0${t.getUTCDate()}`.slice(-2)
                      , s = `0${t.getUTCMonth() + 1}`.slice(-2);
                    return `${t.getFullYear()}-${s}-${a}`
                }
                ,
                getSanFromFileRank: e=>e && e.file && e.rank ? String.fromCharCode(96 + e.file) + e.rank.toString() : null,
                getFileRankFromSan: e=>e ? {
                    file: e.toLowerCase().charCodeAt(0) - 96,
                    rank: Number(e.charAt(1))
                } : null,
                getPieceAt: (e,t)=>e.setup.pieces.find((e=>e.file === t.file && e.rank === t.rank)),
                cloneGame: e=>({
                    id: e.id,
                    variant: e.variant,
                    jce: e.jce,
                    tree: u.cloneTree(e.tree),
                    setup: (0,
                    s.Q)((0,
                    s.P)(e.setup)),
                    markings: __spreadValues({}, e.markings),
                    settings: __spreadValues({}, e.settings),
                    history: [...e.history],
                    premoves: e.premoves.map((e=>(0,
                    s.Q)((0,
                    s.P)(e))))
                }),
                cloneTree: e=>__spreadProps(__spreadValues({}, e), {
                    initialMarkings: JSON.parse(JSON.stringify(e.initialMarkings)),
                    selected: __spreadValues({}, e.selected),
                    selectedNode: e.selectedNode ? __spreadProps(__spreadValues({}, e.selectedNode), {
                        ids: __spreadValues({}, e.selectedNode.ids),
                        hash: [...e.selectedNode.hash],
                        lines: e.selectedNode.lines && [...e.selectedNode.lines],
                        arrows: e.selectedNode.arrows && [...e.selectedNode.arrows]
                    }) : null
                }),
                getFirstFen: e=>e.tree.lines[0].length ? e.tree.lines[0][0].beforeFen : e.setup.fen
            }
        },
        84171: function(e, t, a) {
            "use strict";
            a.d(t, {
                cS: function() {
                    return s
                },
                nn: function() {
                    return n
                }
            });
            const s = "8/8/8/8/8/8/8/8 w KQkq - 0 1"
              , n = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
        },
        2056: function(e, t, a) {
            "use strict";
            a.d(t, {
                O: function() {
                    return s
                }
            });
            var s, n = a(18160);
            (e=>{
                let t, a;
                e.Name = "eco",
                (e=>{
                    let t;
                    (t = e.Codes || (e.Codes = {})).StartingPosition = "A00",
                    e.Text = {
                        CustomPosition: n.Z.trans("Custom Position"),
                        StartingPosition: n.Z.trans("Starting Position")
                    }
                }
                )(t = e.Config || (e.Config = {})),
                (e=>{
                    let t;
                    var a;
                    let s;
                    var n;
                    (a = t = e.GameSource || (e.GameSource = {})).Master = "master",
                    a.Other = "other",
                    a.Own = "own",
                    (n = s = e.GameType || (e.GameType = {})).All = "all",
                    n.Blitz = "blitz",
                    n.Daily = "daily",
                    n.Lightning = "lightning",
                    n.Live = "live",
                    n.Standard = "standard"
                }
                )(a = e.Explorer || (e.Explorer = {}))
            }
            )(s || (s = {}))
        },
        36292: function(e, t, a) {
            "use strict";
            a.d(t, {
                c: function() {
                    return getOpeningsLink
                }
            });
            var s = a(63754);
            function getOpeningsLink(e) {
                return s.Z.generate("web_openings_view", {
                    cleanUrl: e
                })
            }
        },
        89065: function(e, t, a) {
            "use strict";
            a.d(t, {
                xt: function() {
                    return l
                },
                _J: function() {
                    return c
                }
            });
            var s = a(67104)
              , n = a(28774)
              , o = a(26908)
              , r = a(18160)
              , i = a(26211);
            const l = {
                [o.x.Classifications.Types.AlmostCorrect]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.AlmostCorrect),
                    color: "#8a8886",
                    icon: s.sH[o.x.Classifications.Types.Undo],
                    key: o.x.Classifications.Types.AlmostCorrect
                },
                [o.x.Classifications.Types.BestMove]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.BestMove),
                    color: "#9eba5a",
                    description: r.Z.trans("is best"),
                    icon: s.sH[o.x.Classifications.Types.BestMove],
                    key: o.x.Classifications.Types.BestMove,
                    label: r.Z.trans("Best Move")
                },
                [o.x.Classifications.Types.Blunder]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Blunder),
                    annotation: i.v.$4,
                    color: "#b33430",
                    description: r.Z.trans("is a blunder"),
                    icon: s.sH[o.x.Classifications.Types.Blunder],
                    key: o.x.Classifications.Types.Blunder,
                    label: r.Z.trans("Blunder")
                },
                [o.x.Classifications.Types.Book]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Book),
                    color: "#a88865",
                    description: r.Z.trans("is a book move"),
                    icon: s.sH[o.x.Classifications.Types.Book],
                    key: o.x.Classifications.Types.Book,
                    label: r.Z.trans("Book")
                },
                [o.x.Classifications.Types.Brilliant]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Brilliant),
                    annotation: i.v.$3,
                    color: "#1baca6",
                    description: r.Z.trans("is brilliant"),
                    icon: s.sH[o.x.Classifications.Types.Brilliant],
                    key: o.x.Classifications.Types.Brilliant,
                    label: r.Z.trans("Brilliant")
                },
                [o.x.Classifications.Types.Correct]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Correct),
                    color: "#acce59",
                    icon: s.sH[o.x.Classifications.Types.Correct],
                    key: o.x.Classifications.Types.Correct,
                    label: r.Z.trans("Correct")
                },
                [o.x.Classifications.Types.Critical]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Critical),
                    key: o.x.Classifications.Types.Critical,
                    label: r.Z.trans("Critical")
                },
                [o.x.Classifications.Types.Excellent]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Excellent),
                    color: "#96bc4b",
                    description: r.Z.trans("is excellent"),
                    icon: s.sH[o.x.Classifications.Types.Excellent],
                    key: o.x.Classifications.Types.Excellent,
                    label: r.Z.trans("Excellent")
                },
                [o.x.Classifications.Types.Good]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Good),
                    color: "#96af8b",
                    description: r.Z.trans("is good"),
                    icon: s.sH[o.x.Classifications.Types.Good],
                    key: o.x.Classifications.Types.Good,
                    label: r.Z.trans("Good")
                },
                [o.x.Classifications.Types.GreatFind]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.GreatFind),
                    annotation: i.v.$1,
                    color: "#5c8bb0",
                    description: r.Z.trans("is a great move"),
                    icon: s.sH[o.x.Classifications.Types.GreatFind],
                    key: o.x.Classifications.Types.GreatFind,
                    label: r.Z.trans("Great Move")
                },
                [o.x.Classifications.Types.Forced]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Forced),
                    description: r.Z.trans("is forced"),
                    icon: s.sH[o.x.Classifications.Types.Forced],
                    key: o.x.Classifications.Types.Forced,
                    label: r.Z.trans("Forced")
                },
                [o.x.Classifications.Types.Inaccuracy]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Inaccuracy),
                    annotation: i.v.$6,
                    color: "#f0c15c",
                    description: r.Z.trans("is an inaccuracy"),
                    icon: s.sH[o.x.Classifications.Types.Inaccuracy],
                    key: o.x.Classifications.Types.Inaccuracy,
                    label: r.Z.trans("Inaccuracy")
                },
                [o.x.Classifications.Types.Incorrect]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Incorrect),
                    color: "#c93430",
                    icon: s.sH[o.x.Classifications.Types.Incorrect],
                    key: o.x.Classifications.Types.Incorrect,
                    label: r.Z.trans("Incorrect")
                },
                [o.x.Classifications.Types.MissedWin]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.MissedWin),
                    color: "#dbac16",
                    description: r.Z.trans("is a missed win"),
                    icon: s.sH[o.x.Classifications.Types.MissedWin],
                    key: o.x.Classifications.Types.MissedWin,
                    label: r.Z.trans("Missed Win")
                },
                [o.x.Classifications.Types.Miss]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Miss),
                    color: "#ee6b55",
                    description: r.Z.trans("is a miss"),
                    annotation: i.v.$9,
                    icon: s.sH[o.x.Classifications.Types.Miss],
                    key: o.x.Classifications.Types.Miss,
                    label: r.Z.trans("Miss")
                },
                [o.x.Classifications.Types.Mistake]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Mistake),
                    annotation: i.v.$2,
                    color: "#e6912c",
                    description: r.Z.trans("is a mistake"),
                    icon: s.sH[o.x.Classifications.Types.Mistake],
                    key: o.x.Classifications.Types.Mistake,
                    label: r.Z.trans("Mistake")
                },
                [o.x.Classifications.Types.Star]: {
                    className: (0,
                    n.CL)(o.x.Classifications.Types.Star),
                    color: "#e6912c",
                    icon: s.sH[o.x.Classifications.Types.BestMove],
                    key: o.x.Classifications.Types.Star
                }
            }
              , c = (l[o.x.Classifications.Types.GreatFind],
            l[o.x.Classifications.Types.BestMove],
            l[o.x.Classifications.Types.Excellent],
            l[o.x.Classifications.Types.Good],
            l[o.x.Classifications.Types.Inaccuracy],
            l[o.x.Classifications.Types.Mistake],
            l[o.x.Classifications.Types.Blunder],
            l[o.x.Classifications.Types.Forced],
            l[o.x.Classifications.Types.MissedWin],
            {
                [o.x.Classifications.CeacTypes.Best]: l[o.x.Classifications.Types.BestMove],
                [o.x.Classifications.CeacTypes.Blunder]: l[o.x.Classifications.Types.Blunder],
                [o.x.Classifications.CeacTypes.Book]: l[o.x.Classifications.Types.Book],
                [o.x.Classifications.CeacTypes.Brilliant]: l[o.x.Classifications.Types.Brilliant],
                [o.x.Classifications.CeacTypes.Excellent]: l[o.x.Classifications.Types.Excellent],
                [o.x.Classifications.CeacTypes.Forced]: l[o.x.Classifications.Types.Forced],
                [o.x.Classifications.CeacTypes.Good]: l[o.x.Classifications.Types.Good],
                [o.x.Classifications.CeacTypes.GreatFind]: l[o.x.Classifications.Types.GreatFind],
                [o.x.Classifications.CeacTypes.Inaccuracy]: l[o.x.Classifications.Types.Inaccuracy],
                [o.x.Classifications.CeacTypes.Mistake]: l[o.x.Classifications.Types.Mistake],
                [o.x.Classifications.CeacTypes.MissedWin]: l[o.x.Classifications.Types.MissedWin],
                [o.x.Classifications.CeacTypes.Miss]: l[o.x.Classifications.Types.Miss]
            });
            o.x.Classifications.DescriptionTypes.Alternative,
            r.Z.trans("is an alternative"),
            o.x.Classifications.DescriptionTypes.Initial,
            r.Z.trans("was played")
        },
        26908: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                x: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                let s, n;
                e.Name = "feedback",
                (a = t = e.Events || (e.Events = {})).SetAnalysis = "SetAnalysis",
                a.SetThinking = "SetThinking",
                (e=>{
                    let t;
                    var a;
                    (a = t = e.Classes || (e.Classes = {})).Base = "feedback-component",
                    a.Content = "feedback-content",
                    a.Description = "feedback-description",
                    a.Icon = "feedback-icon",
                    a.Row = "feedback-row",
                    a.San = "feedback-san"
                }
                )(s = e.Component || (e.Component = {})),
                (e=>{
                    let t;
                    var a;
                    let s;
                    var n;
                    let o;
                    var r;
                    let i;
                    var l;
                    (a = t = e.DescriptionTypes || (e.DescriptionTypes = {})).Alternative = "Alternative",
                    a.Initial = "Initial",
                    (n = s = e.CeacTypes || (e.CeacTypes = {})).Brilliant = "brilliant",
                    n.Best = "best",
                    n.Book = "book",
                    n.Blunder = "blunder",
                    n.Excellent = "excellent",
                    n.Good = "good",
                    n.GreatFind = "greatFind",
                    n.Inaccuracy = "inaccuracy",
                    n.Mistake = "mistake",
                    n.Miss = "miss",
                    n.MissedWin = "missedWin",
                    n.Forced = "forced",
                    (r = o = e.Scenarios || (e.Scenarios = {})).Book = "book",
                    r.Brilliant = "brilliant",
                    r.GreatFind = "greatFind",
                    r.MissedMate = "missedMate",
                    r.MissedWin = "missedWin",
                    (l = i = e.NonEffectTypes || (e.NonEffectTypes = {})).AlmostCorrect = "AlmostCorrect",
                    l.Critical = "Critical",
                    l.Forced = "Forced",
                    l.Star = "Star",
                    e.Types = {
                        Alternative: "Alternative",
                        AlmostCorrect: "AlmostCorrect",
                        BestMove: "BestMove",
                        Blunder: "Blunder",
                        Book: "Book",
                        Brilliant: "Brilliant",
                        CheckmateBlack: "CheckmateBlack",
                        CheckmateWhite: "CheckmateWhite",
                        Correct: "Correct",
                        Critical: "Critical",
                        DrawBlack: "DrawBlack",
                        DrawWhite: "DrawWhite",
                        Excellent: "Excellent",
                        FastWin: "FastWin",
                        Forced: "Forced",
                        FreePiece: "FreePiece",
                        Gamechanger: "Gamechanger",
                        Good: "Good",
                        GreatFind: "GreatFind",
                        Inaccuracy: "Inaccuracy",
                        Incorrect: "Incorrect",
                        Mate: "Mate",
                        Miss: "Miss",
                        MissedWin: "MissedWin",
                        Mistake: "Mistake",
                        ResignBlack: "ResignBlack",
                        ResignWhite: "ResignWhite",
                        Sharp: "Sharp",
                        Star: "Star",
                        Takeback: "Takeback",
                        Threat: "Threat",
                        TimeoutBlack: "TimeoutBlack",
                        TimeoutWhite: "TimeoutWhite",
                        Undo: "Undo",
                        Winner: "Winner",
                        WinnerWhite: "WinnerWhite",
                        Interesting: "Interesting",
                        Warning: "Warning"
                    }
                }
                )(n = e.Classifications || (e.Classifications = {}))
            }
            )(s || (s = {}))
        },
        87307: function(e, t, a) {
            "use strict";
            a.d(t, {
                J: function() {
                    return getClassificationV2
                }
            });
            var s = a(89065)
              , n = a(26908);
            function getClassificationV2({classificationName: e, scenarios: t={}}) {
                return t[n.x.Classifications.Scenarios.Book] ? s.xt[n.x.Classifications.Types.Book] : s._J[e]
            }
        },
        91693: function(e, t, a) {
            "use strict";
            a.d(t, {
                f: function() {
                    return dispatchResize
                }
            });
            function dispatchResize() {
                window.dispatchEvent(new Event("resize"))
            }
        },
        44748: function(e, t, a) {
            "use strict";
            a.d(t, {
                b: function() {
                    return toggleAnalysisCollapsed
                }
            });
            var s = a(91693)
              , n = a(87122)
              , o = a(17686);
            function toggleAnalysisCollapsed(e) {
                (0,
                n.y)(o.I.BodyClass.AnalysisCollapsed, e),
                (0,
                s.f)()
            }
        },
        87122: function(e, t, a) {
            "use strict";
            a.d(t, {
                y: function() {
                    return toggleBodyClass
                }
            });
            var s = a(5645);
            function toggleBodyClass(e, t) {
                (0,
                s.o)(document.body, e, t)
            }
        },
        5645: function(e, t, a) {
            "use strict";
            a.d(t, {
                o: function() {
                    return toggleClass
                }
            });
            var s = a(3775);
            function toggleClass(e, t, a) {
                const n = e.classList
                  , o = n.contains(t)
                  , r = (0,
                s.jn)(a) ? a : !o;
                r !== o && (r ? n.add(t) : n.remove(t))
            }
        },
        94952: function(e, t, a) {
            "use strict";
            a.d(t, {
                a: function() {
                    return toggleOutsideCoords
                }
            });
            var s = a(87122)
              , n = a(17686);
            function toggleOutsideCoords(e) {
                (0,
                s.y)(n.I.BodyClass.OutsideCoords, e)
            }
        },
        15870: function(e, t, a) {
            "use strict";
            a.d(t, {
                W: function() {
                    return toggleReal3d
                }
            });
            var s = a(87122)
              , n = a(17686);
            function toggleReal3d(e) {
                (0,
                s.y)(n.I.BodyClass.Real3d, e)
            }
        },
        17686: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                I: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                (a = t = e.BodyClass || (e.BodyClass = {})).Ad = "with-und",
                a.Analysis = "with-analysis",
                a.AnalysisCollapsed = "with-analysis-collapsed",
                a.Comments = "with-comments",
                a.DoubleBoard = "double-board",
                a.Evaluation = "with-evaluation",
                a.Pseudo3d = "pseudo-3d",
                a.FocusMode = "focus-mode",
                a.HandPieces = "with-pieces",
                a.HideBoardIcons = "hide-board-icons",
                a.MobileBoardHidden = "mobile-board-hidden",
                a.OutsideCoords = "outside-coords",
                a.Players = "with-players",
                a.Real3d = "real-3d",
                a.Tabs = "with-tabs",
                a.TheatreMode = "theatre-mode",
                a.Videos = "with-videos"
            }
            )(s || (s = {}))
        },
        64694: function(e, t, a) {
            "use strict";
            a.d(t, {
                Y4: function() {
                    return n
                },
                U3: function() {
                    return o
                },
                _j: function() {
                    return r
                },
                wl: function() {
                    return i
                }
            });
            var s = a(63754);
            const n = {
                amplitudeProps: "data-amplitude-props",
                speedChessChampionshipUrl: "data-speed-chess-championship-url",
                challengeUser: "data-challenge-user",
                loginAndGoRoute: "data-route-login-and-go",
                registerRoute: "data-route-register",
                routes: "data-routes"
            }
              , o = {
                CLUB_CHAT_MODERATOR_ACTION: "club-chat-moderator-action",
                HIDE_FRIEND_REQUEST: "hide-friend-request",
                MODAL_DID_HIDE: "MODAL_DID_HIDE",
                SEND_NEW_GAME_SEEK: "SEND_NEW_GAME_SEEK",
                SEND_NEW_GAME_SEEK_SUCCESS: "SEND_NEW_GAME_SEEK_SUCCESS",
                SHOW_ONBOARD_MODAL: "SHOW_ONBOARD_MODAL",
                SHOW_UPGRADE_MODAL: "SHOW_UPGRADE_MODAL",
                START_DIRECT_CHAT: "START_DIRECT_CHAT"
            }
              , r = {
                registerRoute: e=>s.Z.generate("web_security_register", {
                    redirectUrl: e
                }),
                loginAndGoRoute: e=>s.Z.generate("web_security_login_and_go", {
                    redirectUrl: e
                })
            }
              , i = {
                AMPLITUDE_NAV_SELECTION: "[data-amplitude-nav-selection]",
                FRIEND_RESULTS: ".svelte-friend-result",
                LESSONS_CONTAINER: ".lessons-container",
                LOGOUT_FORM: ".form.logout",
                LOGOUT_TRIGGER: "#sb .logout",
                MAIN_NAV: "#sb",
                MAIN_NAV_SOCIAL_LINK: "#sb .link.social",
                MAIN_NAV_HOME_LINK: "#sb .link.home",
                MAIN_NAV_LINKS: "#sb .menu > .link",
                MAIN_NAV_LOGIN_LINK: "#sb .login",
                MAIN_NAV_PLAY_LINK: "#sb .link.play",
                MAIN_NAV_REGISTER_LINK: ".signup.register",
                MAIN_TOP_NAV: "#sb .menu.top",
                MAIN_TOP_NAV_LINKS: "#sb .menu.top > .link",
                SEARCH_INPUT: 'input[name="q"]',
                SIGN_UP: ".signup",
                TOOLTIP: ".svelte-tooltip",
                TOOLTIP_TRIGGER: "[data-tooltip-content]"
            }
        },
        20169: function(e, t, a) {
            "use strict";
            a.d(t, {
                GO: function() {
                    return s
                }
            });
            const s = {
                PUZZLE_BATTLE_CHALLENGE_TOASTER: "puzzle-battle-challenge-toaster",
                PUZZLE_BATTLE_CHALLENGE_USER: "puzzle-battle-challenge-user",
                HOME_NOTIFICATIONS: "home-sb-notifications",
                LOGIN_REGISTER_MODAL: "login-register-modal",
                OFFLINE_CHALLENGE_TOASTER: "offline-challenge-toaster",
                NAV_ROOT: "sb",
                NOTIFICATION_TOASTERS: "notification-toasters",
                SHAREABLE_GAME_URL_MODAL: "shareable-game-url-modal",
                SHAREABLE_GAME_SHORT_UUID: "shareable-game-short-uuid"
            }
        },
        28598: function(e, t, a) {
            "use strict";
            a.d(t, {
                fz: function() {
                    return n
                },
                AM: function() {
                    return s
                },
                pS: function() {
                    return o
                }
            });
            var s = (e=>(e.Base = "base",
            e.Chat = "chat",
            e.Classroom = "classroom",
            e.Matcher = "matcher",
            e.Play = "play",
            e.Presence = "presence",
            e.Insights = "insights",
            e.TopPlayers = "topplayers",
            e.Users = "users",
            e.Invitations = "invitations",
            e.Settings = "settings",
            e))(s || {})
              , n = (e=>(e.Users = "users",
            e))(n || {});
            const o = window.PubSub
        },
        70528: function(e, t) {
            "use strict";
            let a = 100;
            function delayedAction(e, t) {
                setTimeout((()=>{
                    e in window.toaster ? (a = 0,
                    window.toaster[e](t)) : (a *= 2,
                    delayedAction(e, t))
                }
                ), a)
            }
            t.Z = window.toaster || {
                add(e) {
                    delayedAction("add", e)
                },
                remove(e) {
                    delayedAction("remove", e)
                }
            }
        },
        10942: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return hasFeatureAccess
                }
            });
            var s = a(20169);
            const n = {}
              , o = document.getElementById(s.GO.NAV_ROOT)
              , hasFeatureAccess = (e,t)=>{
                var a, s;
                if (null == (s = null == (a = window.chesscom) ? void 0 : a.features) ? void 0 : s.includes(e))
                    return !0;
                const r = t || o;
                return n[e] || (n[e] = Boolean(r && r.getAttribute(e))),
                n[e]
            }
        },
        75213: function(e, t, a) {
            "use strict";
            a.d(t, {
                H: function() {
                    return BaseComponent
                }
            });
            var s = a(53291);
            class BaseComponent extends HTMLElement {
                constructor() {
                    super(),
                    this.boardId = null,
                    this.boardInitializedHandler = this.boardInitialized.bind(this)
                }
                static get observedAttributes() {
                    return [s._.ObservedAttributes.BoardId]
                }
                attributeChangedCallback(e) {
                    this.createOnNextTick()
                }
                boardInitialized({detail: e}) {
                    const t = `board-${e}`;
                    this.boardId = t,
                    this.setAttribute(s._.ObservedAttributes.BoardId, t),
                    this.boardReady()
                }
                connectedCallback() {
                    this.createOnNextTick()
                }
                disconnectedCallback() {
                    this.destroy()
                }
                getBoard() {
                    const e = this.boardId && document.getElementById(this.boardId);
                    e && (this.board = e)
                }
                destroy() {
                    var e, t;
                    clearTimeout(this.timeout),
                    this.componentDestroy(),
                    null == (t = null == (e = this.board) ? void 0 : e.removeEventListener) || t.call(e, s._.Events.BoardInitialized, this.boardInitializedHandler)
                }
                createOnNextTick() {
                    clearTimeout(this.timeout),
                    this.timeout = window.setTimeout((()=>{
                        this.create(),
                        this.attributesChanged()
                    }
                    ))
                }
                create() {
                    var e, t, a, n, o;
                    const r = this.getAttribute(s._.ObservedAttributes.BoardId);
                    r && this.boardId === r || (this.boardId = r,
                    this.destroy(),
                    this.componentReady(),
                    this.getBoard(),
                    (null == (e = this.board) ? void 0 : e.game) ? (null == (o = (n = this.board).removeEventListener) || o.call(n, s._.Events.BoardInitialized, this.boardInitializedHandler),
                    this.boardReady()) : null == (a = null == (t = this.board) ? void 0 : t.addEventListener) || a.call(t, s._.Events.BoardInitialized, this.boardInitializedHandler))
                }
                addBoardEventListener(e, t) {
                    var a, s;
                    null == (s = null == (a = this.board) ? void 0 : a.game) || s.on(e, t)
                }
                removeBoardEventListener(e, t) {
                    var a, s;
                    try {
                        null == (s = null == (a = this.board) ? void 0 : a.game) || s.off({
                            type: e,
                            handler: t
                        })
                    } catch (n) {}
                }
                boardReady() {}
                componentReady() {}
                componentDestroy() {}
                attributesChanged() {}
            }
        },
        53291: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                _: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                let s;
                var n;
                let o;
                var r;
                (a = t = e.ObservedAttributes || (e.ObservedAttributes = {})).BoardId = "board-id",
                a.ColorsEnabled = "colors-enabled",
                a.Direction = "direction",
                a.DisableContextMenu = "disable-context-menu",
                a.DisplayType = "display-type",
                a.EngineName = "engine-name",
                a.GameId = "game-id",
                a.IsActive = "is-active",
                a.Lines = "lines",
                a.LinkToExplorer = "link-to-explorer",
                a.MoveListId = "move-list-id",
                a.OpeningIsClickable = "opening-is-clickable",
                a.ExplorerIsClickable = "explorer-is-clickable",
                a.ResultNodeIsSelectable = "result-node-is-selectable",
                a.ScrollContainerId = "scroll-container-id",
                a.TimestampMethod = "timestamp-method",
                a.ToggleTimestamps = "toggle-timestamps",
                a.Color = "color",
                a.UpdateManually = "update-manually",
                a.VerticalLayout = "vertical-layout",
                (n = s = e.Events || (e.Events = {})).BoardInitialized = "board-initialized",
                n.BoardAttached = "board-attached",
                n.BoardDetached = "board-detached",
                (r = o = e.Elements || (e.Elements = {})).ChessBoard = "chess-board",
                r.HorizontalMoveList = "horizontal-move-list",
                r.VerticalMoveList = "vertical-move-list",
                r.CapturedPieces = "captured-pieces",
                r.EcoOpening = "eco-opening",
                r.MoveList = "move-list"
            }
            )(s || (s = {}))
        },
        80510: function(e, t, a) {
            "use strict";
            a.d(t, {
                l: function() {
                    return s
                }
            });
            var s = (e=>(e.Basic = "basic",
            e.Tertiary = "tertiary",
            e.Primary = "primary",
            e.Secondary = "secondary",
            e))(s || {})
        },
        38389: function(e, t, a) {
            "use strict";
            a.d(t, {
                g: function() {
                    return s
                }
            });
            var s, n = a(67104);
            (e=>{
                let t;
                var a;
                let s;
                var o;
                e.Name = "tablebase",
                e.MaxPieces = 7,
                e.Engine = "Syzygy",
                (a = t = e.Results || (e.Results = {})).Win = "Win",
                a.Loss = "Loss",
                a.Draw = "Draw",
                (o = s = e.Errors || (e.Errors = {})).CastlingLegal = "CastlingLegal",
                o.InvalidFen = "InvalidFen",
                o.MaxPieces = "MaxPieces",
                o.Network = "Network",
                e.SummaryUpdateEvents = [n.QY.APIEvents.Move, n.QY.APIEvents.MoveBackward, n.QY.APIEvents.MoveForward, n.QY.APIEvents.SelectLineEnd, n.QY.APIEvents.SelectLineStart, n.QY.APIEvents.ResetToMainLine]
            }
            )(s || (s = {}))
        },
        3804: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        6639: function(e, t, a) {
            "use strict";
            a.d(t, {
                o: function() {
                    return s
                }
            });
            const s = {
                isVisible: !1
            }
        },
        53950: function(e, t, a) {
            "use strict";
            a.d(t, {
                I: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        14610: function(e, t, a) {
            "use strict";
            a.d(t, {
                t: function() {
                    return s
                }
            });
            const s = {
                activeType: null
            }
        },
        39237: function(e, t, a) {
            "use strict";
            a.d(t, {
                d: function() {
                    return s
                }
            });
            var s = (e=>(e.ActiveStateChanged = "ActiveStateChanged",
            e.MarkingsAdded = "MarkingsAdded",
            e.MarkingsCleared = "MarkingsCleared",
            e.MarkingsUpdated = "MarkingsUpdated",
            e))(s || {})
        },
        7616: function(e, t, a) {
            "use strict";
            a.d(t, {
                u: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        27894: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return s
                }
            });
            const s = {
                isVisible: !1,
                position: void 0
            }
        },
        32937: function(e, t, a) {
            "use strict";
            a.d(t, {
                v: function() {
                    return flipActiveChessboard
                }
            });
            var s = a(63641);
            function flipActiveChessboard() {
                const e = (0,
                s.g)();
                e.game.setOptions({
                    flipped: !e.game.getOptions().flipped
                })
            }
        },
        43936: function(e, t, a) {
            "use strict";
            a.d(t, {
                o: function() {
                    return loadBoardStyles
                }
            });
            var s = a(57367)
              , n = a(63754);
            var o = a(594);
            async function loadBoardStyles() {
                o.q.boardStyles || (o.q.boardStyles = await async function fetchBoardStyles() {
                    const {data: e} = await s.Z.get(n.Z.generate("web_themes_data_callback"));
                    return e
                }(),
                o.q.boardStyles.animationTypes = (o.q.boardStyles.animationTypes || []).filter((e=>"battle" !== e.code)))
            }
        },
        33322: function(e, t, a) {
            "use strict";
            a.d(t, {
                q: function() {
                    return updateChessboardLayout
                }
            });
            var s = a(67104)
              , n = a(94952)
              , o = a(87122)
              , r = a(17686);
            var i = a(15870);
            const l = [s.$l.CoordinatesPositions.Off, s.$l.CoordinatesPositions.Inside, s.$l.CoordinatesPositions.Outside];
            var c = a(63641)
              , u = a(32751);
            function onResize() {
                var e;
                null == (e = (0,
                c.g)()) || e.game.resize()
            }
            function updateChessboardLayout() {
                window.removeEventListener("resize", onResize);
                const e = (0,
                c.g)()
                  , t = e ? null : document.getElementById("board")
                  , {animationType: a, coordinates: d, pieceStyle: h, boardStyle: p} = function getOptions(e, t) {
                    var a;
                    if (e)
                        return e.game.getOptions();
                    if (t) {
                        const e = t.getAttribute("data-board-style")
                          , s = t.getAttribute("data-piece-style")
                          , n = Number(null != (a = t.getAttribute("data-coordinates")) ? a : 0);
                        return {
                            boardStyle: e,
                            pieceStyle: s,
                            coordinates: l[n],
                            animationType: "default"
                        }
                    }
                    return (0,
                    u.T)()
                }(e, t)
                  , m = "outside" === d
                  , b = "default" !== a && "none" !== a
                  , g = "real3d" === h
                  , f = h.startsWith("3d");
                (0,
                i.W)(g),
                function togglePseudo3d(e) {
                    (0,
                    o.y)(r.I.BodyClass.Pseudo3d, e)
                }(f),
                (0,
                n.a)(m),
                e ? e.game.resize() : t && (!function styleOutsideCoords(e, t) {
                    if (e === s.$l.CoordinatesPositions.Inside) {
                        const e = document.getElementById("outside-coords-style");
                        if (e && s.NE[t]) {
                            const [a,n] = s.NE[t];
                            e.innerHTML = `.coordinate-light { fill: ${a}; } .coordinate-dark { fill: ${n}; }`
                        }
                    }
                }(d, p),
                t.style.visibility = ""),
                (b || g) && window.addEventListener("resize", onResize)
            }
        },
        20517: function(e, t, a) {
            "use strict";
            a.d(t, {
                f: function() {
                    return s
                }
            });
            const s = {
                animationType: "web_user_game_settings_email_callback_animation_type",
                boardStyle: "web_user_game_settings_email_callback_board_color",
                coordinates: "web_user_game_settings_email_callback_coordinates",
                darkMode: "web_user_game_settings_callback_dark_mode_toggle",
                highlightLegalMoves: "web_user_game_settings_email_callback_show_legal_moves_toggle",
                highlightMoves: "web_user_game_settings_email_callback_highlight_last_move_toggle",
                isWhiteOnBottom: "web_user_game_settings_email_callback_is_white_on_bottom_toggle",
                moveListDisplayType: "web_user_game_settings_email_callback_move_list_display_type",
                moveMethod: "web_user_game_settings_email_callback_move_method",
                pieceStyle: "web_user_game_settings_email_callback_piece",
                playSounds: "web_user_game_settings_email_callback_sound_toggle",
                showTimestamps: "web_user_game_settings_email_callback_show_timestamps",
                soundTheme: "web_user_game_settings_email_callback_sound_theme"
            }
        },
        6454: function(e, t, a) {
            "use strict";
            a.d(t, {
                W: function() {
                    return s
                }
            });
            const s = a(67104).Wc.create()
        },
        54173: function(e, t, a) {
            "use strict";
            a.d(t, {
                f: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        91410: function(e, t, a) {
            "use strict";
            a.d(t, {
                H: function() {
                    return getActiveChessboardElementId
                }
            });
            var s = a(54173);
            function getActiveChessboardElementId() {
                const e = s.f.getActiveChessboardId();
                if (!e)
                    throw new Error("No active chessboard");
                return `board-${e}`
            }
        },
        63641: function(e, t, a) {
            "use strict";
            a.d(t, {
                g: function() {
                    return getActiveChessboard
                }
            });
            var s = a(54173)
              , n = a(594);
            function getActiveChessboard() {
                const e = s.f.getActiveChessboardId();
                if (!e)
                    throw new Error("No active chessboard");
                return function getChessboard(e) {
                    return n.q.chessboards[`${e}`]
                }(e)
            }
        },
        32751: function(e, t, a) {
            "use strict";
            a.d(t, {
                T: function() {
                    return getBoardOptions
                }
            });
            var s = a(594);
            function getBoardOptions() {
                return s.q.boardOptions
            }
        },
        6850: function(e, t, a) {
            "use strict";
            a.d(t, {
                X: function() {
                    return getBoardStyles
                }
            });
            var s = a(594);
            function getBoardStyles() {
                return s.q.boardStyles
            }
        },
        14965: function(e, t, a) {
            "use strict";
            a.d(t, {
                x: function() {
                    return getChessboards
                }
            });
            var s = a(594);
            function getChessboards() {
                return Object.values(s.q.chessboards)
            }
        },
        27376: function(e, t, a) {
            "use strict";
            a.d(t, {
                R: function() {
                    return fetchBoardOptions
                }
            });
            var s = a(25685)
              , n = a(52180)
              , o = a(34620);
            const r = ["off", "inside", "outside"];
            function toCoordinatesValue(e) {
                const t = Number.parseInt(e, 10);
                return Number.isInteger(t) ? r[t] : e
            }
            var i = a(99660)
              , l = a(57367)
              , c = a(63754);
            const u = {}
              , d = {};
            async function fetchBoardOptions() {
                const e = (0,
                i.KZ)();
                if (window.chesscom.features.includes("settings_service_read")) {
                    const t = await (0,
                    s.w)(["board.animation_type", "board.board_style", "board.coordinates", "board.show_legal_moves", "board.highlight_moves", "board.white_always_on_bottom", "board.move_list_style", "board.move_method", "board.pieces_style", "board.play_sounds", "board.sound_theme", "gameplay.show_timestamps"]);
                    return {
                        animationType: (0,
                        n.E)(t["board.animation_type"]),
                        boardSize: "auto",
                        boardStyle: t["board.board_style"],
                        coordinates: t["board.coordinates"],
                        darkMode: e,
                        highlightLegalMoves: t["board.show_legal_moves"],
                        highlightMoves: t["board.highlight_moves"],
                        isWhiteOnBottom: t["board.white_always_on_bottom"],
                        moveListDisplayType: t["board.move_list_style"],
                        moveMethod: (0,
                        o.z)(t["board.move_method"]),
                        pieceStyle: "modern" === t["board.pieces_style"] ? "modern2" : t["board.pieces_style"],
                        playSounds: t["board.play_sounds"],
                        soundTheme: t["board.sound_theme"],
                        showTimestamps: t["gameplay.show_timestamps"]
                    }
                }
                const {data: t} = await async function fetch(e) {
                    var t;
                    const a = l.Z.get(c.Z.generate(e))
                      , s = await a;
                    return u[e] = s,
                    null == (t = d[e]) || t.forEach((t=>t(u[e]))),
                    s
                }("web_user_callback_get_board_settings")
                  , {animationType: a, boardCoords: r, boardSize: h, colorScheme: p, highlightLegalMoves: m, highlightMoves: b, isWhiteOnBottom: g, moveListDisplayType: f, moveMethod: v, pieceStyle: w, playSounds: y, soundTheme: k, showTimestamps: _} = t;
                return {
                    animationType: (0,
                    n.E)(a),
                    boardSize: h,
                    boardStyle: p,
                    coordinates: toCoordinatesValue(r),
                    darkMode: e,
                    highlightLegalMoves: "1" === m,
                    highlightMoves: "1" === b,
                    isWhiteOnBottom: g,
                    moveListDisplayType: f,
                    moveMethod: v,
                    pieceStyle: w,
                    playSounds: "1" === y,
                    soundTheme: k,
                    showTimestamps: Boolean(_)
                }
            }
        },
        594: function(e, t, a) {
            "use strict";
            a.d(t, {
                q: function() {
                    return c
                }
            });
            var s = a(67104);
            var n = a(75696)
              , o = Object.defineProperty
              , r = Object.getOwnPropertySymbols
              , i = Object.prototype.hasOwnProperty
              , l = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? o(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    i.call(t, a) && __defNormalProp(e, a, t[a]);
                if (r)
                    for (var a of r(t))
                        l.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            ;
            const c = {
                soundPlugin: null,
                arrowKeysPlugin: null,
                chessboards: {},
                boardOptions: __spreadValues(__spreadValues({}, function getDefaultBoardOptions() {
                    const {animationType: e, boardStyle: t, coordinates: a, darkMode: n, highlightLegalMoves: o, highlightMoves: r, moveListDisplayType: i, moveMethod: l, pieceStyle: c, playSounds: u, soundTheme: d} = (0,
                    s.jw)();
                    return {
                        animationType: e,
                        boardSize: 0,
                        boardStyle: t,
                        coordinates: a,
                        darkMode: n,
                        highlightLegalMoves: o,
                        highlightMoves: r,
                        isWhiteOnBottom: !1,
                        moveListDisplayType: i,
                        moveMethod: l,
                        pieceStyle: c,
                        playSounds: u,
                        showTimestamps: !0,
                        soundTheme: d
                    }
                }()), n.n.getBoardOptions()),
                boardStyles: null
            }
        },
        75696: function(e, t, a) {
            "use strict";
            a.d(t, {
                n: function() {
                    return d
                }
            });
            var s = a(70125)
              , n = a(61681)
              , o = Object.defineProperty
              , r = Object.getOwnPropertySymbols
              , i = Object.prototype.hasOwnProperty
              , l = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? o(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    i.call(t, a) && __defNormalProp(e, a, t[a]);
                if (r)
                    for (var a of r(t))
                        l.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            ;
            const c = "chessComAppState"
              , u = ["id", "enabled", "allowMarkings", "captureKeyStrokes", "fadeSetup", "fetched", "flipBoard", "flipped", "highlightColor", "highlightOpacity", "moveListContextMenuEnabled", "overlayInAnalysisMode"]
              , d = {
                getBoardOptions() {
                    var e;
                    const t = (0,
                    s.Q)(n.Z.get(c))
                      , a = Object.assign({}, null == (e = null == t ? void 0 : t.board) ? void 0 : e.boardOptions);
                    return u.forEach((e=>{
                        delete a[e]
                    }
                    )),
                    a.highlightColor = void 0,
                    a
                },
                setBoardOptions(e) {
                    var t;
                    let a = (0,
                    s.Q)(n.Z.get(c));
                    (null == (t = null == a ? void 0 : a.board) ? void 0 : t.boardOptions) ? Object.assign(a.board.boardOptions, __spreadValues({}, e)) : a = {
                        board: {
                            boardOptions: __spreadValues({}, e)
                        }
                    },
                    u.forEach((e=>{
                        delete a.board.boardOptions[e]
                    }
                    )),
                    n.Z.set(c, (0,
                    s.P)(a))
                }
            }
        },
        33712: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return loadCountries
                }
            });
            var s = a(19578)
              , n = a(57367)
              , o = a(63754);
            async function loadCountries() {
                if (s.Y.countries)
                    return;
                const {data: e} = await n.Z.get(o.Z.generate("web_classroom_callback_get_countries"));
                s.Y.countries = e
            }
        },
        19578: function(e, t, a) {
            "use strict";
            a.d(t, {
                Y: function() {
                    return s
                }
            });
            const s = {
                countries: null
            }
        },
        86833: function(e, t, a) {
            "use strict";
            a.d(t, {
                a: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        46806: function(e, t, a) {
            "use strict";
            a.d(t, {
                v: function() {
                    return s
                }
            });
            const s = {
                settings: (0,
                a(73253).Gw)()
            }
        },
        30461: function(e, t, a) {
            "use strict";
            a.d(t, {
                R: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        73372: function(e, t, a) {
            "use strict";
            a.d(t, {
                m: function() {
                    return GameArchiveModel
                }
            });
            var s = a(54713)
              , n = a(83857)
              , o = a(77498);
            class GameArchiveModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.baseTime1 = 0,
                    this.daysPerTurn = 0,
                    this.gameType = {
                        code: ""
                    },
                    this.id = 0,
                    this.live = !1,
                    this.timeIncrement = 0,
                    this.user1 = {
                        username: ""
                    },
                    this.user1Rating = 0,
                    this.user1Result = 0,
                    this.user2 = {
                        username: ""
                    },
                    this.user2Rating = 0,
                    this.user2Result = 0,
                    this.vsComputer = !1
                }
                getTimeControl() {
                    return this.live || this.vsComputer ? {
                        baseTime: this.baseTime1 / 10,
                        timeIncrement: this.timeIncrement,
                        timeType: this.baseTime1 > 0 ? "live" : "none"
                    } : {
                        baseTime: this.daysPerTurn,
                        timeIncrement: this.timeIncrement,
                        timeType: "daily"
                    }
                }
                getTimeControlIcon() {
                    return this.vsComputer ? "vs-bot" : (0,
                    n.N)(this.getTimeControl(), this.getGameType())
                }
                getTimeControlLabel() {
                    return (0,
                    o.X)(this.getTimeControl())
                }
                getGameType() {
                    return this.gameType.code
                }
                getResultLabel() {
                    return 1 === this.user1Result ? "1-0" : 1 === this.user2Result ? "0-1" : "Â½-Â½"
                }
                hasWon(e) {
                    return e === this.user1.username && 1 === this.user1Result || e === this.user2.username && 1 === this.user2Result
                }
                hasLost(e) {
                    return e === this.user1.username && 1 === this.user2Result || e === this.user2.username && 1 === this.user1Result
                }
            }
        },
        919: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return o
                }
            });
            var s = a(54713)
              , n = a(73372);
            const o = {
                currentPage: 1,
                games: (0,
                s.BL)(n.m, {
                    key: "id"
                }),
                isLoading: !1,
                totalPages: 0,
                username: "",
                searchParams: {},
                selectedGames: (0,
                s.BL)(n.m, {
                    key: "id"
                })
            }
        },
        58611: function(e, t, a) {
            "use strict";
            a.d(t, {
                R: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        99497: function(e, t, a) {
            "use strict";
            a.d(t, {
                m: function() {
                    return LibraryCollectionMetaModel
                }
            });
            var s = a(54713)
              , n = a(32305);
            class LibraryCollectionMetaModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.currentPage = 1,
                    this.totalCount = 0,
                    this.totalPages = 1,
                    this.pageSize = 10
                }
                getTotalPages() {
                    return Number(this.totalPages)
                }
                getCurrentPage() {
                    return Number(this.currentPage)
                }
                getRange() {
                    const e = this.getCurrentPage()
                      , t = (e - 1) * this.pageSize + 1
                      , a = Math.min(e * this.pageSize, this.totalCount);
                    return (0,
                    n.dW)("%start%-%end% of %total%", {
                        "%start%": t,
                        "%end%": a,
                        "%total%": this.totalCount
                    })
                }
            }
        },
        78830: function(e, t, a) {
            "use strict";
            a.d(t, {
                I: function() {
                    return LibraryCollectionModel
                }
            });
            var s = a(54713)
              , n = a(67104)
              , o = a(58611)
              , r = a(83857)
              , i = a(77498)
              , l = a(32305);
            class LibraryGameModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.id = "",
                    this.pgn = "",
                    this.result = "*",
                    this.gameType = "chess",
                    this.timeControl = null,
                    this.whitePlayer = o.R.getPlayerModel(n.lA.ColorsAsNumbers.White),
                    this.blackPlayer = o.R.getPlayerModel(n.lA.ColorsAsNumbers.Black)
                }
                getTimeControlIcon() {
                    return this.timeControl ? (0,
                    r.N)(this.timeControl, this.gameType) : "chess-board"
                }
                getTimeControlLabel() {
                    return this.timeControl ? (0,
                    i.X)(this.timeControl) : (0,
                    l.dW)("n/a")
                }
                getResult() {
                    return "1/2-1/2" === this.result ? "Â½-Â½" : this.result
                }
            }
            class LibraryCollectionModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.createTime = null,
                    this.customThumbnailUrl = null,
                    this.id = "",
                    this.name = "",
                    this.numberOfItems = 0,
                    this.thumbnail = null,
                    this.gamesMeta = null,
                    this.games = (0,
                    s.BL)(LibraryGameModel, {
                        key: "id"
                    })
                }
                isExpanded() {
                    return Boolean(this.gamesMeta)
                }
            }
        },
        49825: function(e, t, a) {
            "use strict";
            a.d(t, {
                c: function() {
                    return r
                }
            });
            var s = a(54713)
              , n = a(78830)
              , o = a(99497);
            class LibraryCollectionSelectionModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.id = "",
                    this.allGames = !1,
                    this.games = [],
                    this.totalGamesCount = 0
                }
            }
            const r = {
                isSearchingCollections: !1,
                isLoadingCollections: !1,
                sort: null,
                sortParam: 8,
                collections: (0,
                s.BL)(n.I, {
                    key: "id"
                }),
                meta: new o.m,
                selectedCollections: (0,
                s.BL)(LibraryCollectionSelectionModel, {
                    key: "id"
                })
            }
        },
        57308: function(e, t, a) {
            "use strict";
            a.d(t, {
                w: function() {
                    return showAlert
                }
            });
            var s = a(26670)
              , n = a(70528)
              , o = (e=>(e[e.Toaster = 0] = "Toaster",
            e[e.Alert = 1] = "Alert",
            e))(o || {});
            const r = {
                notifications: []
            };
            var i = a(7943);
            function hideNotifications(e) {
                r.notifications.filter((t=>!e || (!e.keys || e.keys.every((e=>t.keys.includes(e)))) && (!e.type || e.type === t.type) && (!e.id || e.id === t.id))).forEach((e=>{
                    e.type === o.Toaster ? n.Z.remove(e.id) : e.type === o.Alert && (0,
                    s.OD)(e.id),
                    (0,
                    i.A)(r.notifications, e)
                }
                ))
            }
            var l = a(54752)
              , c = a.n(l);
            var u = Object.defineProperty
              , d = Object.getOwnPropertySymbols
              , h = Object.prototype.hasOwnProperty
              , p = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? u(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function showAlert(e) {
                !function showNotification(e) {
                    var t, a, i, l, u, d;
                    const h = {
                        type: null != (t = e.type) ? t : o.Alert,
                        keys: null != (a = e.keys) ? a : [],
                        id: c()()
                    };
                    e.unique && hideNotifications({
                        type: e.type,
                        keys: e.keys
                    }),
                    e.duration && setTimeout(hideNotifications, e.duration, {
                        id: h.id
                    }),
                    h.type === o.Toaster ? null == (u = n.Z) || u.add({
                        id: h.id,
                        duration: e.duration,
                        content: null != (i = e.content) ? i : "",
                        theme: null != (l = e.theme) ? l : "info",
                        icon: e.icon,
                        links: e.links,
                        avatarUrl: e.avatarUrl
                    }) : h.type === o.Alert && (0,
                    s.el)({
                        id: h.id,
                        type: e.theme || "info",
                        message: null != (d = e.content) ? d : ""
                    }),
                    r.notifications.push(h)
                }(((e,t)=>{
                    for (var a in t || (t = {}))
                        h.call(t, a) && __defNormalProp(e, a, t[a]);
                    if (d)
                        for (var a of d(t))
                            p.call(t, a) && __defNormalProp(e, a, t[a]);
                    return e
                }
                )({
                    type: o.Alert
                }, e))
            }
        },
        99208: function(e, t, a) {
            "use strict";
            a.d(t, {
                x: function() {
                    return showError
                }
            });
            var s = a(57308);
            function showError(e) {
                (0,
                s.w)({
                    duration: 1e4,
                    theme: "error",
                    content: e
                })
            }
        },
        34497: function(e, t, a) {
            "use strict";
            a.d(t, {
                T: function() {
                    return showHttpError
                }
            });
            var s = a(99208)
              , n = a(14164);
            function showHttpError(e) {
                (0,
                s.x)((0,
                n.i)(e))
            }
        },
        86982: function(e, t, a) {
            "use strict";
            a.d(t, {
                i: function() {
                    return clearHint
                }
            });
            var s = a(24711)
              , n = a(44975)
              , o = a(71001);
            function clearHint() {
                n.V.getGameAPI().markings.removeAllWhere({
                    tags: [s.Q]
                }),
                o.D.hint = void 0
            }
        },
        54987: function(e, t, a) {
            "use strict";
            a.d(t, {
                f: function() {
                    return endRetry
                }
            });
            var s = a(86982)
              , n = a(32726)
              , o = a(71001);
            function endRetry() {
                if ((0,
                s.i)(),
                !o.D.activeMove)
                    return;
                const e = (0,
                n.Y)();
                (null == e ? void 0 : e.san) && !e.attemptMoveKey && o.D.activeMove && o.D.collection.remove(o.D.activeMove),
                o.D.activeMove = void 0
            }
        },
        45570: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return startRetry
                }
            });
            var s = a(44975)
              , n = a(71001)
              , o = a(9894);
            async function startRetry(e, t=!1) {
                const a = s.V.getGameAPI();
                n.D.activeMove = e;
                n.D.collection.find(e) && n.D.collection.remove(e),
                t && n.D.collection.update({
                    move: e,
                    viewedAnswer: !0
                });
                const r = e - (t ? 1 : 2);
                a.selectNode(0, r),
                await (0,
                o.D)(500),
                t || a.selectNode(0, r + 1)
            }
        },
        15100: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return toggleHint
                }
            });
            var s = a(86982);
            const n = "#96be46"
              , o = "#1baca6";
            var r = a(24711)
              , i = a(44975)
              , l = a(71001)
              , c = (e=>(e.Arrow = "arrow",
            e.Square = "square",
            e))(c || {})
              , u = a(73730);
            function toggleHint(e) {
                if (!l.D.activeMove)
                    return;
                const t = i.V.getGameAPI()
                  , {from: a, to: d} = (0,
                u.H)(e);
                return l.D.hint === c.Arrow ? (0,
                s.i)() : l.D.hint === c.Square ? function markArrowAndUnmarkSquare() {
                    (0,
                    s.i)(),
                    l.D.hint = c.Arrow,
                    t.markings.addOne({
                        data: {
                            color: n,
                            opacity: .8,
                            from: a,
                            to: d
                        },
                        tags: [r.Q],
                        type: "arrow"
                    })
                }() : function markSquare() {
                    l.D.hint = c.Square,
                    t.markings.addOne({
                        data: {
                            color: o,
                            opacity: .5,
                            square: a
                        },
                        tags: [r.Q],
                        type: "highlight"
                    })
                }()
            }
        },
        81786: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return viewAnswer
                }
            });
            var s = a(45570)
              , n = a(44975)
              , o = a(73730)
              , r = a(9894);
            async function viewAnswer(e, t) {
                const {from: a, to: i} = (0,
                o.H)(t)
                  , l = n.V.getGameAPI();
                await (0,
                s.F)(e, !0),
                await (0,
                r.D)(350),
                l.move({
                    from: a,
                    to: i,
                    userGenerated: !0
                })
            }
        },
        24711: function(e, t, a) {
            "use strict";
            a.d(t, {
                Q: function() {
                    return s
                }
            });
            const s = "retriesMarkings"
        },
        44975: function(e, t, a) {
            "use strict";
            a.d(t, {
                V: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        56950: function(e, t, a) {
            "use strict";
            a.d(t, {
                m: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        32726: function(e, t, a) {
            "use strict";
            a.d(t, {
                Y: function() {
                    return getActiveRetry
                }
            });
            var s = a(71001);
            function getActiveRetry() {
                return s.D.collection.find((e=>e.move === s.D.activeMove))
            }
        },
        74338: function(e, t, a) {
            "use strict";
            a.d(t, {
                q: function() {
                    return isRetryActive
                }
            });
            var s = a(71001);
            function isRetryActive() {
                return Boolean(s.D.activeMove)
            }
        },
        71001: function(e, t, a) {
            "use strict";
            a.d(t, {
                D: function() {
                    return o
                }
            });
            var s = a(54713)
              , n = a(67104);
            class RetryModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.color = n.lA.ColorsAsNumbers.White,
                    this.fen = "",
                    this.move = 0,
                    this.parentMoveKey = "",
                    this.attemptMoveKey = "",
                    this.san = "",
                    this.viewedAnswer = !1
                }
            }
            const o = {
                activeMove: void 0,
                hint: void 0,
                collection: (0,
                s.BL)(RetryModel, {
                    key: "move"
                })
            }
        },
        88017: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return s
                }
            });
            var s = (e=>(e.RetryCompleted = "RetryCompleted",
            e))(s || {})
        },
        71919: function(e, t, a) {
            "use strict";
            a.d(t, {
                T: function() {
                    return showShareModal
                }
            });
            var s = a(19579)
              , n = Object.defineProperty
              , o = Object.defineProperties
              , r = Object.getOwnPropertyDescriptors
              , i = Object.getOwnPropertySymbols
              , l = Object.prototype.hasOwnProperty
              , c = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? n(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    l.call(t, a) && __defNormalProp(e, a, t[a]);
                if (i)
                    for (var a of i(t))
                        c.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            ;
            async function showShareModal(e={}) {
                var t, a;
                s.h.options = __spreadValues((t = __spreadValues({}, s.h.options),
                a = {
                    shareUrl: window.location.href
                },
                o(t, r(a))), e),
                s.h.isVisible = !0
            }
        },
        90632: function(e, t, a) {
            "use strict";
            a.d(t, {
                z: function() {
                    return s
                }
            });
            var s = (e=>(e.Embed = "embed",
            e.Event = "event",
            e.Gif = "gif",
            e.Image = "image",
            e.Pgn = "pgn",
            e))(s || {})
        },
        90607: function(e, t, a) {
            "use strict";
            a.d(t, {
                v: function() {
                    return s
                }
            });
            const s = {
                initialTab: a(90632).z.Image,
                shareUrl: window.location.href
            }
        },
        19579: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return s
                }
            });
            const s = {
                options: a(90607).v,
                isVisible: !1
            }
        },
        26888: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return stopPlayingThroughLine
                }
            });
            var s = a(23344);
            function stopPlayingThroughLine() {
                clearInterval(s.I.interval),
                s.I.interval = void 0
            }
        },
        91857: function(e, t, a) {
            "use strict";
            a.d(t, {
                $: function() {
                    return s
                }
            });
            const s = (0,
            a(54713).kr)()
        },
        23344: function(e, t, a) {
            "use strict";
            a.d(t, {
                I: function() {
                    return n
                }
            });
            var s = a(54713);
            class LineModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.length = 0,
                    this.number = 0,
                    this.parent = {
                        line: 0,
                        move: 0
                    }
                }
            }
            const n = {
                openLines: (0,
                s.BL)(LineModel, {
                    key: "number"
                }),
                interval: void 0
            }
        },
        44014: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        642: function(e, t, a) {
            "use strict";
            a.d(t, {
                _: function() {
                    return s
                }
            });
            var s = (e=>(e.ActiveStateChanged = "ActiveStateChanged",
            e.ThreatsAdded = "ThreatsAdded",
            e.ThreatsCleared = "ThreatsCleared",
            e))(s || {})
        },
        25685: function(e, t, a) {
            "use strict";
            a.d(t, {
                w: function() {
                    return fetchSettings
                }
            });
            var s = a(28598);
            async function fetchSettings(e) {
                const {data: t} = await s.pS.fetch({
                    method: "get",
                    path: "users/me",
                    service: s.AM.Settings,
                    params: {
                        include: e.join(",")
                    }
                });
                return t
            }
        },
        3510: function(e, t, a) {
            "use strict";
            a.d(t, {
                z: function() {
                    return saveSettings
                }
            });
            var s = a(28598);
            async function saveSettings(e) {
                window.chesscom.features.includes("settings_service_data_sync") && Object.keys(e).length > 0 && await s.pS.publish({
                    method: "post",
                    service: s.AM.Settings,
                    path: "users/me",
                    data: e
                })
            }
        },
        78719: function(e, t, a) {
            "use strict";
            function getUserFromContext() {
                var e;
                return null == (e = window.context) ? void 0 : e.user
            }
            a.d(t, {
                x: function() {
                    return getUserFromContext
                }
            })
        },
        60803: function(e, t, a) {
            "use strict";
            function getECOPath() {
                return `${self.location.origin}${window.Config.pathToEcoJson}`
            }
            a.d(t, {
                K: function() {
                    return getECOPath
                }
            })
        },
        73730: function(e, t, a) {
            "use strict";
            function getFromAndTo(e) {
                return {
                    from: e.substring(0, 2),
                    to: e.substring(2, 4)
                }
            }
            a.d(t, {
                H: function() {
                    return getFromAndTo
                }
            })
        },
        43153: function(e, t, a) {
            "use strict";
            function getMoveLan(e) {
                var t;
                return `${e.from}${e.to}${null != (t = e.promotion) ? t : ""}`
            }
            a.d(t, {
                S: function() {
                    return getMoveLan
                }
            })
        },
        70125: function(e, t, a) {
            "use strict";
            a.d(t, {
                Q: function() {
                    return parse
                },
                P: function() {
                    return stringify
                }
            });
            const parse = (e,...t)=>JSON.parse(e, ...t)
              , stringify = (e,...t)=>JSON.stringify(e, ...t)
        },
        6159: function(e, t, a) {
            "use strict";
            a.d(t, {
                M: function() {
                    return formatBoardSetting
                }
            });
            const formatBoardSetting = (e,t)=>[e, transformValue(e, t)]
              , transformValue = (e,t)=>"coordinates" === e ? transformCoordinatesValue(t) : t
              , transformCoordinatesValue = e=>["off", "inside", "outside"].includes(e) ? ["off", "inside", "outside"].indexOf(e) : e
        },
        11721: function(e, t, a) {
            "use strict";
            a.d(t, {
                R: function() {
                    return formatBoardOptionsForSettingsService
                }
            });
            var s = a(52180)
              , n = a(34620);
            const formatBoardOptionsForSettingsService = e=>Object.entries(e).reduce(((e,[t,a])=>{
                const [s,n] = formatSetting(t, a);
                return e[s] = n,
                e
            }
            ), {})
              , formatSetting = (e,t)=>{
                const a = transformKey(e);
                return [a, transformValue(a, t)]
            }
              , transformKey = e=>{
                switch (e) {
                case "animationType":
                    return "board.animation_type";
                case "boardStyle":
                    return "board.board_style";
                case "coordinates":
                    return "board.coordinates";
                case "highlightLegalMoves":
                    return "board.show_legal_moves";
                case "highlightMoves":
                    return "board.highlight_moves";
                case "isWhiteOnBottom":
                    return "board.white_always_on_bottom";
                case "moveListDisplayType":
                    return "board.move_list_style";
                case "moveMethod":
                    return "board.move_method";
                case "pieceStyle":
                    return "board.pieces_style";
                case "playSounds":
                    return "board.play_sounds";
                case "soundTheme":
                    return "board.sound_theme";
                case "showTimestamps":
                    return "gameplay.show_timestamps";
                default:
                    return e
                }
            }
              , transformValue = (e,t)=>{
                switch (e) {
                case "board.pieces_style":
                    return "modern2" === t ? "modern" : t;
                case "board.animation_type":
                    return (0,
                    s.C)(t);
                case "board.move_method":
                    return (0,
                    n.N)(t);
                case "board.coordinates":
                    return ["off", "inside", "outside"].includes(t) ? t : ["off", "inside", "outside"][t];
                default:
                    return t
                }
            }
        },
        52180: function(e, t, a) {
            "use strict";
            function fromAnimationType(e) {
                return e && "default" !== e ? e : "medium"
            }
            function toAnimationType(e) {
                return e && "medium" !== e && "battle" !== e ? e : "default"
            }
            a.d(t, {
                C: function() {
                    return fromAnimationType
                },
                E: function() {
                    return toAnimationType
                }
            })
        },
        34620: function(e, t, a) {
            "use strict";
            function toBoardMoveMethods(e) {
                switch (e) {
                case "drag_only":
                    return "drag-only";
                case "click":
                    return "click";
                default:
                    return "drag"
                }
            }
            function fromBoardMoveMethods(e) {
                switch (e) {
                case "click":
                    return "click";
                case "drag-only":
                    return "drag_only";
                default:
                    return "drag"
                }
            }
            a.d(t, {
                z: function() {
                    return toBoardMoveMethods
                },
                N: function() {
                    return fromBoardMoveMethods
                }
            })
        },
        92866: function(e, t, a) {
            "use strict";
            a.d(t, {
                Fl: function() {
                    return s.Fl
                },
                RC: function() {
                    return s.RC
                },
                aZ: function() {
                    return s.aZ
                },
                Y3: function() {
                    return s.Y3
                },
                Jd: function() {
                    return s.Jd
                },
                bv: function() {
                    return s.bv
                },
                Ah: function() {
                    return s.Ah
                },
                qj: function() {
                    return s.qj
                },
                iH: function() {
                    return s.iH
                },
                YP: function() {
                    return s.YP
                },
                m0: function() {
                    return s.m0
                }
            });
            a(31663);
            var s = a(90835);
            t.ZP = s.ZP
        },
        31663: function(e, t, a) {
            "use strict";
            a.r(t),
            a.d(t, {
                default: function() {
                    return d
                }
            });
            var s = a(19958)
              , n = a(70538)
              , o = a(90835)
              , r = {
                ads: JSON.parse('{"sidebar":{"upgradeLink":"ads-sidebar-upgrade-link"}}'),
                chat: JSON.parse('{"chatMessage":{"avatar":"chat-message-avatar","messageText":"chat-message-text"}}'),
                comments: JSON.parse('{"postDeleteIcon":"comment-post-delete-icon"}'),
                confirmPopover: JSON.parse('{"buttons":{"cancelButton":"confirm-popover-cancel-button","yesButton":"confirm-popover-yes-button"}}'),
                connect: JSON.parse('{"blogs":{"title":"wat_blogs-title"}}'),
                engine: JSON.parse('{"moveFeedback":{"topLine":"move-feedback-top-line"}}'),
                explorer: JSON.parse('{"mainControls":{"analysis":"explorer-main-controls-analysis","moveBack":"explorer-main-controls-move-back","moveForward":"explorer-main-controls-move-forward","practice":"explorer-main-controls-practice","reset":"explorer-main-controls-reset"},"gameFilters":{"chooseGame":"explorer-game-filters-choose-game","gameType":"explorer-game-filters-game-type","mastersSearch":"explorer-game-filters-masters-search"},"moveListSection":{"searchUrl":"explorer-move-list-section-search-url","suggestedMoves":{"items":"explorer-suggested-moves-items","moveType":"explorer-suggested-moves-move-type","suggestedBlack":"explorer-suggested-moves-suggested-black","suggestedDraw":"explorer-suggested-moves-suggested-draw","suggestedWhite":"explorer-suggested-moves-suggested-white","totalGames":"explorer-suggested-moves-total-games"}},"shareButtons":{"download":"explorer-share-buttons-download","share":"explorer-share-buttons-share","shareFromFilters":"explorer-share-buttons-share-from-filters"}}'),
                gameOverModal: JSON.parse('{"userWhite":"modal-game-over-user-white","userBlack":"modal-game-over-user-black","score":"modal-game-over-score","avatar":"modal-game-over-avatar","headerTitle":"modal-game-over-header-title","headerSubtitle":"modal-game-over-header-subtitle","headerIcon":"modal-game-over-header-icon"}'),
                messages: JSON.parse('{"listItem":"messages-message-list-item","newMessageButton":"messages-new-message-button","archiveAllConversationsBtn":"messages-archive-all-conversations-button","deleteAllConversationsBtn":"messages-delete-all-conversations-button","listItemUsernameText":"messages-message-list-item-username-text","listItemFlag":"messages-message-list-item-flag","listItemMessage":"messages-message-list-item-message","conversationItem":"messages-message-conversation-item","conversationItemAvatar":"messages-message-conversation-item-avatar","inboxTabButton":"messages-inbox-tab-button","unreadTabButton":"messages-unread-tab-button","archiveTabButton":"messages-archive-tab-button","archiveConversationButton":"messages-archive-conversation-button","deleteConversationButton":"messages-delete-conversation-button","restoreConversationButton":"messages-restore-conversation-button","modalCancelButton":"messages-modal-cancel-button","modalConfirmButton":"messages-modal-confirm-button","unreadMessagesCount":"messages-unread-messages-count"}'),
                modals: JSON.parse('{"firstTimeButton":"modal-first-time-button"}'),
                practice: JSON.parse('{"gameItem":"practice-game-item"}'),
                puzzles: JSON.parse('{"dailyPuzzlePage":{"date":"daily-puzzle-date","hideCalendar":"daily-puzzle-hideCalendar","hint":"daily-puzzle-hint","month":"daily-puzzle-month","nextMonth":"daily-puzzle-nextMonth","nextPuzzle":"daily-puzzle-nextPuzzle","previousMonth":"daily-puzzle-previousMonth","previousPuzzle":"daily-puzzle-previousPuzzle","share":"daily-puzzle-share","showCalendar":"daily-puzzle-showCalendar","solution":"daily-puzzle-solution","successModal":"daily-puzzle-successModal","title":"daily-puzzle-title","tryAgain":"daily-puzzle-tryAgain"},"modals":{"closeButton":"puzzles-rated-settings-closeBtn","firstTimeButton":"modal-first-time-button","score":"puzzles-modal-score","select":"puzzles-modal-select","settingsModal":"puzzles-modal-settingsModal","showTimerInput":"puzzles-modal-showTimerInput","statValue":"puzzles-modal-stat-value"},"buttons":{"settings":"puzzles-settings-button","comments":"puzzles-comments-button","download":"puzzles-download-button","share":"puzzles-share-button","playVsComputer":"puzzles-playVsComputer-button"},"ratedPage":{"animatedNumber":"puzzles-rated-animatedNumber","ratingDelta":"puzzles-rated-ratingDelta","recentAttemptsChart":"recent-attempts-chart","speedBonus":"puzzles-rated-speedBonus","streakInfo":"puzzles-rated-streakInfo","themeControlsComponent":"puzzles-rated-themeControlsComponent","themeControlsSuggestions":"puzzles-rated-themeControlsSuggestions","timer":"rated-timer","timerClockIcon":"puzzles-rated-timerClockIcon","toMoveSectionHeading":"to-move-section-heading","usersRating":"users-rating","userAvatar":"user-avatar","buttons":{"analysis":"analysis-btn","back":"arrow-back-button","hintMove":"hint-move-button","nextMove":"next-move-arrow","nextPuzzle":"next-puzzle-btn","previousMove":"previous-move-arrow","restartPuzzle":"restart-puzzle-btn","showSolution":"show-solution-button"},"endPuzzleStats":{"attempts":"puzzles-rated-endPuzzleStats-attempts","passRate":"puzzles-rated-endPuzzleStats-passRate","rating":"puzzles-rated-endPuzzleStats-rating","speedBonus":"puzzles-rated-endPuzzleStats-speedBonus","targetTime":"puzzles-rated-endPuzzleStats-targetTime"}}}'),
                quickAnalysis: JSON.parse('{"gameReviewButton":"quick-analysis-game-review-button","analysisButton":"quick-analysis-analysis-button"}'),
                shareMenu: JSON.parse('{"shareLinkInput":"share-menu-share-link-input"}'),
                vsPersonalities: JSON.parse('{"saveToArchiveButton":"vs-personalities-save-to-archive-button","saveToArchiveLabel":"vs-personalities-save-to-archive-label"}')
            }
              , i = Object.defineProperty
              , l = Object.getOwnPropertySymbols
              , c = Object.prototype.hasOwnProperty
              , u = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? i(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            n.Z.use(o.ZP),
            n.Z.config.productionTip = !1,
            n.Z.mixin(s.Z),
            ["prod", "staging"].includes("dev") || (n.Z.prototype.$cy = ((e,t)=>{
                for (var a in t || (t = {}))
                    c.call(t, a) && __defNormalProp(e, a, t[a]);
                if (l)
                    for (var a of l(t))
                        u.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            )({}, r));
            var d = n.Z
        },
        41128: function(e, t, a) {
            "use strict";
            a.d(t, {
                U: function() {
                    return getAmplitude
                }
            });
            var s = a(35750);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            let n;
            function getAmplitude() {
                var e;
                return (null == (e = window.chesscom) ? void 0 : e.amplitude) ? window.chesscom.amplitude : (n || (n = a.e(790).then(a.t.bind(a, 63790, 23)).then((({default: e})=>{
                    var t, a, n, o;
                    const {user: r, amplitudeKey: i} = window.context || {}
                      , l = r && !r.isGuest ? r.id : null
                      , c = {
                        includeUtm: !0,
                        includeReferrer: !0,
                        includeGclid: !0,
                        saveParamsReferrerOncePerSession: !1
                    };
                    if (null == (a = null == (t = window.chesscom) ? void 0 : t.features) ? void 0 : a.includes("amplitude_domain_proxy")) {
                        ["www.chess.com", "www.chess-4.com"].includes(window.location.hostname) && (c.apiEndpoint = window.location.hostname.replace("www", "amplitude"))
                    }
                    if (e.getInstance().init(i, null, c),
                    e.getInstance().setUserId(l),
                    null == (o = null == (n = window.chesscom) ? void 0 : n.features) ? void 0 : o.includes("marketing_middleware_serverside_device_id_generation")) {
                        const t = (0,
                        s.ej)("me");
                        if (t) {
                            const a = JSON.parse(t);
                            e.getInstance().setDeviceId(a.deviceId)
                        }
                    }
                    return window.chesscom.amplitude = e,
                    e
                }
                ))),
                n)
            }
        },
        75700: function(e, t, a) {
            "use strict";
            a.d(t, {
                K: function() {
                    return logEvent
                }
            });
            var s = a(41128)
              , n = a(45898).Z;
            async function logEvent(e, t, a, o) {
                const r = await (0,
                s.U)();
                await async function logUserProperties(e) {
                    const t = await (0,
                    s.U)();
                    null != e && t.getInstance().setUserProperties(e)
                }(a),
                await async function incrementUserProperties(e) {
                    const t = await (0,
                    s.U)();
                    if (null == e)
                        return;
                    const a = new t.Identify;
                    n(e, ((e,t)=>{
                        a.add(t, e)
                    }
                    )),
                    t.getInstance().identify(a)
                }(o),
                r.getInstance().logEvent(e, t || {})
            }
        },
        57463: function(e, t, a) {
            "use strict";
            var s = a(41128)
              , n = a(75700);
            t.Z = {
                init: s.U,
                logEvent: n.K
            }
        },
        7943: function(e, t, a) {
            "use strict";
            a.d(t, {
                A: function() {
                    return removeFromArray
                }
            });
            var s = a(3775);
            function removeFromArray(e, t) {
                const a = (0,
                s.mf)(t) ? e.findIndex(t) : e.indexOf(t);
                -1 !== a && e.splice(a, 1)
            }
        },
        37481: function(e, t, a) {
            "use strict";
            a.d(t, {
                q: function() {
                    return sortArray
                }
            });
            var s = a(3775);
            const getValue = (e,t)=>(0,
            s.HD)(t) && (0,
            s.Kn)(e) ? e[t] : (0,
            s.mf)(t) ? t(e) : void 0
              , compareValues = (e,t,a,s)=>{
                const n = getValue(e, a)
                  , o = getValue(t, a);
                return null == n ? 1 : null == o ? -1 : n > o ? "desc" === s ? -1 : 1 : n < o ? "desc" === s ? 1 : -1 : 0
            }
            ;
            function sortArray(e, t, a) {
                const n = (0,
                s.kJ)(t) ? t : [t]
                  , o = (0,
                s.kJ)(a) ? a : [a]
                  , r = e.slice(0);
                return r.sort(((e,t)=>{
                    let a = 0;
                    for (let s = 0; s < n.length && 0 === a; s++)
                        a = compareValues(e, t, n[s], o[s]);
                    return a
                }
                )),
                r
            }
        },
        86910: function(e, t, a) {
            "use strict";
            a.d(t, {
                n: function() {
                    return generateUrl
                }
            });
            var s = {
                "bundles/web/images/game-preview-loading.png": "bundles/web/images/game-preview-loading.png",
                "bundles/web/images/image-default.svg": "bundles/web/images/image-default.svg",
                "bundles/web/images/noavatar_l.gif": "bundles/web/images/noavatar_l.gif",
                "bundles/web/images/svg/tic.svg": "bundles/web/images/svg/tic.svg",
                "bundles/web/images/svg/white-tic.svg": "bundles/web/images/svg/white-tic.svg",
                "bundles/web/images/user-image.svg": "bundles/web/images/user-image.svg",
                "bundles/web/images/web/learn-to-play.png": "bundles/web/images/web/learn-to-play.png",
                "bundles/web/images/web/tablet.jpg": "bundles/web/images/web/tablet.jpg",
                "bundles/web/images/webgl_data/2d/arcade/active-field-black-glow.png": "bundles/web/images/webgl_data/2d/arcade/active-field-black-glow.png",
                "bundles/web/images/webgl_data/2d/arcade/active-field-white-glow.png": "bundles/web/images/webgl_data/2d/arcade/active-field-white-glow.png",
                "bundles/web/images/webgl_data/2d/arcade/capture-lightning-black.json": "bundles/web/images/webgl_data/2d/arcade/capture-lightning-black.json",
                "bundles/web/images/webgl_data/2d/arcade/capture-lightning-black.png": "bundles/web/images/webgl_data/2d/arcade/capture-lightning-black.png",
                "bundles/web/images/webgl_data/2d/arcade/capture-lightning-white.json": "bundles/web/images/webgl_data/2d/arcade/capture-lightning-white.json",
                "bundles/web/images/webgl_data/2d/arcade/capture-lightning-white.png": "bundles/web/images/webgl_data/2d/arcade/capture-lightning-white.png",
                "bundles/web/images/webgl_data/2d/arcade/check-lightning-small.json": "bundles/web/images/webgl_data/2d/arcade/check-lightning-small.json",
                "bundles/web/images/webgl_data/2d/arcade/check-lightning-small.png": "bundles/web/images/webgl_data/2d/arcade/check-lightning-small.png",
                "bundles/web/images/webgl_data/2d/arcade/check-lightning.json": "bundles/web/images/webgl_data/2d/arcade/check-lightning.json",
                "bundles/web/images/webgl_data/2d/arcade/check-lightning.png": "bundles/web/images/webgl_data/2d/arcade/check-lightning.png",
                "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-black.json": "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-black.json",
                "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-black.png": "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-black.png",
                "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-white.json": "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-white.json",
                "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-white.png": "bundles/web/images/webgl_data/2d/arcade/check-mate-lightning-white.png",
                "bundles/web/images/webgl_data/2d/arcade/legal-move-arcade-black.png": "bundles/web/images/webgl_data/2d/arcade/legal-move-arcade-black.png",
                "bundles/web/images/webgl_data/2d/arcade/legal-move-arcade-white.png": "bundles/web/images/webgl_data/2d/arcade/legal-move-arcade-white.png",
                "bundles/web/images/webgl_data/2d/arcade/lightning-horizontal.png": "bundles/web/images/webgl_data/2d/arcade/lightning-horizontal.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-black.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-black.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-black.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-black.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-white.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-white.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-white.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-large-white.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-black.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-black.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-black.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-black.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-white.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-white.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-white.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-medium-white.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-black.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-black.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-black.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-black.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-white.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-white.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-white.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-regular-white.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-black.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-black.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-black.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-black.png",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-white.json": "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-white.json",
                "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-white.png": "bundles/web/images/webgl_data/2d/arcade/move-lightning-small-white.png",
                "bundles/web/images/webgl_data/2d/arcade/select-lightning-black.json": "bundles/web/images/webgl_data/2d/arcade/select-lightning-black.json",
                "bundles/web/images/webgl_data/2d/arcade/select-lightning-black.png": "bundles/web/images/webgl_data/2d/arcade/select-lightning-black.png",
                "bundles/web/images/webgl_data/2d/arcade/select-lightning-white.json": "bundles/web/images/webgl_data/2d/arcade/select-lightning-white.json",
                "bundles/web/images/webgl_data/2d/arcade/select-lightning-white.png": "bundles/web/images/webgl_data/2d/arcade/select-lightning-white.png",
                "bundles/web/images/webgl_data/2d/capture-dust.json": "bundles/web/images/webgl_data/2d/capture-dust.json",
                "bundles/web/images/webgl_data/2d/capture-dust.png": "bundles/web/images/webgl_data/2d/capture-dust.png",
                "bundles/web/images/webgl_data/2d/dust-big.json": "bundles/web/images/webgl_data/2d/dust-big.json",
                "bundles/web/images/webgl_data/2d/dust-big.png": "bundles/web/images/webgl_data/2d/dust-big.png",
                "bundles/web/images/webgl_data/2d/dust-regular.json": "bundles/web/images/webgl_data/2d/dust-regular.json",
                "bundles/web/images/webgl_data/2d/dust-regular.png": "bundles/web/images/webgl_data/2d/dust-regular.png",
                "bundles/web/images/webgl_data/2d/dust-small.json": "bundles/web/images/webgl_data/2d/dust-small.json",
                "bundles/web/images/webgl_data/2d/dust-small.png": "bundles/web/images/webgl_data/2d/dust-small.png",
                "bundles/web/images/webgl_data/2d/field-shadow.png": "bundles/web/images/webgl_data/2d/field-shadow.png",
                "bundles/web/images/webgl_data/2d/hand.json": "bundles/web/images/webgl_data/2d/hand.json",
                "bundles/web/images/webgl_data/2d/hand.png": "bundles/web/images/webgl_data/2d/hand.png",
                "bundles/web/images/webgl_data/3d/board/board.json": "bundles/web/images/webgl_data/3d/board/board.json",
                "bundles/web/images/webgl_data/3d/board/textures/board_8_bit.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_8_bit.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_8_bit_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_8_bit_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_bases.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_bases.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_bases_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_bases_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_blackwhite.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_blackwhite.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_blackwhite_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_blackwhite_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_blue.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_blue.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_blue_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_blue_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_brown.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_brown.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_brown_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_brown_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_bubblegum.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_bubblegum.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_bubblegum_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_bubblegum_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_burled_wood.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_burled_wood.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_burled_wood_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_burled_wood_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_dark_wood.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_dark_wood.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_dark_wood_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_dark_wood_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_dash.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_dash.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_dash_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_dash_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_glass.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_glass.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_glass_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_glass_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_graffiti.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_graffiti.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_graffiti_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_graffiti_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_green.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_green.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_green_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_green_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_grey.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_grey.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_grey_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_grey_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_icy_sea.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_icy_sea.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_icy_sea_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_icy_sea_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_light.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_light.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_light_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_light_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_lolz.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_lolz.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_lolz_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_lolz_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_marble.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_marble.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_marble_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_marble_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_marbleblue.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_marbleblue.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_marbleblue_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_marbleblue_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_marblebrown.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_marblebrown.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_marblebrown_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_marblebrown_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_marblegreen.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_marblegreen.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_marblegreen_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_marblegreen_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_metal.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_metal.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_metal_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_metal_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_neon.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_neon.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_neon_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_neon_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_newspaper.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_newspaper.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_newspaper_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_newspaper_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_orange.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_orange.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_orange_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_orange_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_overlay.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_overlay.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_overlay_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_overlay_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_parchment.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_parchment.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_parchment_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_parchment_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_pink.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_pink.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_pink_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_pink_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_purple.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_purple.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_purple_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_purple_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_red.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_red.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_red_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_red_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_sand.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_sand.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_sand_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_sand_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_shadow.png": "bundles/web/images/webgl_data/3d/board/textures/board_shadow.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_sky.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_sky.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_sky_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_sky_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_stone.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_stone.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_stone_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_stone_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_tan.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_tan.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_tan_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_tan_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_tournament.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_tournament.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_tournament_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_tournament_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_translucent.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_translucent.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_translucent_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_translucent_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_walnut.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_walnut.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_walnut_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_walnut_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_winboard.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_winboard.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_winboard_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_winboard_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_wood.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_wood.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_wood_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_wood_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_wooddark.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_wooddark.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_wooddark_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_wooddark_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_woodlight.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_woodlight.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_woodlight_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_woodlight_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_woodmid.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_woodmid.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_woodmid_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_woodmid_notation.png",
                "bundles/web/images/webgl_data/3d/board/textures/board_woodolive.jpg": "bundles/web/images/webgl_data/3d/board/textures/board_woodolive.jpg",
                "bundles/web/images/webgl_data/3d/board/textures/board_woodolive_notation.png": "bundles/web/images/webgl_data/3d/board/textures/board_woodolive_notation.png",
                "bundles/web/images/webgl_data/3d/marking_arrow_L.json": "bundles/web/images/webgl_data/3d/marking_arrow_L.json",
                "bundles/web/images/webgl_data/3d/marking_arrow_straight.json": "bundles/web/images/webgl_data/3d/marking_arrow_straight.json",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/bishop.json": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/bishop.json",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/bishop_promotion_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/bishop_promotion_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/bishop_promotion_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/bishop_promotion_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/king.json": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/king.json",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/knight.json": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/knight.json",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/knight_promotion_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/knight_promotion_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/knight_promotion_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/knight_promotion_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/pawn.json": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/pawn.json",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/queen.json": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/queen.json",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/queen_promotion_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/queen_promotion_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/queen_promotion_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/queen_promotion_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/rook.json": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/rook.json",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/rook_promotion_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/rook_promotion_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/rook_promotion_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/rook_promotion_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/bishop_shadow.png": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/bishop_shadow.png",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/negx.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/negx.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/negy.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/negy.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/negz.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/negz.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/posx.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/posx.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/posy.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/posy.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/posz.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/envmap/posz.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/king_shadow.png": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/king_shadow.png",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/knight_shadow.png": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/knight_shadow.png",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/pawn_shadow.png": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/pawn_shadow.png",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_marble_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_marble_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_marble_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_marble_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_metal_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_metal_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_metal_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_metal_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_plastic_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_plastic_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_plastic_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_plastic_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_wood_black.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_wood_black.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_wood_white.jpg": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/piece_wood_white.jpg",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/queen_shadow.png": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/queen_shadow.png",
                "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/rook_shadow.png": "bundles/web/images/webgl_data/3d/pieces/staunton_executive/textures/rook_shadow.png",
                "bundles/web/images/webgl_data/README.md": "bundles/web/images/webgl_data/README.md",
                "bundles/web/images/webgl_data/three-d/board/board.glb": "bundles/web/images/webgl_data/three-d/board/board.glb",
                "bundles/web/images/webgl_data/three-d/board/board.json": "bundles/web/images/webgl_data/three-d/board/board.json",
                "bundles/web/images/webgl_data/three-d/board/textures/board_8_bit.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_8_bit.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_8_bit_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_8_bit_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_bases.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_bases.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_bases_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_bases_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_blackwhite.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_blackwhite.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_blackwhite_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_blackwhite_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_blue.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_blue.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_blue_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_blue_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_brown.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_brown.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_brown_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_brown_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_bubblegum.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_bubblegum.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_bubblegum_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_bubblegum_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_burled_wood.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_burled_wood.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_burled_wood_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_burled_wood_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_dark_wood.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_dark_wood.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_dark_wood_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_dark_wood_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_dash.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_dash.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_dash_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_dash_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_glass.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_glass.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_glass_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_glass_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_graffiti.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_graffiti.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_graffiti_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_graffiti_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_green.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_green.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_green_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_green_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_grey.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_grey.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_grey_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_grey_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_icy_sea.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_icy_sea.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_icy_sea_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_icy_sea_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_light.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_light.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_light_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_light_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_lolz.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_lolz.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_lolz_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_lolz_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marble.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_marble.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marble_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_marble_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marbleblue.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_marbleblue.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marbleblue_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_marbleblue_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marblebrown.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_marblebrown.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marblebrown_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_marblebrown_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marblegreen.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_marblegreen.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_marblegreen_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_marblegreen_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_metal.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_metal.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_metal_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_metal_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_neon.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_neon.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_neon_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_neon_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_newspaper.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_newspaper.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_newspaper_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_newspaper_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_orange.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_orange.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_orange_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_orange_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_overlay.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_overlay.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_overlay_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_overlay_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_parchment.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_parchment.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_parchment_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_parchment_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_pink.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_pink.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_pink_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_pink_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_purple.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_purple.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_purple_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_purple_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_red.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_red.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_red_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_red_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_sand.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_sand.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_sand_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_sand_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_shadow.png": "bundles/web/images/webgl_data/three-d/board/textures/board_shadow.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_sky.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_sky.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_sky_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_sky_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_stone.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_stone.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_stone_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_stone_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_tan.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_tan.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_tan_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_tan_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_tournament.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_tournament.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_tournament_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_tournament_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_translucent.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_translucent.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_translucent_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_translucent_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_walnut.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_walnut.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_walnut_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_walnut_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_winboard.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_winboard.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_winboard_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_winboard_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_wood.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_wood.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_wood_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_wood_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_wooddark.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_wooddark.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_wooddark_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_wooddark_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_woodlight.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_woodlight.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_woodlight_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_woodlight_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_woodmid.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_woodmid.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_woodmid_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_woodmid_notation.png",
                "bundles/web/images/webgl_data/three-d/board/textures/board_woodolive.jpg": "bundles/web/images/webgl_data/three-d/board/textures/board_woodolive.jpg",
                "bundles/web/images/webgl_data/three-d/board/textures/board_woodolive_notation.png": "bundles/web/images/webgl_data/three-d/board/textures/board_woodolive_notation.png",
                "bundles/web/images/webgl_data/three-d/marking_arrow_L.json": "bundles/web/images/webgl_data/three-d/marking_arrow_L.json",
                "bundles/web/images/webgl_data/three-d/marking_arrow_straight.json": "bundles/web/images/webgl_data/three-d/marking_arrow_straight.json",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop.glb": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop.glb",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop.json": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop.json",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop_promotion_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop_promotion_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop_promotion_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/bishop_promotion_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/king.glb": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/king.glb",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/king.json": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/king.json",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight.glb": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight.glb",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight.json": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight.json",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight_promotion_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight_promotion_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight_promotion_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/knight_promotion_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/pawn.glb": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/pawn.glb",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/pawn.json": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/pawn.json",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen.glb": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen.glb",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen.json": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen.json",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen_promotion_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen_promotion_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen_promotion_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/queen_promotion_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook.glb": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook.glb",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook.json": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook.json",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook_promotion_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook_promotion_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook_promotion_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/rook_promotion_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/bishop_shadow.png": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/bishop_shadow.png",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/negx.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/negx.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/negy.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/negy.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/negz.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/negz.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/posx.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/posx.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/posy.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/posy.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/posz.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/envmap/posz.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/king_shadow.png": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/king_shadow.png",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/knight_shadow.png": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/knight_shadow.png",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/pawn_shadow.png": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/pawn_shadow.png",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_marble_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_marble_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_marble_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_marble_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_metal_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_metal_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_metal_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_metal_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_plastic_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_plastic_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_plastic_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_plastic_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_wood_black.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_wood_black.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_wood_white.jpg": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/piece_wood_white.jpg",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/queen_shadow.png": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/queen_shadow.png",
                "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/rook_shadow.png": "bundles/web/images/webgl_data/three-d/pieces/staunton_executive/textures/rook_shadow.png",
                "bundles/web/images/webgl_data/two-d/arcade/capture-hint-hide.svg": "bundles/web/images/webgl_data/two-d/arcade/capture-hint-hide.svg",
                "bundles/web/images/webgl_data/two-d/arcade/capture-hint-out.svg": "bundles/web/images/webgl_data/two-d/arcade/capture-hint-out.svg",
                "bundles/web/images/webgl_data/two-d/arcade/capture-hint-over.svg": "bundles/web/images/webgl_data/two-d/arcade/capture-hint-over.svg",
                "bundles/web/images/webgl_data/two-d/arcade/capture-hint-show.svg": "bundles/web/images/webgl_data/two-d/arcade/capture-hint-show.svg",
                "bundles/web/images/webgl_data/two-d/arcade/king-check.svg": "bundles/web/images/webgl_data/two-d/arcade/king-check.svg",
                "bundles/web/images/webgl_data/two-d/arcade/move-hint-hide.svg": "bundles/web/images/webgl_data/two-d/arcade/move-hint-hide.svg",
                "bundles/web/images/webgl_data/two-d/arcade/move-hint-out.svg": "bundles/web/images/webgl_data/two-d/arcade/move-hint-out.svg",
                "bundles/web/images/webgl_data/two-d/arcade/move-hint-over.svg": "bundles/web/images/webgl_data/two-d/arcade/move-hint-over.svg",
                "bundles/web/images/webgl_data/two-d/arcade/move-hint-show.svg": "bundles/web/images/webgl_data/two-d/arcade/move-hint-show.svg",
                "bundles/web/images/webgl_data/two-d/arcade/piece-capture.svg": "bundles/web/images/webgl_data/two-d/arcade/piece-capture.svg",
                "bundles/web/images/webgl_data/two-d/arcade/piece-grab.svg": "bundles/web/images/webgl_data/two-d/arcade/piece-grab.svg",
                "bundles/web/images/webgl_data/two-d/arcade/piece-release.svg": "bundles/web/images/webgl_data/two-d/arcade/piece-release.svg",
                "bundles/web/images/webgl_data/two-d/arcade/piece-trail.svg": "bundles/web/images/webgl_data/two-d/arcade/piece-trail.svg",
                "bundles/web/images/webgl_data/two-d/arcade/square-fill.svg": "bundles/web/images/webgl_data/two-d/arcade/square-fill.svg",
                "bundles/web/images/webgl_data/two-d/hover-square.png": "bundles/web/images/webgl_data/two-d/hover-square.png",
                "bundles/web/images/webgl_data/two-d/natural/piece-trail-long.png": "bundles/web/images/webgl_data/two-d/natural/piece-trail-long.png",
                "bundles/web/images/webgl_data/two-d/natural/piece-trail.png": "bundles/web/images/webgl_data/two-d/natural/piece-trail.png"
            };
            let n;
            n = window.Config["domain.static"] && !window.Config.cypress ? "https" : "http";
            const generateUrl = (e,t=!0,a=n)=>`${t ? `${a}:${window.Config["domain.static"]}` : ""}/${null != s[e] ? s[e] : e}`
        },
        32793: function(e, t, a) {
            "use strict";
            a.d(t, {
                j7: function() {
                    return getWindowTitle
                },
                bM: function() {
                    return getWindowLocation
                },
                k_: function() {
                    return s
                },
                qD: function() {
                    return n
                },
                e0: function() {
                    return o
                },
                sJ: function() {
                    return bookmarkPage
                },
                kY: function() {
                    return r
                },
                Cz: function() {
                    return sendEmail
                },
                tq: function() {
                    return isMobile
                }
            });
            const getWindowTitle = ()=>encodeURIComponent(window.document.title)
              , getWindowLocation = ()=>encodeURIComponent(window.location.href)
              , s = window.location.pathname
              , n = getWindowTitle()
              , o = getWindowLocation()
              , bookmarkPage = ()=>{
                if (window.sidebar && window.sidebar.addPanel)
                    window.sidebar.addPanel(n, o, "");
                else if (window.external && "AddFavorite"in window.external)
                    window.external.AddFavorite(o, n);
                else {
                    const e = -1 !== window.navigator.userAgent.toLowerCase().indexOf("mac") ? "Cmd" : "Ctrl";
                    alert(`Press ${e}+D to bookmark this page.`)
                }
            }
              , r = (Number.POSITIVE_INFINITY,
            ()=>{
                window.print()
            }
            )
              , sendEmail = (e,t)=>{
                window.location.href = `mailto:?${e}&${t}`
            }
              , isMobile = (e=window.navigator.userAgent)=>/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)
        },
        61681: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return s
                }
            });
            class CacheProvider {
                constructor() {
                    this.enabled = function localStorageWorks() {
                        const e = "test";
                        try {
                            return localStorage.setItem(e, e),
                            localStorage.removeItem(e),
                            !0
                        } catch (t) {
                            return !1
                        }
                    }()
                }
                get(e) {
                    return JSON.parse(localStorage.getItem(e))
                }
                set(e, t) {
                    localStorage.setItem(e, JSON.stringify(t))
                }
            }
            var s = new class CacheService {
                constructor(e, t={}) {
                    this.cache = new CacheProvider,
                    this.cacheKey = e,
                    this.memory = t
                }
                get ready() {
                    return !1 !== this.cache.enabled
                }
                get(e, t=null) {
                    return this.memory[e] ? this.memory[e] : this.ready ? (this.pull(),
                    void 0 !== this.memory[e] ? this.memory[e] : t) : t
                }
                pull() {
                    return this.memory = this.cache.get(this.cacheKey) || {},
                    this
                }
                push() {
                    return this.cache.set(this.cacheKey, this.memory),
                    this
                }
                remove(e) {
                    return this.ready ? (this.pull(),
                    void 0 === this.memory[e] ? this : (delete this.memory[e],
                    this.push())) : this
                }
                set(e, t) {
                    return this.ready ? (this.pull(),
                    this.memory[e] = t,
                    this.push()) : this
                }
            }
            ("json_settings")
        },
        43608: function(e, t, a) {
            "use strict";
            var s = a(36409);
            t.Z = s.Z
        },
        16210: function(e, t, a) {
            "use strict";
            var s = a(111);
            t.Z = s.Z
        },
        35750: function(e, t, a) {
            "use strict";
            a.d(t, {
                ej: function() {
                    return getCookie
                }
            });
            function getCookie(e) {
                const t = {};
                return document.cookie.split("; ").forEach((e=>{
                    const [a,s] = e.split("=");
                    a && s && (t[a] = s)
                }
                )),
                t[e] || null
            }
        },
        99660: function(e, t, a) {
            "use strict";
            a.d(t, {
                KZ: function() {
                    return getIsDarkMode
                },
                Yc: function() {
                    return n
                }
            });
            a(61682),
            a(35750);
            const s = "dark-mode"
              , getIsDarkMode = ()=>document.body.classList.contains(s)
              , n = getIsDarkMode()
        },
        26924: function(e, t, a) {
            "use strict";
            var s = a(3775);
            const n = {
                name: "click-outside",
                bind(e, t) {
                    let a, n, o = 1, r = "click";
                    if ((0,
                    s.mf)(t.value) ? a = t.value : (0,
                    s.Kn)(t.value) && (a = t.value.handler,
                    o = t.value.delay,
                    r = t.value.clickEvent || "click"),
                    !(0,
                    s.mf)(a))
                        throw new Error("must pass function to click-outside");
                    const onClickElement = e=>e.stopPropagation()
                      , onClickDocument = t=>e !== t.target && a(e, t);
                    e.$unbindClickOutside && e.$unbindClickOutside(),
                    e.$unbindClickOutside = ()=>{
                        clearTimeout(n),
                        e.removeEventListener(r, onClickElement),
                        document.removeEventListener(r, onClickDocument),
                        delete e.$unbindClickOutside
                    }
                    ,
                    n = setTimeout((()=>{
                        e.addEventListener(r, onClickElement),
                        document.addEventListener(r, onClickDocument)
                    }
                    ), o)
                },
                unbind(e) {
                    e.$unbindClickOutside && e.$unbindClickOutside()
                }
            };
            t.Z = n
        },
        6898: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return g
                }
            });
            var s = a(61682)
              , n = a(24452);
            function isNull(e) {
                return null === e
            }
            function isUndefined(e) {
                return void 0 === e
            }
            function isObject(e) {
                return !isNull(e) && "object" == typeof e
            }
            var o = {
                isString: e=>"string" == typeof e,
                isFunction: e=>"function" == typeof e,
                isNumber: e=>"number" == typeof e,
                isNil: e=>isNull(e) || isUndefined(e),
                isObject: isObject,
                isPlainObject: e=>!!isObject(e) && (e.constructor && "Object" === e.constructor.name),
                isArray: e=>Array.isArray(e),
                isError(e) {
                    if (!isObject(e))
                        return !1;
                    const t = Object.prototype.toString.call(e);
                    return "[object Error]" === t || "[object DOMException]" === t
                },
                isUndefined: isUndefined
            };
            const getValue = (e,t)=>o.isString(t) && o.isObject(e) ? e[t] : o.isFunction(t) ? t(e) : void 0
              , compareValues = (e,t,a,s)=>{
                const n = getValue(e, a)
                  , o = getValue(t, a);
                return null == n ? 1 : null == o ? -1 : n > o ? "desc" === s ? -1 : 1 : n < o ? "desc" === s ? 1 : -1 : 0
            }
            ;
            var r = {
                remove(e, t) {
                    const a = o.isFunction(t) ? e.findIndex(t) : e.indexOf(t);
                    -1 !== a && e.splice(a, 1)
                },
                range(e, t) {
                    const a = [];
                    for (let s = e; s < t; s++)
                        a.push(s);
                    return a
                },
                uniq: (e,t)=>o.isFunction(t) ? e.filter(((a,s)=>e.findIndex((e=>t(e) === t(a))) === s)) : t ? e.filter(((a,s)=>e.findIndex((e=>e[t] === a[t])) === s)) : e.filter(((t,a)=>e.indexOf(t) === a)),
                sortBy(e, t, a) {
                    const s = o.isArray(t) ? t : [t]
                      , n = o.isArray(a) ? a : [a]
                      , r = e.slice(0);
                    return r.sort(((e,t)=>{
                        let a = 0;
                        for (let o = 0; o < s.length && 0 === a; o++)
                            a = compareValues(e, t, s[o], n[o]);
                        return a
                    }
                    )),
                    r
                }
            };
            let i;
            i = "undefined" != typeof window ? window : void 0 !== a.g ? a.g : "undefined" != typeof self ? self : {};
            var l = i;
            const c = {};
            ["setTimeout", "setInterval", "clearTimeout", "clearInterval"].forEach((e=>{
                c[e] = l[e].bind(l)
            }
            ));
            var u = c;
            const getOptions = e=>o.isString(e.value) ? {
                content: e.value
            } : e.value
              , noop = ()=>{}
            ;
            var d = {
                name: "Tooltip",
                created() {
                    this.active = null,
                    this.hideOnDocumentVisibilityChangeHandler = noop,
                    this.hideOnScrollHandler = noop,
                    this.instances = []
                },
                beforeDestroy() {
                    this.instances = null,
                    this.clearTooltip()
                },
                methods: {
                    bind(e, t) {
                        this.instances.push({
                            element: e,
                            options: getOptions(t || {
                                value: e.getAttribute("title")
                            })
                        }),
                        e.removeAttribute("title"),
                        e.addEventListener("mouseenter", this.showTooltip),
                        e.addEventListener("focus", this.showTooltip)
                    },
                    update(e, t) {
                        const a = this.instances.find((t=>t.element === e));
                        a && (a.options = getOptions(t))
                    },
                    unbind(e) {
                        const t = this.instances.find((t=>t.element === e));
                        t && (this.active === t && this.hideTooltip({
                            target: t.element
                        }),
                        r.remove(this.instances, t),
                        e.removeEventListener("mouseenter", this.showTooltip),
                        e.removeEventListener("focus", this.showTooltip),
                        e.removeEventListener("mouseleave", this.hideTooltip),
                        e.removeEventListener("blur", this.hideTooltip))
                    },
                    showTooltip({target: e}) {
                        const t = this.instances.find((t=>t.element === e));
                        if (!t || !t.options || !t.options.content)
                            return;
                        const a = t.options.delay || 400
                          , o = t.options.position || "top"
                          , r = t.options.padding || 0;
                        this.clearTooltip(),
                        t.element.classList.contains(s.xL.CONFIRM_OPEN) || (this.active = t,
                        t.element.addEventListener("mouseleave", this.hideTooltip),
                        t.element.addEventListener("blur", this.hideTooltip),
                        this.showTimeout = u.setTimeout((()=>{
                            this.showFrame = window.requestAnimationFrame((()=>{
                                this.$refs && this.$refs.content && t.options && (this.$refs.content.textContent = t.options.content),
                                this.$el.classList.add(o),
                                (0,
                                n._O)(t.element, this.$el, o, r)
                            }
                            ))
                        }
                        ), a)),
                        !1 !== t.options.closeOnScroll && this.hideOnScroll(e),
                        this.hideOnDocumentVisibilityChange(e)
                    },
                    hideOnDocumentVisibilityChange(e) {
                        this.hideOnDocumentVisibilityChangeHandler = ()=>{
                            this.hideTooltip({
                                target: e
                            })
                        }
                        ,
                        document.addEventListener("visibilitychange", this.hideOnDocumentVisibilityChangeHandler)
                    },
                    hideOnScroll(e) {
                        this.hideOnScrollHandler = ()=>{
                            this.hideTooltip({
                                target: e
                            })
                        }
                        ,
                        window.addEventListener("scroll", this.hideOnScrollHandler)
                    },
                    hideTooltip({target: e}) {
                        this.instances.find((t=>t.element === e)) && (this.clearTooltip(),
                        this.hideFrame = window.requestAnimationFrame((()=>{
                            this.$refs && this.$refs.content && (this.$refs.content.textContent = null),
                            (0,
                            n.fs)(this.$el)
                        }
                        )))
                    },
                    clearTooltip() {
                        this.active && (this.active.element.removeEventListener("mouseleave", this.hideTooltip),
                        this.active.element.removeEventListener("blur", this.hideTooltip),
                        this.active = null),
                        u.clearTimeout(this.showTimeout),
                        window.cancelAnimationFrame(this.hideFrame),
                        window.cancelAnimationFrame(this.showFrame),
                        window.removeEventListener("scroll", this.hideOnScrollHandler),
                        document.removeEventListener("visibilitychange", this.hideOnDocumentVisibilityChangeHandler)
                    }
                }
            }
              , h = (0,
            a(51900).Z)(d, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    staticClass: "tooltip tip vue-tooltip"
                }, [a("div", {
                    staticClass: "arrow"
                }), e._v(" "), a("div", {
                    ref: "content",
                    staticClass: "inner",
                    attrs: {
                        "data-cy": "tooltip-content"
                    }
                })])
            }
            ), [], !1, null, null, null).exports;
            const p = a(31663).default.extend(h);
            let m, b = !1;
            const getTooltip = ()=>{
                if (m || (m = new p),
                !b) {
                    const e = document.createElement("div");
                    document.body.appendChild(e),
                    m.$mount(e),
                    b = !0
                }
                return m
            }
            ;
            var g = {
                bind: (e,t)=>getTooltip().bind(e, t),
                componentUpdated: (e,t)=>getTooltip().update(e, t),
                unbind: (e,t)=>getTooltip().unbind(e, t)
            }
        },
        86673: function(e, t, a) {
            "use strict";
            var s = a(74279);
            const n = new (a.n(s)());
            t.Z = n
        },
        91353: function(e, t, a) {
            "use strict";
            a.d(t, {
                FR: function() {
                    return hasFeatureAccess
                }
            });
            const s = {}
              , hasFeatureAccess = e=>{
                var t, a;
                return !!(null == (a = null == (t = window.chesscom) ? void 0 : t.features) ? void 0 : a.includes(e)) || Boolean(s[e])
            }
        },
        74645: function(e, t, a) {
            "use strict";
            a.d(t, {
                jl: function() {
                    return i
                },
                WX: function() {
                    return getGameEndReason
                },
                aX: function() {
                    return getWinnerTranslation
                }
            });
            var s = a(67104)
              , n = a(84282)
              , o = a(32305);
            const r = {
                acceptFriendRequest: (0,
                o.dW)("Accept Friend Request"),
                addFriend: (0,
                o.dW)("Add Friend"),
                blackWon: (0,
                o.dW)("Black Won"),
                byAgreement: (0,
                o.dW)("%gameOutcome% by agreement", {
                    "%gameOutcome%": ""
                }),
                byCheckmate: (0,
                o.dW)("%gameOutcome% by checkmate", {
                    "%gameOutcome%": ""
                }),
                byResignation: (0,
                o.dW)("%gameOutcome% by resignation", {
                    "%gameOutcome%": ""
                }),
                cancelFriendRequest: (0,
                o.dW)("Cancel Friend Request"),
                draw: (0,
                o.dW)("Draw"),
                gameOver: (0,
                o.dW)("Game Over"),
                insufficientMaterial: (0,
                o.dW)("%gameOutcome% insufficient material", {
                    "%gameOutcome%": ""
                }),
                removeFriend: (0,
                o.dW)("Remove Friend"),
                youWon: (0,
                o.dW)("You Won!"),
                waiting: (0,
                o.dW)("Waiting..."),
                whiteWon: (0,
                o.dW)("White Won")
            };
            var i = (e=>(e.Checkmate = "Checkmate",
            e.Draw = "Draw",
            e.Resignation = "Resignation",
            e.Time = "Time",
            e))(i || {});
            function getGameEndCode(e, t) {
                return e.inCheckmate() ? n.zT.CHECKMATED : e.inStalemate() ? n.zT.STALEMATE : e.in50MoveRule() ? n.zT.FIFTY_MOVE : e.inThreefoldRepetition() ? n.zT.REPETITION : e.insufficientMaterial() && "Time" === t ? n.zT.TIMEVSINSUFFICIENT : e.insufficientMaterial() ? n.zT.INSUFFICIENT : "Resignation" === t ? n.zT.RESIGNED : "Time" === t ? n.zT.TIMEOUT : ""
            }
            function getGameEndReason(e, t) {
                return n.UG[getGameEndCode(e, t)] || ""
            }
            function getWinnerTranslation(e) {
                return e === s.lA.Results.Draw ? r.draw : e === s.lA.Results.Black ? r.blackWon : r.whiteWon
            }
        },
        2101: function(e, t, a) {
            "use strict";
            a.d(t, {
                kN: function() {
                    return n
                },
                _$: function() {
                    return o
                },
                Ux: function() {
                    return setCheckboxModel
                },
                sY: function() {
                    return setCheckboxUi
                },
                nj: function() {
                    return getPgnOpts
                }
            });
            var s = a(92866);
            const n = (0,
            s.qj)({
                isCommentsCheckboxVisible: !1,
                isHighlightsCheckboxVisible: !1,
                isAnalyzedPgnCheckboxVisible: !1
            })
              , o = (0,
            s.qj)({
                isAnalyzedPgnEnabled: !1,
                isCommentsEnabled: !0,
                isHighlightsEnabled: !1,
                isTimestampsEnabled: !1
            });
            function setCheckboxModel(e) {
                Object.keys(e).forEach((t=>{
                    o[t] = e[t]
                }
                ))
            }
            function setCheckboxUi(e) {
                Object.keys(e).forEach((t=>{
                    n[t] = e[t]
                }
                ))
            }
            const getPgnOpts = ({isCommentsEnabled: e, isHighlightsEnabled: t, isTimestampsEnabled: a})=>{
                const s = !e
                  , n = [];
                return a && n.push("clk", "timestamp"),
                t && n.push("c_effect", "c_arrow", "c_highlight"),
                {
                    hideComments: s,
                    restrictCommands: n
                }
            }
        },
        70917: function(e, t, a) {
            "use strict";
            a.d(t, {
                l_: function() {
                    return htmlDecode
                },
                Ak: function() {
                    return htmlEncode
                }
            });
            const htmlDecode = e=>(new DOMParser).parseFromString(`<!doctype html><body>${e}`, "text/html").body.textContent
              , htmlEncode = e=>{
                if (!e)
                    return e;
                const t = [60, 62];
                let a = e.length;
                const s = [];
                for (; a--; ) {
                    const n = e[a].charCodeAt();
                    t.indexOf(n) > -1 ? s[a] = `&#${n};` : s[a] = e[a]
                }
                return s.join("")
            }
        },
        14164: function(e, t, a) {
            "use strict";
            a.d(t, {
                i: function() {
                    return getMessageFromError
                }
            });
            var s = a(49790);
            a(18160);
            const getMessageFromError = e=>{
                if (e.response && 401 !== e.response.status)
                    return (e.response.data && e.response.data.message ? e.response.data.message : s.R0.badRequest) || e.response.statusText
            }
        },
        57367: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return u
                }
            });
            var s = a(9669)
              , n = a.n(s)();
            function isSpecialRequest(e) {
                return function isPlatformRequest(e) {
                    return e.startsWith("/service/") || e.includes(".com/service/")
                }(e) || function isChessbombRequest(e) {
                    return e.includes("chessbomb.com")
                }(e) || function isSubdomainRequest(e) {
                    return /https:\/\/(?!www)([\S]+)chess.com/.test(e)
                }(e)
            }
            const o = ["delete", "patch", "post", "put"];
            var r = a(20169);
            const random = ()=>Math.random().toString(36).substring(2, 15);
            const boolToInt = e=>(Object.keys(e).forEach((t=>{
                const a = e[t];
                "boolean" == typeof a && (e[t] = Number(a)),
                "object" == typeof a && null !== a && (e[t] = boolToInt(a))
            }
            )),
            e);
            var i = [function addCsrfToken(e) {
                return e && !isSpecialRequest(e.url) && o.includes(e.method) ? (e.data instanceof FormData || e.data instanceof URLSearchParams ? e.data.append("_token", window.context.csrf.token) : e.data = Object.assign({
                    _token: window.context.csrf.token
                }, e.data || {}),
                e) : e
            }
            , function addRequestId(e) {
                return (()=>{
                    const e = document.getElementById(r.GO.NAV_ROOT);
                    return !!e && Boolean(e.dataset.featureClientRequestId)
                }
                )() && (e.headers.common["X-Chesscom-Request-Id"] = (e=>{
                    let t = random();
                    for (; t.length < e; )
                        t += random();
                    return t.substring(0, e)
                }
                )(32)),
                e
            }
            , function castBoolsToInts(e) {
                return !e || isSpecialRequest(e.url) || "object" == typeof e.data && (e.data = boolToInt(e.data)),
                e
            }
            ];
            function responseErrorInterceptor(e) {
                const t = e.config
                  , a = e.response;
                if ("Cancel" === e.toString())
                    return Promise.reject(e);
                try {
                    t.data = JSON.parse(t.data)
                } catch (s) {
                    return Promise.reject(e)
                }
                if (a && 403 === a.status && a.headers["x-chesscom-csrf-token"] && t && !t.data.retry) {
                    const e = a.headers["x-chesscom-csrf-token"];
                    return t.data._token = e,
                    t.data.retry = !0,
                    window.context.csrf.token = e,
                    n(t)
                }
                return Promise.reject(e)
            }
            var l = a(84770)
              , c = a(63207);
            const checkWindowObject = ()=>{
                (({key: e, value: t})=>{
                    window.chesscom || (window.chesscom = {}),
                    window.chesscom[e] || (window.chesscom[e] = t)
                }
                )({
                    key: "logData",
                    value: {}
                })
            }
              , log = ({key: e, value: t})=>{
                checkWindowObject(),
                window.chesscom.logData[e] = t,
                async function setSentryContext(e) {
                    if (!(await (0,
                    c.U)()))
                        return;
                    (await (0,
                    l.m)()).configureScope((t=>{
                        Object.keys(e).forEach((a=>{
                            t.setExtra(a, e[a])
                        }
                        ))
                    }
                    ))
                }({
                    [e]: t
                })
            }
            ;
            function responseInterceptor(e) {
                return e.headers && e.headers["x-chesscom-request-id-cdn"] && (log({
                    key: "x-chesscom-request-id-cdn",
                    value: e.headers["x-chesscom-request-id-cdn"]
                }),
                log({
                    key: "x-chesscom-request-id-lb",
                    value: e.headers["x-chesscom-request-id-lb"]
                })),
                e
            }
            function findExistingInterceptor(e, t) {
                var a;
                if (!t.name)
                    throw new Error("interceptor must be a named function");
                return null == (a = e.handlers) ? void 0 : a.find((e=>{
                    var a;
                    return (null == (a = e.fulfilled) ? void 0 : a.name) === t.name
                }
                ))
            }
            !function registerInterceptors(e) {
                i.forEach((t=>{
                    findExistingInterceptor(e.interceptors.request, t) || e.interceptors.request.use(t)
                }
                )),
                findExistingInterceptor(e.interceptors.response, responseInterceptor) || e.interceptors.response.use(responseInterceptor, responseErrorInterceptor)
            }(n);
            var u = n
        },
        16272: function(e, t, a) {
            "use strict";
            a.d(t, {
                p6: function() {
                    return m
                },
                uf: function() {
                    return formatNumber
                }
            });
            var s = a(61682)
              , n = a(18160)
              , o = Object.defineProperty
              , r = Object.getOwnPropertySymbols
              , i = Object.prototype.hasOwnProperty
              , l = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? o(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    i.call(t, a) && __defNormalProp(e, a, t[a]);
                if (r)
                    for (var a of r(t))
                        l.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            ;
            function getLocale(e="", t="-") {
                return (e || (Object.prototype.hasOwnProperty.call(window, "context") ? window.context.i18n.locale : "en-US")).replace("_", t)
            }
            const c = 31536e6
              , u = (()=>{
                const e = 864e5;
                switch ((new Date).getMonth()) {
                case 3:
                case 5:
                case 8:
                case 10:
                    return 30 * e;
                case 1:
                    return (new Date).getFullYear() % 4 == 0 ? 29 * e : 28 * e;
                default:
                    return 31 * e
                }
            }
            )()
              , d = 864e5
              , h = 36e5
              , p = 6e4
              , m = {
                mergeOptions: e=>__spreadValues({
                    abbreviateHours: !1,
                    abbreviateMinutes: !0,
                    includeDays: !1
                }, e),
                getUnitsInInt(e, t={}) {
                    let a = 0
                      , s = 0
                      , n = 0
                      , o = e;
                    return !0 === m.mergeOptions(t).includeDays && (a = Math.floor(o / 86400),
                    o -= 86400 * a),
                    s = Math.floor(o / 3600),
                    o -= 3600 * s,
                    n = Math.floor(o / 60),
                    {
                        minutes: n,
                        hours: s,
                        days: a
                    }
                },
                getDaysHoursMinutesAsString(e, t={}) {
                    const a = m.getDaysHoursMinutesAsObject(e, t)
                      , {minutes: s, hours: n, days: o} = m.getUnitsInInt(e, t)
                      , r = [];
                    return o > 0 && r.push(a.days),
                    n > 0 && r.push(a.hours),
                    (s > 0 || 0 === r.length) && r.push(a.minutes),
                    r.join(" ")
                },
                getDaysHoursMinutesAsObject(e, t={}) {
                    const a = m.mergeOptions(t)
                      , {minutes: s, hours: o, days: r} = m.getUnitsInInt(e, t)
                      , i = n.Z.transChoice("{0} 0 days|{1} 1 day|]1,Inf] %1$s% days", r, {
                        "%1$s%": r
                    });
                    let l = n.Z.transChoice("{0} 0 hours|{1} 1 hour|]1,Inf] %1$s% hours", Math.floor(o), {
                        "%1$s%": o
                    })
                      , c = n.Z.transChoice("{0} 0 min|{1} 1 min|]1,Inf] %1$s% min", s, {
                        "%1$s%": s
                    });
                    return a.abbreviateHours && (l = n.Z.transChoice("{0} 0 hrs|{1} 1 hr|]1,Inf] %1$s% hrs", Math.floor(o), {
                        "%1$s%": o
                    })),
                    a.abbreviateMinutes || (c = n.Z.transChoice("{1} 1 minute|]1,Inf] %1$s% minutes", s, {
                        "%1$s%": s
                    })),
                    {
                        days: i,
                        hours: l,
                        minutes: c
                    }
                },
                long: (e=new Date,t={})=>{
                    const a = e instanceof Date ? e : new Date(e);
                    return new Intl.DateTimeFormat(getLocale(),__spreadValues(__spreadValues({}, {
                        year: "numeric",
                        month: "short",
                        day: "numeric"
                    }), t)).format(a)
                }
                ,
                full: (e=new Date,t={})=>{
                    const a = e instanceof Date ? e : new Date(e);
                    return new Intl.DateTimeFormat(getLocale(),__spreadValues(__spreadValues({}, {
                        year: "numeric",
                        month: "short",
                        day: "numeric",
                        hour: "numeric",
                        minute: "numeric",
                        second: "numeric",
                        timeZoneName: "short"
                    }), t)).format(a)
                }
                ,
                numeric: (e=new Date,t={})=>{
                    const a = e instanceof Date ? e : new Date(e);
                    if (window.Intl) {
                        const e = getLocale();
                        return new Intl.DateTimeFormat(e,Object.assign({
                            day: "2-digit",
                            month: "2-digit",
                            year: "numeric"
                        }, t)).format(a)
                    }
                    return `${`0${a.getMonth() + 1}`.slice(-2)}/${`0${a.getDate()}`.slice(-2)}/${a.getFullYear()}`
                }
                ,
                relative: (e,t=!0,a=!0,s=!1,o=Date.now())=>{
                    let r, i;
                    const l = (e instanceof Date ? e : new Date(e)).getTime()
                      , m = s ? l - o : o - l;
                    if (Math.abs(m) > u && t) {
                        const e = {
                            year: "numeric",
                            month: "short",
                            day: "numeric"
                        };
                        return new Intl.DateTimeFormat(getLocale(),e).format(l)
                    }
                    if (m >= c)
                        i = "year",
                        r = Math.abs(Math.floor(m / c));
                    else if (m >= u)
                        i = "month",
                        r = Math.abs(Math.floor(m / u));
                    else if (m >= d)
                        i = "day",
                        r = Math.abs(Math.floor(m / d));
                    else if (m >= h)
                        i = "hour",
                        r = Math.abs(Math.floor(m / h));
                    else {
                        if (!(m >= p))
                            return s ? n.Z.trans("Right now") : n.Z.trans("Just now");
                        i = "minute",
                        r = Math.abs(Math.floor(m / p))
                    }
                    return function getTimeAgo(e, t, a) {
                        return "year" === e ? t ? n.Z.transChoice("{1} 1 year ago|]1,Inf] %1$s% years ago", a, {
                            "%1$s%": a
                        }) : n.Z.transChoice("{1} 1 year|]1,Inf] %1$s% years", a, {
                            "%1$s%": a
                        }) : "month" === e ? t ? n.Z.transChoice("{1} 1 month ago|]1,Inf] %1$s% months ago", a, {
                            "%1$s%": a
                        }) : n.Z.transChoice("{1} 1 month|]1,Inf] %1$s% months", a, {
                            "%1$s%": a
                        }) : "day" === e ? t ? n.Z.transChoice("{1} 1 day ago|]1,Inf] %1$s% days ago", a, {
                            "%1$s%": a
                        }) : n.Z.transChoice("{1} 1 day|]1,Inf] %1$s% days", a, {
                            "%1$s%": a
                        }) : "hour" === e ? t ? n.Z.transChoice("{1} 1 hour ago|]1,Inf] %1$s% hours ago", a, {
                            "%1$s%": a
                        }) : n.Z.transChoice("{1} 1 hour|]1,Inf] %1$s% hours", a, {
                            "%1$s%": a
                        }) : "minute" === e ? t ? n.Z.transChoice("{1} 1 minute ago|]1,Inf] %1$s% minutes ago", a, {
                            "%1$s%": a
                        }) : n.Z.transChoice("{1} 1 minute|]1,Inf] %1$s% minutes", a, {
                            "%1$s%": a
                        }) : ""
                    }(i, Math.abs(m) === m && a, r)
                }
                ,
                customNumericDate: (e=new Date,t="/",a="m/d/y")=>{
                    const s = e instanceof Date ? e : new Date(e)
                      , n = {
                        d: `0${s.getDate()}`.slice(-2),
                        m: `0${s.getMonth() + 1}`.slice(-2),
                        y: `${s.getFullYear()}`
                    };
                    if (!["m", "d", "y"].every((e=>a.split("/").includes(e))))
                        return `${n.m}${t}${n.d}${t}${n.y}`;
                    return a.split("/").reduce(((e,t)=>(e.push(n[t]),
                    e)), []).join(t)
                }
                ,
                userDate: e=>{
                    const t = window.context.user ? new Date(1e3 * e).toLocaleString("en-US", {
                        timeZone: window.context.user.timezone
                    }) : new Date(1e3 * e)
                      , a = new Date(t).setMilliseconds(0)
                      , n = new Date(a)
                      , o = s.Iz.daysOfWeek[n.getDay()]
                      , r = n.getDate()
                      , i = s.Iz.months[n.getMonth()]
                      , l = n.toLocaleTimeString(getLocale())
                      , c = l.split(" ").length > 1 ? l.split(" ")[1] : ""
                      , u = l.split(" ")[0].split(":");
                    u.pop();
                    return `${o}, ${i} ${r}, ${u.join(":")}${c}`
                }
            };
            function formatNumber(e, t="", a={}) {
                return new Intl.NumberFormat([getLocale(t), "en-US"],a).format(e)
            }
        },
        97203: function(e, t, a) {
            "use strict";
            a.d(t, {
                q: function() {
                    return pixelDensity
                },
                b: function() {
                    return retinaImageSrcset
                }
            });
            const pixelDensity = (e,t)=>{
                if (!e)
                    return;
                let a = "@2x";
                return /\.svg$/.test(e) ? e : ([1.5, 3, 4].indexOf(t) > -1 && (a = `@${t}x`),
                e.replace(/(\.\w+)$/, (e=>a + e)))
            }
              , retinaImageSrcset = e=>{
                if (!e)
                    return null;
                const t = e.substring(e.lastIndexOf("/") + 1)
                  , a = e.replace(t, "");
                return `${e}, ${a}${pixelDensity(t)} 2x`
            }
        },
        82220: function(e, t, a) {
            "use strict";
            var s = a(63754);
            t.Z = ()=>-1 !== window.location.href.indexOf(s.Z.generate("web_2fa_login"))
        },
        6301: function(e, t, a) {
            "use strict";
            function getDefaultFen() {
                return "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
            }
            a.d(t, {
                H: function() {
                    return getDefaultFen
                }
            })
        },
        41252: function(e, t, a) {
            "use strict";
            var s = a(19958)
              , n = a(31663)
              , o = Object.defineProperty
              , r = Object.defineProperties
              , i = Object.getOwnPropertyDescriptors
              , l = Object.getOwnPropertySymbols
              , c = Object.prototype.hasOwnProperty
              , u = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? o(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    c.call(t, a) && __defNormalProp(e, a, t[a]);
                if (l)
                    for (var a of l(t))
                        u.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            ;
            n.default.mixin(s.Z);
            const instantiate = e=>{
                return new n.default((t = __spreadValues({}, e),
                a = {
                    el: e.el,
                    render: t=>t(e.component, {
                        props: e.propsData
                    }),
                    store: e.store
                },
                r(t, i(a))));
                var t, a
            }
            ;
            t.Z = (e={})=>{
                const t = {}
                  , createInstance = (a,s={})=>e[a] && Object.keys(e[a]).length ? (t[a] = t[a] || instantiate(__spreadValues(__spreadValues({}, e[a]), s)),
                t[a]) : null;
                return {
                    createInstance: createInstance,
                    createInstances: e=>{
                        e.forEach((e=>createInstance(e)))
                    }
                    ,
                    instances: t
                }
            }
        },
        63930: function(e, t, a) {
            "use strict";
            a.d(t, {
                u8: function() {
                    return s.u
                },
                mc: function() {
                    return invertObject
                }
            });
            var s = a(44614)
              , n = Object.defineProperty
              , o = Object.defineProperties
              , r = Object.getOwnPropertyDescriptors
              , i = Object.getOwnPropertySymbols
              , l = Object.prototype.hasOwnProperty
              , c = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? n(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    l.call(t, a) && __defNormalProp(e, a, t[a]);
                if (i)
                    for (var a of i(t))
                        c.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>o(e, r(t));
            const invertObject = e=>Object.keys(e).reduce(((t,a)=>__spreadProps(__spreadValues({}, t), {
                [e[a]]: a
            })), {})
        },
        44614: function(e, t, a) {
            "use strict";
            a.d(t, {
                u: function() {
                    return objectHasData
                }
            });
            const objectHasData = (e={})=>e && Object.keys(e).length > 0
        },
        63754: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return o
                }
            });
            var s = a(84606)
              , n = a.n(s);
            function getRouting() {
                return n()
            }
            a(91047);
            var o = new class Router {
                generate(e, t, a) {
                    const s = t || {};
                    "string" == typeof s.username && (s.username = s.username.toLowerCase()),
                    function copyRoute(e) {
                        var t, a, s;
                        const n = getRouting();
                        if (!n.routes_[e]) {
                            try {
                                Object.assign(n.context_, {
                                    base_url: "",
                                    prefix: "",
                                    host: "www.chess-dev.com",
                                    port: "",
                                    scheme: "https",
                                    locale: ""
                                })
                            } catch (o) {}
                            if (Object.isFrozen(n.routes_) && (n.routes_ = Object.assign({}, n.routes_)),
                            null == (a = null == (t = window.chesscom) ? void 0 : t.routes) ? void 0 : a[e]) {
                                const t = window.chesscom.routes[e]
                                  , a = ".chess-dev.com"
                                  , o = window.location.host.replace(/^[^.]+/, "");
                                o && (null == (s = t.hosttokens) || s.forEach((e=>{
                                    e.forEach(((t,s)=>{
                                        t.includes(a) && (e[s] = t.replace(a, o))
                                    }
                                    ))
                                }
                                ))),
                                n.routes_[e] = t
                            }
                        }
                    }(e);
                    try {
                        return getRouting().generate(e, s, a)
                    } catch (n) {
                        const t = new Error(`Couldn't find missing route '${e}'.`);
                        return console.error(t),
                        "/"
                    }
                }
                i18nable(e) {
                    return `i18n_${e}`in window.chesscom.routes
                }
                i18n(e, t, a) {
                    var s, n;
                    let o = e;
                    const r = t || {};
                    if ((null == (n = null == (s = window.context) ? void 0 : s.route) ? void 0 : n.startsWith("i18n")) && this.i18nable(e)) {
                        r["_locale"] = window.context.locale.slice(0, 2),
                        o = `i18n_${e}`
                    }
                    const i = this.generate(o, r, a);
                    return a ? i : i.replace(/^.*\/\/[^/]+/, "")
                }
            }
        },
        91047: function(e, t, a) {
            "use strict";
            a.d(t, {
                T: function() {
                    return captureException
                }
            });
            var s = a(84770)
              , n = a(63207);
            async function captureException(e, t) {
                if (!(await (0,
                n.U)()))
                    return;
                !async function enableSentry(e=0) {
                    var t;
                    if (!(await (0,
                    n.U)()))
                        return;
                    window.chesscom.sudoEnableSentry = !0;
                    const a = await (0,
                    s.m)();
                    for (; null == (t = window.chesscom.queuedSentryReports) ? void 0 : t.length; )
                        a.captureException(window.chesscom.queuedSentryReports.shift());
                    if (e > 0) {
                        const t = Date.now() + 24 * e * 60 * 60 * 1e3;
                        window.localStorage.setItem("enableSentryUntil", t.toString())
                    }
                }();
                const a = await (0,
                s.m)()
                  , o = e instanceof Error ? e : new Error(e);
                t ? a.withScope((e=>{
                    Object.keys(t).forEach((a=>e.setExtra(a, t[a]))),
                    a.captureException(o)
                }
                )) : a.captureException(o)
            }
        },
        84770: function(e, t, a) {
            "use strict";
            a.d(t, {
                m: function() {
                    return getSentryBrowser
                }
            });
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            async function getSentryBrowser() {
                return a.e(631).then(a.bind(a, 26048))
            }
        },
        63207: function(e, t, a) {
            "use strict";
            a.d(t, {
                U: function() {
                    return isSentryAvailable
                }
            });
            var s = a(84770);
            async function isSentryAvailable() {
                try {
                    const e = await (0,
                    s.m)();
                    return Boolean(e.getCurrentHub().getClient())
                } catch (e) {
                    return !1
                }
            }
        },
        83857: function(e, t, a) {
            "use strict";
            a.d(t, {
                N: function() {
                    return getTimeControlIcon
                }
            });
            function getTimeControlIcon(e, t="chess") {
                return "chess960" === t ? "live" === e.timeType ? "live960" : "chess960" : "chess" !== t ? t : function getTimeControlType(e) {
                    if ("daily" === e.timeType)
                        return "daily";
                    const {baseTime: t, timeIncrement: a} = e
                      , s = Number(t) + 40 * (a ? 1 * a : 0);
                    return s < 180 ? "bullet" : s >= 600 ? "rapid" : "blitz"
                }(e)
            }
        },
        77498: function(e, t, a) {
            "use strict";
            a.d(t, {
                X: function() {
                    return getTimeControlLabel
                }
            });
            var s = a(32305);
            function getTimeControlLabel(e) {
                const {baseTime: t, timeIncrement: a, timeType: n} = e;
                if ("none" === n)
                    return "--";
                if ("daily" === n)
                    return (0,
                    s.jn)("{1} 1 day|]1,Inf] %1$s% days", t, {
                        "%1$s%": t
                    }).trim();
                if (a && t < 60)
                    return `${(0,
                    s.jn)("{1} 1 sec|]1,Inf] %1$s% sec", Number(t.toFixed(0)), {
                        "%1$s%": t.toFixed(0)
                    }).trim()} | ${a.toFixed(0)}`;
                const o = t % 60;
                return a && t ? o > 0 ? `${Math.floor(t / 60)}:${String(o).padStart(2, "0")} | ${a.toFixed(0)}` : `${(t / 60).toFixed(0)} | ${a.toFixed(0)}` : t < 60 ? (0,
                s.jn)("{1} 1 sec|]1,Inf] %1$s% sec", Number(t.toFixed(0)), {
                    "%1$s%": t.toFixed(0)
                }).trim() : o > 0 ? `${Math.floor(t / 60)}:${String(o).padStart(2, "0")}` : (0,
                s.jn)("{1} 1 min|]1,Inf] %1$s% min", Number((t / 60).toFixed(0)), {
                    "%1$s%": (t / 60).toFixed(0)
                }).trim()
            }
        },
        48573: function(e, t, a) {
            "use strict";
            function getTimeControl(e) {
                let t, a = "600", s = 600, n = 0, o = "live";
                switch (typeof e) {
                case "string":
                    e.includes("d") ? (s = Number(e.replace("d", "")),
                    o = "daily") : /^[0-9]+\/[0-9]+$/.test(e) ? (s = Number(e.split(/\//).pop()) / 86400,
                    o = "daily") : (t = e.split(/\+|\|/),
                    s = Number(t[0]),
                    n = Number(t[1] || 0));
                    break;
                case "object":
                    s = Number(e.baseTime || 0),
                    n = Number(e.timeIncrement || 0),
                    o = e.timeType || o;
                    break;
                case "number":
                    s = e
                }
                return (!n || n < 0 || n > 60) && (n = 0),
                s > 7200 && (s = 7200),
                a = "daily" === o ? `${s}d` : n ? `${s}|${n}` : `${s}`,
                {
                    key: a,
                    baseTime: s,
                    timeIncrement: n,
                    timeType: o
                }
            }
            a.d(t, {
                B: function() {
                    return getTimeControl
                }
            })
        },
        19958: function(e, t, a) {
            "use strict";
            var s = a(32305);
            t.Z = {
                methods: {
                    $trans: s.dW,
                    $transChoice: s.jn
                }
            }
        },
        32305: function(e, t, a) {
            "use strict";
            a.d(t, {
                dW: function() {
                    return trans
                },
                jn: function() {
                    return transChoice
                },
                ox: function() {
                    return getCountries
                },
                $H: function() {
                    return l
                }
            });
            var s, n, o = a(72475), r = a.n(o);
            const i = "fr_FR" === (null == (n = null == (s = window.context) ? void 0 : s.i18n) ? void 0 : n.locale);
            r().placeHolderPrefix = "",
            r().placeHolderSuffix = "";
            const escapeParameters = e=>{
                const t = {};
                return null != e && Object.keys(e).forEach((a=>{
                    const s = a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                    null != s && s.length > 0 && (t[s] = e[a])
                }
                )),
                t
            }
              , getTranslatedPhrase = (e,t="messages",a)=>window.chesscom_translations && window.chesscom_translations[t] && window.chesscom_translations[t][e] ? window.chesscom_translations[t][e] : window.chesscom_live_translations && window.chesscom_live_translations[t] && window.chesscom_live_translations[t][e] ? window.chesscom_live_translations[t][e] : "live" === t && window.i18n_phrases && window.i18n_phrases[e] ? window.i18n_phrases : "countries" === t && window.Country && window.Country[e] ? window.Country : a ? void 0 : "javascript" !== t ? getTranslatedPhrase(e, "javascript") : e
              , trans = (e,t,a)=>r().trans(getTranslatedPhrase(e, a), escapeParameters(t), a)
              , transChoice = (e,t,a,s)=>{
                if (void 0 === t)
                    return "";
                const n = getTranslatedPhrase(e, s)
                  , o = escapeParameters(a);
                return i ? function frenchTransChoice(e, t, a, s) {
                    const [n,o,i] = e.split("|").map((e=>e.trim()));
                    if (0 === t || 1 === t)
                        return r().trans(n, a, s);
                    if (t % 1e6 == 0)
                        return r().trans(o, a, s);
                    return r().trans(i, a, s)
                }(n, t, o, s) : r().transChoice(n, t, o)
            }
            ;
            const getCountries = ()=>window.chesscom_translations && window.chesscom_translations.countries ? window.chesscom_translations.countries : window.chesscom_live_translations && window.chesscom_live_translations.countries ? window.chesscom_live_translations.countries : window.Country ? window.Country : void 0
              , l = {
                trans: trans,
                transChoice: transChoice
            }
        },
        18160: function(e, t, a) {
            "use strict";
            var s = a(32305);
            t.Z = s.$H
        },
        3775: function(e, t, a) {
            "use strict";
            function isNull(e) {
                return null === e
            }
            function isObject(e) {
                return !isNull(e) && "object" == typeof e
            }
            function isString(e) {
                return "string" == typeof e
            }
            function isFunction(e) {
                return "function" == typeof e
            }
            function isNumber(e) {
                return "number" == typeof e && !isNaN(e)
            }
            function isArray(e) {
                return Array.isArray(e)
            }
            function isBoolean(e) {
                return "boolean" == typeof e
            }
            a.d(t, {
                Kn: function() {
                    return isObject
                },
                HD: function() {
                    return isString
                },
                mf: function() {
                    return isFunction
                },
                hj: function() {
                    return isNumber
                },
                kJ: function() {
                    return isArray
                },
                jn: function() {
                    return isBoolean
                }
            })
        },
        9894: function(e, t, a) {
            "use strict";
            a.d(t, {
                D: function() {
                    return wait
                }
            });
            const wait = (e=0)=>new Promise((t=>{
                setTimeout(t, e)
            }
            ))
        },
        74672: function(e, t, a) {
            "use strict";
            function postMessage(e) {
                window.postMessage(e, window.location.origin)
            }
            a.d(t, {
                o: function() {
                    return postMessage
                }
            })
        },
        64647: function(e, t, a) {
            "use strict";
            a.d(t, {
                _: function() {
                    return o
                }
            });
            var s = a(63754)
              , n = a(42898);
            const o = {
                analysis: ()=>s.Z.generate("web_analysis_board_editor"),
                explorer: e=>s.Z.generate("explorer_index", e),
                explorerData: ()=>s.Z.generate("explorer_callback_move"),
                fenStats: ()=>s.Z.generate("web_eco_callback_stats_fen_search"),
                getActiveFens: ()=>s.Z.generate("web_game_fens_callback_by_user"),
                getGameView: (e,t)=>s.Z.generate("web_analysis_game_callback_game_view", {
                    type: e,
                    gameId: t
                }),
                getLessonTranslations: ()=>s.Z.generate("web_lesson_callback_translations"),
                getUserDetails: e=>s.Z.generate("web_user_callback_popup", {
                    username: e
                }),
                openingStats: (e,t)=>s.Z.generate("web_eco_callback_search_opening_stats", {
                    cleanUrl: e,
                    username: t
                }),
                retryAttempt: ()=>s.Z.generate("web_analysis_game_callback_retry_attempt"),
                saveSelfAnalysis: ()=>s.Z.generate("web_analysis_game_callback_self_analysis_create"),
                saveLibraryGameSelfAnalysis: ()=>s.Z.generate("web_analysis_library_game_callback_self_analysis_create"),
                searchMasterGames: e=>s.Z.generate("web_master_games_search", {
                    fen: e
                }),
                upgradeMembership: ()=>{
                    var e, t;
                    return s.Z.generate("web_membership", {
                        c: null != (e = (0,
                        n.c)().referrer) ? e : "analysis",
                        ref_id: null != (t = (0,
                        n.c)().ref_id) ? t : null
                    })
                }
                ,
                webAnalysisSaved: ()=>s.Z.generate("web_analysis_saved")
            }
        },
        995: function(e, t, a) {
            "use strict";
            var s = a(54713)
              , n = (e=>(e.AppInitialized = "AppInitialized",
            e))(n || {})
              , o = a(74338)
              , r = a(35174);
            const i = (0,
            r.I)();
            var l = a(99208)
              , c = a(34604)
              , u = a(24050)
              , d = a(27359)
              , h = a(32305)
              , p = a(64099)
              , m = a(25077)
              , b = a(61438)
              , g = a(923)
              , f = a(39761)
              , v = a(67858)
              , w = a(67438)
              , y = a(32614)
              , k = a(12089)
              , _ = a(5080)
              , C = Object.defineProperty
              , T = Object.defineProperties
              , S = Object.getOwnPropertyDescriptors
              , x = Object.getOwnPropertySymbols
              , E = Object.prototype.hasOwnProperty
              , O = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? C(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function addPlayMayContinue() {
                if (!p.F.playMayContinue)
                    return;
                const e = (0,
                g.j)()
                  , t = e.getSelectedNode()
                  , a = y.S.nodes[y.S.nodes.length - 1]
                  , s = (0,
                b.A)((n = ((e,t)=>{
                    for (var a in t || (t = {}))
                        E.call(t, a) && __defNormalProp(e, a, t[a]);
                    if (x)
                        for (var a of x(t))
                            O.call(t, a) && __defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, (0,
                m.M)({
                    fen: a.fen,
                    pv: p.F.playMayContinue.pv
                })),
                o = {
                    mateIn: p.F.playMayContinue.mateIn,
                    softLimit: 8
                },
                T(n, S(o))));
                var n, o;
                if (!function shouldInsertVariation() {
                    if (v.X.analysisMode !== f.Q.AnalysisModes.Full || !s.pvSan.length)
                        return !1;
                    const t = e.getRawLines()
                      , a = t[t.length - 1];
                    if (!a)
                        return !0;
                    const n = a.slice(1).map((e=>e.san));
                    return s.pvSan.join(" ") !== n.join(" ")
                }())
                    return;
                e.selectLineEnd();
                const r = (0,
                d.D4)({
                    score: p.F.playMayContinue.cp / 100,
                    mateIn: p.F.playMayContinue.mateIn
                });
                e.updateNode(a.ids, {
                    comment: `<br /><br />${(0,
                    h.dW)("Game may have continued...")}`
                }),
                (0,
                w.s)({
                    moves: s.pvSan,
                    score: r
                }),
                _.B.selectedTab === k.Y.Tabs.Review ? (0,
                g.j)().selectNode(0, -1) : e.selectNode(t.ids.line, t.ids.move)
            }
            var A = a(75536)
              , M = a(70962)
              , P = a(72212)
              , j = a(37067)
              , z = a(68635)
              , W = a(79321)
              , L = a(22964);
            const I = {
                [z.J.StreamTypes.Analyze]: function onAnalyze({data: e}) {
                    (0,
                    s.Uc)(p.F, (0,
                    j.H)(e)),
                    e.positions.forEach(((t,a)=>(0,
                    A.F)({
                        next: e.positions[a + 1],
                        node: y.S.nodes[a - 1],
                        position: t
                    })))
                },
                [z.J.StreamTypes.Done]: function onDone() {
                    if (!p.F.positions.length)
                        return function onFailure(e=L.b.DefaultErrorMessage) {
                            (0,
                            l.x)(e),
                            onError()
                        }();
                    (0,
                    s.Uc)(p.F, {
                        progress: 1
                    }),
                    addPlayMayContinue(),
                    P.y.emit(M.A.Events.AnalysisComplete)
                },
                [z.J.StreamTypes.Error]: onError,
                [z.J.StreamTypes.MaxAnalysisEval]: ()=>{}
                ,
                [z.J.StreamTypes.Progress]: function onProgress({progress: e}) {
                    (0,
                    s.Uc)(p.F, {
                        progress: e
                    })
                },
                [z.J.StreamTypes.Reanalyzing]: function onReanalyzing() {
                    (0,
                    s.Uc)(p.F, new c.S)
                }
            };
            function onError() {
                (0,
                W.G)(f.Q.AnalysisModes.Self),
                (0,
                u.K)(k.Y.Tabs.Analysis),
                (0,
                s.Uc)(p.F, {
                    progress: 0
                })
            }
            var R = a(82282)
              , N = a(37620)
              , B = a(7984)
              , F = a(67866);
            const D = (0,
            s.eI)({
                init() {
                    F.z.on(z.J.Events.AnalysisStream, this.onCEACStream),
                    i.on(n.AppInitialized, (()=>{
                        (0,
                        B._)() && (0,
                        R.u)()
                    }
                    ))
                },
                onCEACStream(e) {
                    (0,
                    N.r)() && !(0,
                    o.q)() && function onAnalysisStream({action: e, progress: t, data: a}) {
                        var s;
                        null == (s = I[e]) || s.call(I, {
                            progress: t,
                            data: a
                        })
                    }(e)
                }
            });
            var $ = a(67104)
              , q = a(81763);
            function isStreamMaxAnalysis(e) {
                return Boolean(e.id)
            }
            var U = a(78291);
            function updatePv({existingPv: e=[], newPv: t=[]}) {
                return t && t.length < 4 && e.length >= 4 && 0 === e.join(" ").indexOf(t.join(" ")) ? e : t
            }
            var Z = a(651)
              , G = Object.defineProperty
              , H = Object.defineProperties
              , V = Object.getOwnPropertyDescriptors
              , K = Object.getOwnPropertySymbols
              , Y = Object.prototype.hasOwnProperty
              , Q = Object.prototype.propertyIsEnumerable
              , on_max_analysis_stream_defNormalProp = (e,t,a)=>t in e ? G(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , on_max_analysis_stream_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    Y.call(t, a) && on_max_analysis_stream_defNormalProp(e, a, t[a]);
                if (K)
                    for (var a of K(t))
                        Q.call(t, a) && on_max_analysis_stream_defNormalProp(e, a, t[a]);
                return e
            }
              , on_max_analysis_stream_spreadProps = (e,t)=>H(e, V(t));
            var J = a(75109)
              , X = a(50250)
              , ee = a(28279)
              , te = a(64536);
            const ae = (0,
            s.eI)({
                init() {
                    F.z.on(z.J.Events.AnalysisStream, this.onCEACStream),
                    (0,
                    g.j)().onMany($.jd, this.onPositionChange),
                    ee.y.on(X.A.Events.EngineChanged, this.restartEngine)
                },
                onCEACStream(e) {
                    isStreamMaxAnalysis(e) && function onMaxAnalysisStream({action: e, err: t, id: a, engineType: s, move: n}) {
                        if (isStreamMaxAnalysis({
                            id: a
                        })) {
                            if (t)
                                return (0,
                                q.l)(),
                                (0,
                                l.x)(Z.R[z.J.ErrorTypes.Engine].message);
                            if (e === z.J.StreamTypes.MaxAnalysisEval)
                                return function onEval() {
                                    var e;
                                    a === U.V.activeId && (U.V.hasReceivedFirstEval = !0,
                                    U.V.lines.update({
                                        id: a,
                                        depth: n.depth,
                                        engineType: s,
                                        eval: on_max_analysis_stream_spreadProps(on_max_analysis_stream_spreadValues({}, n.eval[0]), {
                                            pv: updatePv({
                                                existingPv: null == (e = U.V.lines.find({
                                                    id: a
                                                })) ? void 0 : e.eval.pv,
                                                newPv: n.eval[0].pv
                                            })
                                        })
                                    }))
                                }();
                            if (e === z.J.StreamTypes.Done)
                                return function onDone() {
                                    (0,
                                    q.l)()
                                }()
                        }
                    }(e)
                },
                restartEngine() {
                    (0,
                    te.L)() && ((0,
                    q.l)(),
                    (0,
                    J.I)())
                },
                onPositionChange() {
                    U.V.activeId && (0,
                    q.l)()
                }
            });
            var se = a(6301)
              , ne = a(67988)
              , oe = a(74200)
              , re = a(32937)
              , ie = a(57367)
              , le = a(63754)
              , ce = a(94202);
            var ue = a(45157);
            var de = a(93705)
              , he = a(19107)
              , pe = a(93083)
              , me = a(60326);
            async function loadInitialAnalysis() {
                pe.G.diagramId ? async function loadFromDiagram(e) {
                    try {
                        const t = await ie.Z.post(le.Z.generate("web_tinymce_get_chessdiagram", {
                            id: e
                        }))
                          , {pgn: a, flipBoard: s} = (0,
                        oe.L7)(t);
                        s && (0,
                        re.v)(),
                        (0,
                        ce.w)({
                            pgn: a
                        }, {
                            allowMultiplePgns: !1
                        })
                    } catch (t) {
                        (0,
                        l.x)((0,
                        h.dW)("Sorry, there was an error loading the diagram."))
                    }
                }(pe.G.diagramId) : v.X.initialPgn ? (0,
                ce.w)({
                    pgn: v.X.initialPgn
                }, {
                    allowMultiplePgns: !1
                }) : v.X.initialFen && (0,
                ce.w)({
                    fen: v.X.initialFen
                }, {
                    allowMultiplePgns: !1
                }),
                v.X.gameType === f.Q.GameTypes.Library && function loadLibrary() {
                    const {libraryCollectionGames: e, librarySelectedCollectionGame: t} = window.chesscom.analysis;
                    (null == e ? void 0 : e.length) && e.forEach((e=>ue.p.analyses.add(e))),
                    ue.p.selectedSelfAnalysis = t
                }(),
                de.k.FetchedSavedGameOnLoadGameTypes.includes(v.X.gameType) && await (0,
                ne.i)(me.Ko.fullAnalysisDepth),
                (0,
                he.G)()
            }
            var be = a(61681);
            function getActiveSelfAnalysis() {
                var e;
                return ue.p.analyses.find(null != (e = ue.p.selectedSelfAnalysis) ? e : "")
            }
            var ge = a(143)
              , fe = a(80018)
              , ve = a(88847);
            const we = (0,
            s.eI)({
                init() {
                    const e = (0,
                    g.j)();
                    e.on($.QY.APIEvents.UpdatePGNHeaders, this.onUpdateHeaders),
                    e.onMany($.jd, this.onPositionChange),
                    loadInitialAnalysis()
                },
                onPositionChange(e) {
                    const t = (0,
                    g.j)();
                    if (ve.j.isGamePreviewActive || t.getMode().name === $.nl.Types.Setup)
                        return;
                    [$.QY.APIEvents.Load, $.QY.APIEvents.Move].includes(e.type) && !ue.p.isLoaded ? (0,
                    ge.W)(!0) : e.type === $.QY.APIEvents.DeletePosition && y.S.fen === (0,
                    se.H)() && (0,
                    ge.W)(!1);
                    const a = t.getPGN()
                      , s = getActiveSelfAnalysis();
                    s && ue.p.analyses.update({
                        id: s.id,
                        pgn: a
                    }),
                    function saveToCache(e) {
                        be.Z.set(de.k.Cache.Key, e)
                    }(a)
                },
                onUpdateHeaders() {
                    const e = getActiveSelfAnalysis();
                    e && ue.p.analyses.update({
                        id: e.id,
                        pgn: (0,
                        g.j)().getPGN(),
                        title: (0,
                        fe.h)(y.S.headers)
                    })
                }
            });
            var ye = a(91353);
            function addChessboardImagesPlugin(e) {
                const t = [(0,
                $.qU)(), (0,
                $.YP)()];
                (function hasBoardImagesFeatureAccess() {
                    return (0,
                    ye.FR)("chessboard_board_images") && !(0,
                    ye.FR)("chessboard_board_images_palette")
                }
                )() && t.push((0,
                $.gb)({
                    imagesBaseURL: "/bundles/web/images/sprites/board-images",
                    soundsBaseURL: "/bundles/web/sounds/board-images"
                })),
                function addChessboardPlugins(e, t) {
                    t.forEach((t=>{
                        e.game.plugins.has(t.name) || e.game.plugins.add(t)
                    }
                    ))
                }(e, t)
            }
            var ke = a(54173)
              , _e = a(594)
              , Ce = a(92866)
              , Te = a(53291)
              , Se = a(43608);
            var xe = Object.defineProperty
              , Ee = Object.defineProperties
              , Oe = Object.getOwnPropertyDescriptors
              , Ae = Object.getOwnPropertySymbols
              , Me = Object.prototype.hasOwnProperty
              , Pe = Object.prototype.propertyIsEnumerable
              , create_chessboard_defNormalProp = (e,t,a)=>t in e ? xe(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , create_chessboard_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    Me.call(t, a) && create_chessboard_defNormalProp(e, a, t[a]);
                if (Ae)
                    for (var a of Ae(t))
                        Pe.call(t, a) && create_chessboard_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            function createChessboard(e) {
                var t, a, s;
                const {id: n, options: o, mode: r, plugins: i, state: l, excludedPlugins: c} = e;
                if (n in _e.q.chessboards)
                    throw new Error("Chessboard already created");
                const u = (0,
                $.n8)((0,
                $.NQ)({
                    exclude: null != c ? c : []
                }), null != (s = null == (a = (t = ke.f).getDefaultChessboardPlugins) ? void 0 : a.call(t)) ? s : [])
                  , d = u.find((e=>e.name === $.th.Sounds.Plugin.Name))
                  , h = u.find((e=>e.name === $.th.ArrowKeys.Plugin.Name));
                !_e.q.arrowKeysPlugin && h && (_e.q.arrowKeysPlugin = h),
                !_e.q.soundPlugin && d && (_e.q.soundPlugin = d);
                const p = (0,
                $.n8)(u, i || []).filter((e=>e.name !== $.th.Sounds.Plugin.Name)).concat(_e.q.soundPlugin)
                  , m = document.createElement("chess-board");
                var b, g;
                return m.className = "board",
                m.createGame({
                    el: m,
                    options: (b = create_chessboard_spreadValues(create_chessboard_spreadValues({}, _e.q.boardOptions), o),
                    g = {
                        id: n,
                        test: Boolean(window.Config.cypress)
                    },
                    Ee(b, Oe(g))),
                    mode: r,
                    plugins: p
                }),
                (null == c ? void 0 : c.includes($.th.BoardImages.Plugin.Name)) || addChessboardImagesPlugin(m),
                l && (m.state = function createChessboardState(e, t) {
                    const a = {};
                    return Object.keys(t).forEach((s=>{
                        const n = t[s]
                          , handler = ()=>{
                            const t = n.getValue(e);
                            t !== a[s] && (a[s] = t)
                        }
                        ;
                        handler();
                        const o = (0,
                        Se.Z)(handler, n.debounce);
                        e.parentNode && e.game.onMany(n.events, o),
                        e.addEventListener(Te._.Events.BoardAttached, (()=>{
                            handler(),
                            e.game.onMany(n.events, o)
                        }
                        )),
                        e.addEventListener(Te._.Events.BoardDetached, (()=>{
                            e.game.offMany(n.events.map((e=>({
                                type: e,
                                handler: o
                            }))))
                        }
                        ))
                    }
                    )),
                    (0,
                    Ce.iH)(a),
                    a
                }(m, l)),
                _e.q.chessboards[n] = m,
                new Promise((e=>{
                    m.game.once("RendererSet", (()=>{
                        setTimeout(e, 0)
                    }
                    ))
                }
                ))
            }
            function removeChessboardActivePlugins(e) {
                e.game.plugins.remove($.th.Sounds.Plugin.Name),
                e.game.plugins.remove($.th.ArrowKeys.Plugin.Name)
            }
            var je = a(33322)
              , ze = a(63641)
              , We = a(14965);
            var Le = a(6454);
            const Ie = {
                debounce: 0,
                events: [$.QY.OptionsEvents.Update],
                getValue: e=>e.game.getOptions().flipped
            };
            var Re, Ne;
            (Ne = Re || (Re = {})).Id = "analysis-board",
            Ne.DefaultNodeIds = {
                line: 0,
                move: -1
            };
            var Be = a(53418)
              , Fe = Object.defineProperty
              , De = Object.getOwnPropertySymbols
              , $e = Object.prototype.hasOwnProperty
              , qe = Object.prototype.propertyIsEnumerable
              , create_board_defNormalProp = (e,t,a)=>t in e ? Fe(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , create_board_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    $e.call(t, a) && create_board_defNormalProp(e, a, t[a]);
                if (De)
                    for (var a of De(t))
                        qe.call(t, a) && create_board_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            function createBoard() {
                createChessboard({
                    id: Re.Id,
                    mode: Le.W,
                    options: create_board_spreadValues({}, Be.E.get("boardOptions")),
                    plugins: [(0,
                    $.qU)(), (0,
                    $.YP)()],
                    state: {
                        isFlipped: Ie
                    }
                }),
                function replaceActiveChessboard() {
                    var e;
                    (0,
                    We.x)().forEach(removeChessboardActivePlugins);
                    const t = (0,
                    ze.g)();
                    _e.q.soundPlugin && t.game.plugins.add(_e.q.soundPlugin),
                    _e.q.arrowKeysPlugin && t.game.plugins.add(_e.q.arrowKeysPlugin),
                    null == (e = document.querySelector(".board-layout-chessboard .board")) || e.replaceWith(t),
                    (0,
                    je.q)()
                }(),
                ve.j.isInitialized = !0
            }
            var Ue = a(71350);
            function updateHeaders() {
                y.S.headers = (0,
                g.j)().getHeaders(),
                y.S.pgn = (0,
                g.j)().getPGN(),
                y.S.userColor = (0,
                Ue.x)()
            }
            var Ze = a(57542);
            function updateModel() {
                const e = (0,
                g.j)()
                  , t = e.getNodeIds();
                y.S.fen = e.getFEN(),
                y.S.hasLegalMoves = e.getLegalMoves().length > 0,
                y.S.headers = e.getHeaders(),
                y.S.ids = t,
                y.S.isOver = 0 === t.line && e.isAtEndOfLine(),
                y.S.isPositionValid = e.getContext().game.isPositionValid({}),
                y.S.mode = e.getMode().name,
                y.S.nodes = e.getLine(0),
                y.S.pgn = e.getPGN(),
                y.S.piecesLeft = e.getPieces().keys().length,
                y.S.selectedNode = e.getSelectedNode(),
                y.S.selectedPly = function getSelectedPly() {
                    const e = (0,
                    g.j)();
                    return (0,
                    Ze.X)({
                        node: e.getSelectedNode(),
                        startingMoveNumber: e.getStartingMoveNumber(),
                        turn: e.getTurn()
                    })
                }(),
                y.S.turn = e.getTurn(),
                y.S.userColor = (0,
                Ue.x)()
            }
            const Ge = (0,
            s.eI)({
                init() {
                    createBoard(),
                    this.addListeners()
                },
                addListeners() {
                    const e = (0,
                    g.j)();
                    updateModel(),
                    e.on($.QY.APIEvents.UpdatePGNHeaders, updateHeaders),
                    e.onMany($.jd, updateModel),
                    i.on(n.AppInitialized, this.setBoardPosition)
                },
                setBoardPosition() {
                    (pe.G.flip || y.S.userColor === $.lA.ColorsAsNumbers.Black) && (0,
                    re.v)(),
                    (0,
                    g.j)().selectNode(0, pe.G.move || -1)
                }
            });
            function onSocketResponse(e) {
                var t, a;
                if (e.message === z.J.StreamTypes.Limit)
                    return onError(z.J.ErrorTypes.AtLimit);
                if ([e.message, e.err].includes(z.J.StreamTypes.BadGame))
                    return onError(z.J.ErrorTypes.BadGame);
                if ([e.message, e.err].includes(z.J.StreamTypes.MissingMoves))
                    return onError(z.J.ErrorTypes.NoMoves);
                if ([e.message, e.err].includes(z.J.StreamTypes.UnsupportedVariant))
                    return onError(z.J.ErrorTypes.UnsupportedVariant);
                if (e.data || (e.data = e),
                (null == (t = e.black) ? void 0 : t.all) && (null == (a = e.white) ? void 0 : a.all))
                    return F.z.emit(z.J.Events.CAPSStream, e);
                function onError(e) {
                    Z.R[e] && (0,
                    l.x)(Z.R[e].message),
                    F.z.emit(z.J.Events.AnalysisStream, {
                        action: z.J.StreamTypes.Error
                    })
                }
                F.z.emit(z.J.Events.AnalysisStream, e)
            }
            var He = a(31443)
              , Ve = a(27523);
            const Ke = (0,
            s.eI)({
                init() {
                    Ve.L.on(He.s.Events.MessageReceived, onSocketResponse)
                }
            });
            var Ye = a(10268)
              , Qe = a(45156);
            const Je = (0,
            s.eI)({
                init() {
                    P.y.on(M.A.Events.AnalysisComplete, this.onAnalysisComplete),
                    Qe.e.on(Ye.G.Events.ClickNode, (({move: e})=>{
                        (0,
                        g.j)().selectNode(0, e)
                    }
                    ))
                },
                onAnalysisComplete() {
                    me.Ko.chartsEnabled && Qe.e.emit(Ye.G.Events.ToggleCharts, {
                        value: me.Ko.chartsEnabled
                    })
                }
            });
            var Xe = a(62205)
              , et = a(69475)
              , tt = a(42203)
              , at = a(22643)
              , st = a(38389)
              , nt = a(41561);
            async function getTablebaseEval(e, t) {
                var a, s;
                const n = e.getFEN();
                if (!function isFenValid(e) {
                    if (!e.getContext().game.isPositionValid({}))
                        return !1;
                    if (e.getPieces().keys().length > st.g.MaxPieces)
                        return !1;
                    if ((0,
                    nt.L)({
                        game: e
                    }))
                        return !1;
                    return !0
                }(e))
                    return (0,
                    at.xq)({
                        tablebaseOutcome: null
                    }),
                    void tt.H.emit("evaluation.update");
                const o = null != (a = t.getSummary(n)) ? a : await t.fetchSummary(n);
                (0,
                at.xq)({
                    tablebaseOutcome: null != (s = null == o ? void 0 : o.outcome) ? s : null
                }),
                tt.H.emit("evaluation.update")
            }
            var ot = a(46806)
              , rt = a(57634)
              , it = a(85571);
            var lt = a(63148)
              , ct = a(87481)
              , ut = a(49815);
            function isWdlBarEnabled() {
                return me.Ko.evalBarModesEnabled && me.Ko.isWdlBarEnabled
            }
            function useManualEval() {
                return _.B.selectedTab === k.Y.Tabs.Review || !y.S.isPositionValid
            }
            var dt, ht = a(21308);
            (e=>{
                let t;
                (t = e.Events || (e.Events = {})).AnalysisReceived = "AnalysisReceived"
            }
            )(dt || (dt = {}));
            const pt = (0,
            r.I)();
            var mt = a(1122)
              , bt = a(40458);
            const gt = (0,
            s.eI)({
                async init() {
                    await async function getActiveFens() {
                        try {
                            const {data: e} = await ie.Z.post(le.Z.generate("web_game_fens_callback_by_user"), {
                                userId: Be.E.get("id")
                            });
                            it.v.activeFens = e.gameFens
                        } catch (e) {}
                    }(),
                    (0,
                    g.j)().onMany($.jd, (0,
                    Se.Z)(this.onPositionChange, 100)),
                    (0,
                    g.j)().on($.QY.APIEvents.Reload, this.onReload),
                    i.on(n.AppInitialized, this.initEvaluation),
                    tt.H.on("evaluation.update", this.onUpdateEvaluation),
                    mt.r.on(k.Y.Events.SelectTab, this.overrideScoreIfNecessary),
                    pt.on(dt.Events.AnalysisReceived, this.overrideScoreIfNecessary)
                },
                onPositionChange() {
                    this.checkActiveFens(),
                    this.overrideScoreIfNecessary(),
                    function isTablebaseBarEnabled() {
                        return (0,
                        ye.FR)("tb_eval_bar_option") && me.Ko.evalBarModesEnabled && me.Ko.isTablebaseBarEnabled
                    }() && getTablebaseEval((0,
                    g.j)(), bt.$),
                    isWdlBarEnabled() && (0,
                    Xe.eB)()
                },
                onReload() {
                    const e = (0,
                    g.j)();
                    (0,
                    et.k)({
                        fen: e.getFEN(),
                        moves: "",
                        gameType: e.getVariant()
                    })
                },
                overrideScoreIfNecessary() {
                    if (useManualEval()) {
                        if (!y.S.isPositionValid)
                            return tt.H.emit("evaluation.override", !1);
                        tt.H.emit("evaluation.override", (0,
                        ht.m)())
                    }
                },
                checkActiveFens() {
                    (function activeFensContainFen() {
                        return it.v.activeFens.some((({fen: e})=>e.includes(y.S.fen) || y.S.fen.includes(e)))
                    }
                    )() && (0,
                    rt.B)(!1)
                },
                initEvaluation() {
                    void 0 === it.v.engineEnabled && ot.v.settings.engineName && !pe.G.noEngine && (0,
                    rt.B)(!0)
                },
                onUpdateEvaluation() {
                    it.v.evaluation = (0,
                    at.y0)(),
                    it.v.engineName || (it.v.engineName = function getEngineFullName() {
                        var e, t;
                        const a = (0,
                        lt.mW)()
                          , s = ct.h$[ot.v.settings.engineName];
                        return (null == a ? void 0 : a.name) && s ? `${a.name.full}${(null == (t = null == (e = s.paths) ? void 0 : e.settings) ? void 0 : t[ut.Y.Settings.UseNNUE]) ? " NNUE" : ""}` : ""
                    }())
                }
            });
            var ft = a(58819)
              , vt = a(40784)
              , wt = a(50330)
              , yt = a(51878);
            var kt = a(34104)
              , _t = a(48894);
            var Ct = Object.defineProperty
              , Tt = Object.defineProperties
              , St = Object.getOwnPropertyDescriptors
              , xt = Object.getOwnPropertySymbols
              , Et = Object.prototype.hasOwnProperty
              , Ot = Object.prototype.propertyIsEnumerable
              , assign_opening_commentary_defNormalProp = (e,t,a)=>t in e ? Ct(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , assign_opening_commentary_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    Et.call(t, a) && assign_opening_commentary_defNormalProp(e, a, t[a]);
                if (xt)
                    for (var a of xt(t))
                        Ot.call(t, a) && assign_opening_commentary_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            var At = a(89188)
              , Mt = a(25292)
              , Pt = Object.defineProperty
              , jt = Object.defineProperties
              , zt = Object.getOwnPropertyDescriptors
              , Wt = Object.getOwnPropertySymbols
              , Lt = Object.prototype.hasOwnProperty
              , It = Object.prototype.propertyIsEnumerable
              , get_opening_stats_defNormalProp = (e,t,a)=>t in e ? Pt(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function getCommentary(e) {
                const t = (0,
                At.j)();
                if (!t)
                    return {
                        stats: "",
                        title: ""
                    };
                const a = y.S.nodes.slice(0, t.ids.move + 1);
                return {
                    stats: (0,
                    h.dW)('You\'ve played this opening <a href="%url%" target="_blank">%number%</a> times, with a %winrate% win rate.', {
                        "%winrate%": `${Math.round(e.wins / e.total / 10 * 1e3) || 0}%`,
                        "%number%": e.total,
                        "%url%": (0,
                        Mt.E)({
                            moveList: a.map((e=>e.san)).join("+"),
                            ply: a[a.length - 1].ids.move + 1
                        })
                    }),
                    title: (0,
                    h.dW)("This is the <a>%name%</a> opening.", {
                        "%name%": e.name.split(":")[0]
                    })
                }
            }
            function getSlug(e) {
                return e.split(":")[0].replace(/ /g, "-").replace(/'/g, "").replace(/Ã³/, "o")
            }
            function updateOpening(e) {
                var t, a;
                _t.j.openingStats = (t = ((e,t)=>{
                    for (var a in t || (t = {}))
                        Lt.call(t, a) && get_opening_stats_defNormalProp(e, a, t[a]);
                    if (Wt)
                        for (var a of Wt(t))
                            It.call(t, a) && get_opening_stats_defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, e),
                a = {
                    commentary: getCommentary(e)
                },
                jt(t, zt(a)))
            }
            var Rt = a(2056)
              , Nt = a(64647);
            var Bt = a(28287);
            function isOneOf(e) {
                return function isType(t) {
                    return function enumToArray(e) {
                        return e.length ? e : Object.values(e)
                    }(e).includes(t.type)
                }
            }
            var Ft = a(54987)
              , Dt = a(56950)
              , $t = a(71001)
              , qt = a(88017);
            function completeRetry(e, t) {
                $t.D.collection.update({
                    move: t,
                    attemptMoveKey: e
                }),
                (0,
                Ft.f)(),
                Dt.m.emit(qt.h.RetryCompleted)
            }
            var Ut = a(44975)
              , Zt = a(32726)
              , Gt = a(43153);
            var Ht = a(23344)
              , Vt = a(26888);
            function createMoveBackward(e) {
                const {api: t} = e
                  , a = t.moveBackward;
                return function moveBackward() {
                    const e = t.getNodeIds();
                    return (0,
                    Vt.h)(),
                    (0,
                    o.q)() ? ((0,
                    Bt.g)(_t.j.selectedMoveNumber - 1),
                    null) : 0 !== e.line && e.move > 0 ? t.selectNode(y.S.ids.line, y.S.ids.move - 1) : a()
                }
            }
            function createMoveForward(e) {
                const {api: t} = e
                  , a = t.moveForward;
                return function moveForward(e, s) {
                    const n = t.getNodeIds();
                    if ((0,
                    Vt.h)(),
                    0 === n.line && t.isAtEndOfLine())
                        return null;
                    if (0 !== n.line) {
                        const e = Ht.I.openLines.find(n.line);
                        return e ? n.move <= e.length && t.selectNode(n.line, n.move + 1) : (0,
                        Bt.g)(_t.j.selectedMoveNumber + 1),
                        null
                    }
                    return a(e, s)
                }
            }
            function createSelectLineEnd(e) {
                const {api: t} = e
                  , a = t.selectLineEnd;
                return function selectLineEnd() {
                    const e = t.getNodeIds();
                    (0,
                    Vt.h)();
                    const s = Ht.I.openLines.find(e.line);
                    return 0 !== e.line && s ? t.selectNode(y.S.ids.line, s.length - 1) : a()
                }
            }
            function createSelectLineStart(e) {
                const {api: t} = e
                  , a = t.selectLineStart;
                return function selectLineStart() {
                    const e = t.getNodeIds();
                    return (0,
                    Vt.h)(),
                    0 !== e.line ? t.selectNode(e.line, 0) : a()
                }
            }
            var Kt = a(93225);
            function createReviewControlsPlugin() {
                return {
                    apiOverrides: {
                        moveBackward: createMoveBackward,
                        moveForward: createMoveForward,
                        selectLineEnd: createSelectLineEnd,
                        selectLineStart: createSelectLineStart
                    },
                    match: [{
                        condition: isOneOf([$.QY.APIEvents.MoveBackward, $.QY.APIEvents.MoveForward, $.QY.APIEvents.SelectLineEnd, $.QY.APIEvents.SelectLineStart]),
                        handler: assignSelectedMoveNumber
                    }, {
                        condition: (e = $.QY.APIEvents.Move,
                        function isType(t) {
                            return e === t.type
                        }
                        ),
                        handler: function onMove(e, t) {
                            var a;
                            if (e.data.move && !e.data.move.userGenerated)
                                return;
                            if ((0,
                            o.q)()) {
                                const t = (0,
                                Kt.C)();
                                return function submitRetryAttempt(e, {bestMove: t, moveNumber: a, parentMoveKey: s, playedMove: n}) {
                                    var o;
                                    if (!$t.D.activeMove || !e.beforeFen)
                                        return;
                                    const r = (0,
                                    Gt.S)(e)
                                      , i = null == (o = (0,
                                    Zt.Y)()) ? void 0 : o.viewedAnswer;
                                    if ($t.D.collection.update({
                                        color: e.color,
                                        fen: e.fen,
                                        move: a,
                                        parentMoveKey: s,
                                        san: e.san
                                    }),
                                    r === n)
                                        return completeRetry(s, $t.D.activeMove);
                                    if (r === t) {
                                        const t = Ut.V.getBestMoveKey(e, $t.D.activeMove, i);
                                        if (t)
                                            return completeRetry(t, $t.D.activeMove)
                                    }
                                    Ut.V.analyze(e, $t.D.activeMove)
                                }(e.data.move, {
                                    bestMove: t.suggestedMove.moveLan,
                                    moveNumber: t.ids.move,
                                    parentMoveKey: t.id,
                                    playedMove: t.playedMove.moveLan
                                })
                            }
                            if (function shouldSwitchToAnalysisTab(e) {
                                const t = Ht.I.openLines.find(e.ids.line);
                                return 0 !== e.ids.line && (!t || e.ids.move >= t.length)
                            }(e.data.move))
                                return (0,
                                u.K)(k.Y.Tabs.Analysis);
                            e.data.move.san === (null == (a = (0,
                            kt.N)()[_t.j.selectedMoveNumber + 1]) ? void 0 : a.san) && assignSelectedMoveNumber(e, t)
                        }
                    }],
                    name: L.b.ChessboardPlugins.ReviewControls
                };
                var e;
                function assignSelectedMoveNumber(e, t) {
                    const {api: a} = t;
                    _t.j.animateToPosition.active = !1,
                    clearTimeout(_t.j.animateToPosition.timeout),
                    (0,
                    Bt.g)(a.getNodeIds().move)
                }
            }
            var Yt = a(82013)
              , Qt = Object.defineProperty
              , Jt = Object.defineProperties
              , Xt = Object.getOwnPropertyDescriptors
              , ea = Object.getOwnPropertySymbols
              , ta = Object.prototype.hasOwnProperty
              , aa = Object.prototype.propertyIsEnumerable
              , fetch_translated_urls_defNormalProp = (e,t,a)=>t in e ? Qt(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            let sa;
            async function fetchTranslatedUrls() {
                if ("en_US" === window.context.i18n.locale)
                    return Yt.H;
                if (!sa) {
                    const {data: e} = await ie.Z.get(le.Z.generate("web_lesson_callback_translations"));
                    if (!(null == e ? void 0 : e.length) && "default_and_user" === window.context.i18n.contentLanguage)
                        return Yt.H;
                    sa = Object.keys(Yt.H).reduce(((t,a)=>{
                        const s = e.find((({parent_url: e})=>e === Yt.H[a].lesson.url));
                        var n, o;
                        return s && (t[a] = (n = ((e,t)=>{
                            for (var a in t || (t = {}))
                                ta.call(t, a) && fetch_translated_urls_defNormalProp(e, a, t[a]);
                            if (ea)
                                for (var a of ea(t))
                                    aa.call(t, a) && fetch_translated_urls_defNormalProp(e, a, t[a]);
                            return e
                        }
                        )({}, Yt.H[a]),
                        o = {
                            lesson: {
                                url: s.lesson_url,
                                course: s.course_url
                            }
                        },
                        Jt(n, Xt(o)))),
                        t
                    }
                    ), {})
                }
                return sa
            }
            var na = a(46018)
              , oa = Object.defineProperty
              , ra = Object.getOwnPropertySymbols
              , ia = Object.prototype.hasOwnProperty
              , la = Object.prototype.propertyIsEnumerable
              , get_themes_defNormalProp = (e,t,a)=>t in e ? oa(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , get_themes_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    ia.call(t, a) && get_themes_defNormalProp(e, a, t[a]);
                if (ra)
                    for (var a of ra(t))
                        la.call(t, a) && get_themes_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            const ca = (0,
            s.eI)({
                init() {
                    P.y.on(M.A.Events.AnalysisComplete, this.onAnalysisComplete),
                    Qe.e.on(Ye.G.Events.ClickNode, this.onChartsClick),
                    mt.r.on(k.Y.Events.SelectTab, this.onSelectTab)
                },
                addChessboardPlugin() {
                    (0,
                    g.j)().plugins.has(L.b.ChessboardPlugins.ReviewControls) || _.B.selectedTab !== k.Y.Tabs.Review || (0,
                    g.j)().plugins.add(createReviewControlsPlugin())
                },
                removeChessboardPlugin() {
                    (0,
                    g.j)().plugins.remove(L.b.ChessboardPlugins.ReviewControls)
                },
                async onAnalysisComplete() {
                    this.addChessboardPlugin(),
                    function assignKeyMoves() {
                        _t.j.keyMoves = (0,
                        kt.N)().filter((e=>e.isKeyMove)).reduce(((e,t)=>(e[(0,
                        $.RS)(t.color)].push(t.ids.move),
                        e)), {
                            black: [],
                            white: []
                        })
                    }(),
                    function assignInitialColor() {
                        var e;
                        const t = (0,
                        yt.D)();
                        t && !(null == (e = wt.T.getCached()) ? void 0 : e.selectedColor) && (0,
                        vt.O)(t)
                    }(),
                    pe.G.move || _.B.selectedTab !== k.Y.Tabs.Review || (0,
                    g.j)().selectNode(0, -1),
                    await async function getOpeningStats() {
                        try {
                            if (!p.F.book || !p.F.book.url)
                                return;
                            const {data: e} = await ie.Z.get(le.Z.generate("web_eco_callback_search_opening_stats", {
                                cleanUrl: p.F.book.url,
                                username: Be.E.get("username")
                            }));
                            updateOpening(e)
                        } catch (e) {
                            !async function retryRequest() {
                                try {
                                    const {data: e} = await ie.Z.get(le.Z.generate("web_eco_callback_search_opening_stats", {
                                        cleanUrl: getSlug(p.F.book.name),
                                        username: Be.E.get("username")
                                    }));
                                    updateOpening(e)
                                } catch (e) {}
                            }()
                        }
                    }(),
                    await async function getSuggestedLeavingBookMoves() {
                        var e;
                        const t = (0,
                        At.j)();
                        if (!t)
                            return;
                        const a = (0,
                        g.j)().getTCN().match(/.{1,2}/g)
                          , s = t.ids.move;
                        if (!a || !y.S.nodes)
                            return;
                        const n = y.S.nodes[s];
                        try {
                            const {data: {suggestedMoves: o}} = await ie.Z.post(Nt._.explorerData(), {
                                color: _t.j.selectedColor === L.b.Colors.Both ? (0,
                                $.RS)(t.color) : _t.j.selectedColor,
                                gameSource: Rt.O.Explorer.GameSource.Master,
                                gameType: void 0,
                                moveList: y.S.nodes.slice(0, s).map((({color: e, fen: t, san: s},n)=>({
                                    activeColor: (0,
                                    $.dR)(e),
                                    encodedMove: a[n],
                                    nextFen: t,
                                    sanMove: s
                                }))),
                                nextFen: n.fen,
                                ply: null != (e = n.ply) ? e : -1,
                                sanMove: n.san,
                                tcnMove: a[s]
                            });
                            _t.j.suggestedLeavingBookMoves = o.map((e=>{
                                var t, a;
                                const n = y.S.nodes.slice(0, s + 1).map((e=>e.san)).join("+");
                                return e.link = (0,
                                Mt.E)({
                                    moveList: `${n}+${e.sanMove}`,
                                    ply: (null != (a = null == (t = y.S.selectedNode) ? void 0 : t.ids.move) ? a : 0) + 2
                                }),
                                e
                            }
                            ))
                        } catch (o) {}
                    }(),
                    await async function getThemes(e, t=3) {
                        const a = await fetchTranslatedUrls()
                          , {black: s, white: n} = p.F.themes.weights
                          , o = e ? p.F.themes.weights[(0,
                        $.RS)(e)] : get_themes_spreadValues(get_themes_spreadValues({}, s), n);
                        function getWeight(t) {
                            var a, o;
                            return e ? p.F.themes.weights[(0,
                            $.RS)(e)][t] : (null != (a = s[t]) ? a : 0) > (null != (o = n[t]) ? o : 0) ? s[t] : n[t]
                        }
                        na.z.collection = Object.keys(o).filter((e=>a[e])).map((e=>({
                            label: a[e].label,
                            origName: e,
                            puzzles: a[e].puzzles,
                            lesson: a[e].lesson,
                            insights: a[e].insights,
                            weight: getWeight(e)
                        }))).sort(((e,t)=>t.weight - e.weight)).slice(0, t).reduce(((e,t)=>(t.lesson && e.lessons.push({
                            label: t.label,
                            url: le.Z.generate("web_lesson_view", {
                                url: t.lesson.url,
                                course: t.lesson.course
                            })
                        }),
                        t.puzzles && e.puzzles.push({
                            label: t.label,
                            url: le.Z.generate("web_tactic_index", {
                                themes: t.puzzles.join(",")
                            })
                        }),
                        t.insights && !e.insights.find((e=>{
                            var a;
                            return e.label === (null == (a = t.insights) ? void 0 : a.label)
                        }
                        )) && e.insights.push({
                            label: t.insights.label,
                            url: `${le.Z.generate("web_insights")}#${t.insights.url}`
                        }),
                        e)), {
                            lessons: [],
                            puzzles: [],
                            insights: []
                        })
                    }(y.S.userColor),
                    await async function assignOpeningCommentary() {
                        const e = (0,
                        g.j)().getTCN()
                          , t = (0,
                        kt.N)().slice(0, p.F.bookPly)
                          , {data: a} = await ie.Z.get(le.Z.generate("web_eco_callback_search_opening_commentary", {
                            tcn: e
                        }));
                        a && t.forEach((t=>{
                            if (!t.scenarios.book)
                                return;
                            const s = e.slice(0, 2 * t.ids.move + 2)
                              , n = a.find((e=>e.tcn === s));
                            var o, r;
                            n && p.F.positions.update({
                                analysisType: n.commentary,
                                id: t.id,
                                playedMove: (o = assign_opening_commentary_spreadValues({}, t.playedMove),
                                r = {
                                    speech: n.commentary
                                },
                                Tt(o, St(r)))
                            })
                        }
                        ))
                    }()
                },
                onChartsClick({move: e}) {
                    (0,
                    Bt.g)(e)
                },
                onSelectTab({previousTab: e, nextTab: t}) {
                    e === k.Y.Tabs.Review && this.removeChessboardPlugin(),
                    t === k.Y.Tabs.Review && (0,
                    ft.u)() && this.addChessboardPlugin()
                }
            });
            var ua = a(44748)
              , da = a(5645)
              , ha = a(17686);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            var pa = a(91322);
            const ma = (0,
            s.eI)({
                init() {
                    var e, t;
                    !function toggleHideBoardIcons(e) {
                        const t = document.getElementById("board-layout-controls");
                        t && (0,
                        da.o)(t, ha.I.BodyClass.HideBoardIcons, e)
                    }(!0),
                    null == (e = document.getElementById("board-controls-flip")) || e.addEventListener("click", re.v),
                    null == (t = document.getElementById("board-controls-settings")) || t.addEventListener("click", pa.W),
                    Qe.e.on(Ye.G.Events.ChangeActiveTab, this.onChangeActiveChartsTab),
                    Qe.e.on(Ye.G.Events.ToggleCharts, this.onToggleCharts)
                },
                onChangeActiveChartsTab({tab: e}) {
                    (0,
                    ua.b)(!e)
                },
                async onToggleCharts({value: e}) {
                    e && await async function initChartsController() {
                        await (0,
                        s.tL)(Promise.all([a.e(840), a.e(292)]).then(a.bind(a, 70095)))
                    }()
                }
            });
            var ba = a(29983)
              , ga = a(72829)
              , fa = a(12601)
              , va = a(3527)
              , wa = a.n(va)
              , ya = a(26908)
              , ka = a(74645);
            function getGameOverEffects() {
                const e = (0,
                g.j)()
                  , {headers: t, pgn: a} = y.S
                  , s = e.getPieces().getCollection();
                if (t.Result === $.lA.Results.None)
                    return [];
                const n = wa().createGame({
                    analysis: !0,
                    pgn: a
                })
                  , o = function getKings() {
                    return Object.values(s).reduce(((e,t)=>(t.type === $.lA.Piece.Types.King && (e[t.color] = t.square),
                    e)), {
                        [$.lA.ColorsAsNumbers.Black]: void 0,
                        [$.lA.ColorsAsNumbers.White]: void 0
                    })
                }();
                if (!o[$.lA.ColorsAsNumbers.Black] || !o[$.lA.ColorsAsNumbers.White])
                    return [];
                if (t.Result === $.lA.Results.Draw)
                    return [{
                        square: o[$.lA.ColorsAsNumbers.Black],
                        type: ya.x.Classifications.Types.DrawBlack
                    }, {
                        square: o[$.lA.ColorsAsNumbers.White],
                        type: ya.x.Classifications.Types.DrawWhite
                    }];
                const r = t.Result === $.lA.Results.White ? $.lA.ColorsAsNumbers.White : $.lA.ColorsAsNumbers.Black
                  , i = function getGameOverType(e, t) {
                    var a;
                    const s = null == (a = e.Termination) ? void 0 : a.split(" ").pop();
                    return t.inCheckmate() || "checkmate" === s ? ka.jl.Checkmate : "time" === s ? ka.jl.Time : "resignation" === s || "abandoned" === s ? ka.jl.Resignation : null
                }(t, n)
                  , l = function getLosingEffect() {
                    const {Types: e} = ya.x.Classifications;
                    if (i === ka.jl.Checkmate)
                        return r === $.lA.ColorsAsNumbers.White ? e.CheckmateBlack : e.CheckmateWhite;
                    if (i === ka.jl.Time)
                        return r === $.lA.ColorsAsNumbers.White ? e.TimeoutBlack : e.TimeoutWhite;
                    if (i === ka.jl.Resignation)
                        return r === $.lA.ColorsAsNumbers.White ? e.ResignBlack : e.ResignWhite;
                    return null
                }()
                  , c = [{
                    square: o[r],
                    type: ya.x.Classifications.Types.Winner
                }];
                return l && c.push({
                    square: r === $.lA.ColorsAsNumbers.White ? o[$.lA.ColorsAsNumbers.Black] : o[$.lA.ColorsAsNumbers.White],
                    type: l
                }),
                c
            }
            var _a, Ca, Ta = a(73730), Sa = a(72308), xa = a(89065);
            (Ca = _a || (_a = {})).ArrowColor = "#96be46",
            Ca.Key = "analysis-markings";
            var Ea = a(20318)
              , Oa = a(66391)
              , Aa = a(37921);
            function showMarkings() {
                return !!((0,
                Sa.W)() && me.Ko.boardFeedbackEnabled && (0,
                Aa.i)() && (0,
                ft.u)()) && (_.B.selectedTab === k.Y.Tabs.Review ? 0 === y.S.ids.line && !(0,
                o.q)() : v.X.analysisMode === f.Q.AnalysisModes.Full)
            }
            var Ma = Object.defineProperty
              , Pa = Object.getOwnPropertySymbols
              , ja = Object.prototype.hasOwnProperty
              , za = Object.prototype.propertyIsEnumerable
              , update_markings_defNormalProp = (e,t,a)=>t in e ? Ma(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , update_markings_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    ja.call(t, a) && update_markings_defNormalProp(e, a, t[a]);
                if (Pa)
                    for (var a of Pa(t))
                        za.call(t, a) && update_markings_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            function updateMarkings() {
                var e, t;
                const a = (0,
                g.j)()
                  , s = (0,
                Sa.W)();
                a.markings.removeAllWhere({
                    tags: [_a.Key]
                });
                const n = function showArrows() {
                    var e;
                    const t = [k.Y.Tabs.Analysis, k.Y.Tabs.Details]
                      , a = _.B.selectedTab === k.Y.Tabs.Review && (0,
                    Oa.k)()
                      , s = (0,
                    Sa.W)();
                    return showMarkings() && (me.Ko.feedbackEnabled || a) && (t.includes(_.B.selectedTab) || a) && (null == s ? void 0 : s.classification) !== ya.x.Classifications.Types.Book && (!Ea.x.IgnoreBestMoveClassifications.includes(null == (e = (0,
                    Sa.W)()) ? void 0 : e.classification) || (null == s ? void 0 : s.playedMove.moveLan) === (null == s ? void 0 : s.suggestedMove.moveLan))
                }()
                  , o = function showEffects() {
                    const e = [k.Y.Tabs.Analysis, k.Y.Tabs.Details, k.Y.Tabs.Review];
                    return showMarkings() && e.includes(_.B.selectedTab)
                }();
                if (!s || !n && !o)
                    return;
                const r = (0,
                Ta.H)(s.playedMove.moveLan)
                  , i = function getPositionClassification(e) {
                    return xa.xt[e.classification]
                }(s)
                  , l = o ? [{
                    data: {
                        square: r.to,
                        type: i.key
                    },
                    tags: [_a.Key],
                    type: "effect"
                }, {
                    data: {
                        square: r.from,
                        color: null != (e = i.color) ? e : "",
                        opacity: .5
                    },
                    tags: [_a.Key],
                    type: "highlight"
                }, {
                    data: {
                        square: r.to,
                        color: null != (t = i.color) ? t : "",
                        opacity: .5
                    },
                    tags: [_a.Key],
                    type: "highlight"
                }] : [];
                n && l.push({
                    data: update_markings_spreadValues({
                        color: _a.ArrowColor
                    }, (0,
                    Ta.H)(s.suggestedMove.moveLan)),
                    tags: [_a.Key],
                    type: "arrow"
                }),
                a.markings.addMany(l)
            }
            const Wa = (0,
            s.eI)({
                init() {
                    (0,
                    g.j)().onMany($.jd, this.update),
                    fa.e.on(L.b.Events.ToggleShowBestMoveMode, updateMarkings),
                    mt.r.on(k.Y.Events.SelectTab, updateMarkings),
                    ga.u.on(ba.O.Events.CeeClassificationReceived, updateMarkings)
                },
                update() {
                    updateMarkings(),
                    y.S.isOver && function markGameOverEffects() {
                        (0,
                        g.j)().markings.addMany(getGameOverEffects().map((e=>({
                            data: e,
                            type: "effect",
                            node: !0
                        }))))
                    }()
                }
            });
            var La = a(33712)
              , Ia = a(19578)
              , Ra = a(59775);
            const Na = (0,
            s.eI)({
                init() {
                    this.syncPlayersWithHeaders(),
                    (0,
                    g.j)().on($.QY.APIEvents.UpdatePGNHeaders, this.syncPlayersWithHeaders)
                },
                async syncPlayersWithHeaders() {
                    Ia.Y.countries || await (0,
                    La.k)(),
                    Ra.F.black.syncHeaders(y.S.headers),
                    Ra.F.white.syncHeaders(y.S.headers)
                }
            });
            var Ba = a(87307)
              , Fa = a(76554);
            const Da = {
                boardClient: Ge,
                ceacClient: Ke,
                chartsClient: Je,
                evaluationClient: gt,
                fullAnalysisClient: D,
                gameReviewClient: ca,
                layoutClient: ma,
                markingsClient: Wa,
                maxAnalysisClient: ae,
                playersClient: Na,
                retriesClient: (0,
                s.eI)({
                    init() {
                        F.z.on(z.J.Events.AnalysisStream, this.onCEACStream)
                    },
                    onCEACStream(e) {
                        var t, a, s;
                        const n = null == (s = null == (a = null == (t = e.data) ? void 0 : t.metaData) ? void 0 : a.clientRequest) ? void 0 : s.retryMove;
                        n && function onAnalysisResponse(e, t) {
                            var a, s;
                            if (!(null == (a = e.positions) ? void 0 : a[1]))
                                return;
                            const n = e.positions[1]
                              , o = (0,
                            A.F)({
                                node: (0,
                                g.j)().getSelectedNode(),
                                position: n,
                                data: {
                                    analysisType: (0,
                                    Fa.Q)({
                                        classification: (0,
                                        Ba.J)(n).key,
                                        position: n,
                                        userColor: null != (s = (0,
                                        yt.D)()) ? s : null,
                                        isRetry: !0
                                    })
                                }
                            });
                            o && (completeRetry(o.id, t),
                            pt.emit(dt.Events.AnalysisReceived))
                        }(e.data, n)
                    }
                }),
                selfAnalysisClient: we
            };
            var $a = a(56279)
              , qa = (0,
            Ce.aZ)({
                name: "GameList",
                components: {
                    V5Select: $a.V5Select
                },
                props: {
                    selectedSelfAnalysis: String,
                    selfAnalyses: {
                        type: Array,
                        default: ()=>[]
                    }
                },
                emits: ["select-self-analysis"],
                setup: e=>({
                    selectableGames: (0,
                    Ce.Fl)((()=>e.selfAnalyses.map((e=>({
                        label: e.title,
                        value: e.id
                    })))))
                })
            })
              , Ua = qa
              , Za = {
                bold: "game-list-bold",
                header: "game-list-header",
                inactive: "game-list-inactive",
                scrollable: "game-list-scrollable",
                component: "game-list-component",
                tab: "game-list-tab",
                "active-tab": "game-list-active-tab",
                select: "game-list-select",
                badge: "game-list-badge",
                content: "game-list-content",
                "tab-container": "game-list-tab-container"
            }
              , Ga = a(51900);
            var Ha = (0,
            Ga.Z)(Ua, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.selfAnalyses.length > 0 ? a("div", {
                    class: e.$style.component,
                    attrs: {
                        "data-cy": "analysis-game-list"
                    }
                }, [a("v5-select", {
                    class: e.$style.select,
                    attrs: {
                        name: "selectedSelfAnalysis",
                        value: e.selectedSelfAnalysis,
                        options: e.selectableGames
                    },
                    on: {
                        input: function(t) {
                            return e.$emit("select-self-analysis", {
                                id: t
                            })
                        }
                    }
                })], 1) : e._e()
            }
            ), [], !1, (function injectStyles(e) {
                this.$style = Za.locals || Za
            }
            ), null, null).exports
              , Va = a(39655);
            function showGameList() {
                return ue.p.analyses.length > 0
            }
            var Ka = (0,
            Ce.aZ)({
                el: "#game-list",
                name: "GameListController",
                components: {
                    GameList: Ha
                },
                setup: ()=>({
                    onSelectSelfAnalysis: function onSelectSelfAnalysis({id: e}) {
                        (0,
                        Va.Y)(e)
                    },
                    selectedSelfAnalysis: (0,
                    Ce.Fl)((()=>ue.p.selectedSelfAnalysis)),
                    selfAnalyses: (0,
                    Ce.Fl)((()=>ue.p.analyses)),
                    showGameList: (0,
                    Ce.Fl)(showGameList)
                })
            })
              , Ya = (0,
            Ga.Z)(Ka, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.showGameList ? a("game-list", {
                    attrs: {
                        "selected-self-analysis": e.selectedSelfAnalysis,
                        "self-analyses": e.selfAnalyses
                    },
                    on: {
                        "select-self-analysis": e.onSelectSelfAnalysis
                    }
                }) : e._e()
            }
            ), [], !1, null, null, null).exports
              , Qa = a(91410);
            var Ja = {
                name: "TickerIcon",
                components: {
                    Timer: (0,
                    Ga.Z)({}, (function() {
                        var e = this.$createElement
                          , t = this._self._c || e;
                        return t("svg", {
                            attrs: {
                                xmlns: "http://www.w3.org/2000/svg",
                                width: "20",
                                height: "20",
                                viewBox: "0 0 20 20"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M5.48,9a.93.93,0,0,0-.3.71v.58a.94.94,0,0,0,.3.71,1,1,0,0,0,.71.3h4.58a1,1,0,0,0,.71-.3.94.94,0,0,0,.29-.71V9.7A.92.92,0,0,0,11.48,9a1,1,0,0,0-.71-.27H6.19A1,1,0,0,0,5.48,9Z"
                            }
                        }), t("path", {
                            attrs: {
                                d: "M19.22,6.1a9.9,9.9,0,0,0-2.14-3.18A10.23,10.23,0,0,0,13.9.78,9.76,9.76,0,0,0,10,0,9.86,9.86,0,0,0,6.1.78,10,10,0,0,0,.78,6.1,9.81,9.81,0,0,0,0,10a9.81,9.81,0,0,0,.78,3.9A10,10,0,0,0,6.1,19.22,9.86,9.86,0,0,0,10,20a9.76,9.76,0,0,0,3.89-.78,10.23,10.23,0,0,0,3.18-2.14,9.9,9.9,0,0,0,2.14-3.18A9.81,9.81,0,0,0,20,10,9.81,9.81,0,0,0,19.22,6.1ZM17.07,13a7.65,7.65,0,0,1-1.65,2.42A7.81,7.81,0,0,1,13,17.06a7.46,7.46,0,0,1-3,.6,7.51,7.51,0,0,1-3-.6,7.74,7.74,0,0,1-2.43-1.65A8,8,0,0,1,2.94,13a7.46,7.46,0,0,1-.6-3,7.46,7.46,0,0,1,.6-3A8,8,0,0,1,4.58,4.59,7.74,7.74,0,0,1,7,2.94a7.51,7.51,0,0,1,3-.6,7.45,7.45,0,0,1,3,.6,7.74,7.74,0,0,1,2.43,1.65A7.65,7.65,0,0,1,17.07,7a7.46,7.46,0,0,1,.6,3A7.46,7.46,0,0,1,17.07,13Z"
                            }
                        })])
                    }
                    ), [], !1, null, null, null).exports
                },
                data: ()=>({
                    rotate: 0
                }),
                computed: {
                    style() {
                        return {
                            transform: `rotate(${this.rotate}deg)`
                        }
                    }
                },
                methods: {
                    tick() {
                        this.rotate += 90
                    }
                }
            }
              , Xa = {
                component: "ticker-icon-component"
            };
            function formatClock(e) {
                let t = e;
                if (t <= 0)
                    return "0:00";
                let a = 0
                  , s = 0
                  , n = 0;
                const o = t <= 200;
                return t >= 10 && (n = Math.floor(t / 10),
                t -= 10 * n),
                n >= 60 && (s = Math.floor(n / 60),
                n -= 60 * s),
                n < 10 && (n = `0${n}`),
                s >= 60 && (a = Math.floor(s / 60),
                s -= 60 * a),
                a ? (s < 10 && (s = `0${s}`),
                `${a}:${s}:${n}`) : o ? `${s}:${n}.${Math.floor(t)}` : `${s}:${n}`
            }
            var es = {
                name: "MoveTime",
                components: {
                    TickerIcon: (0,
                    Ga.Z)(Ja, (function() {
                        var e = this
                          , t = e.$createElement;
                        return (e._self._c || t)("timer", {
                            class: e.$style.component,
                            style: e.style
                        })
                    }
                    ), [], !1, (function ticker_icon_injectStyles(e) {
                        this.$style = Xa.locals || Xa
                    }
                    ), null, null).exports
                },
                props: {
                    clockIconTicks: {
                        type: Boolean,
                        default: !1
                    },
                    formatTime: {
                        type: Boolean,
                        default: !1
                    },
                    isVacation: {
                        type: Boolean,
                        default: !1
                    },
                    showTimerIcon: {
                        type: Boolean,
                        default: !1
                    },
                    theme: {
                        type: String,
                        default: "light"
                    },
                    timeLeft: {
                        type: String,
                        default: "0:00:00"
                    }
                },
                computed: {
                    formattedTimeLeft() {
                        if (!this.formatTime)
                            return this.timeLeft;
                        const [e,t,a] = this.timeLeft.split(":")
                          , [s,n] = a.split(".");
                        return formatClock(60 * (Number(e) || 0) * 60 * 10 + 60 * (Number(t) || 0) * 10 + 10 * (Number(s) || 0) + (Number(n) || 0))
                    },
                    componentClasses() {
                        return [this.$style.time, this.$style[this.theme], {
                            [this.$style.iconless]: !this.showTimerIcon,
                            [this.$style.inactive]: !this.showTimerIcon
                        }]
                    }
                },
                watch: {
                    timeLeft() {
                        var e;
                        this.clockIconTicks && (null == (e = this.$refs.tickerIcon) || e.tick())
                    }
                }
            }
              , ts = {
                time: "move-time-time",
                dark: "move-time-dark",
                inactive: "move-time-inactive",
                indicator: "move-time-indicator",
                icon: "move-time-icon",
                ticker: "move-time-ticker",
                content: "move-time-content",
                iconless: "move-time-iconless"
            };
            var as = (0,
            Ga.Z)(es, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: e.componentClasses
                }, [e.showTimerIcon ? [e.clockIconTicks ? a("ticker-icon", {
                    ref: "tickerIcon",
                    class: e.$style.ticker
                }) : a("div", {
                    staticClass: "icon-font-chess",
                    class: [e.$style.icon, e.isVacation ? "pause" : "circle-clock"]
                })] : e._e(), e._v(" "), a("div", {
                    class: e.$style.content,
                    domProps: {
                        textContent: e._s(e.formattedTimeLeft)
                    }
                })], 2)
            }
            ), [], !1, (function move_time_injectStyles(e) {
                this.$style = ts.locals || ts
            }
            ), null, null).exports
              , ss = a(17828)
              , ns = a(47680)
              , os = a(6898)
              , rs = a(92957)
              , is = a(92685)
              , ls = a(89483)
              , cs = a(99644)
              , us = a(28598);
            var ds = ie.Z.create({
                withCredentials: !0
            });
            var hs = Object.defineProperty
              , ps = Object.getOwnPropertySymbols
              , ms = Object.prototype.hasOwnProperty
              , bs = Object.prototype.propertyIsEnumerable
              , fetch_defNormalProp = (e,t,a)=>t in e ? hs(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            async function fetch(e) {
                return async function publish(e) {
                    var t;
                    let a = window.PubSub.options.url[e.service || "base"];
                    const s = e.path instanceof Array ? e.path.join("/") : e.path;
                    a.endsWith("/") || s.startsWith("/") || (a += "/");
                    const n = {};
                    ["staging", "prod"].includes("dev") || (n.uid = null == (t = window.context.user) ? void 0 : t.uuid),
                    e.params && Object.assign(n, e.params);
                    const o = {};
                    return e.requestId && (o["x-chesscom-request-id-client"] = e.requestId),
                    e.clientId && (o["x-chesscom-play-client"] = e.clientId),
                    e.headers && Object.assign(o, e.headers),
                    ds({
                        url: /^http[s]?:/.test(s) ? s : `${a}${s}`,
                        data: e.data,
                        method: e.method || "post",
                        params: n,
                        headers: o,
                        withCredentials: !0
                    })
                }(((e,t)=>{
                    for (var a in t || (t = {}))
                        ms.call(t, a) && fetch_defNormalProp(e, a, t[a]);
                    if (ps)
                        for (var a of ps(t))
                            bs.call(t, a) && fetch_defNormalProp(e, a, t[a]);
                    return e
                }
                )({
                    method: "get"
                }, e))
            }
            var gs = (e=>(e.None = "none",
            e.Playing = "playing",
            e))(gs || {})
              , fs = (e=>(e.Offline = "offline",
            e.Online = "online",
            e))(fs || {});
            async function getUsersOnlineStatuses(e) {
                const {data: t} = await async function getUsersPresenceData(e) {
                    return fetch({
                        service: us.AM.Presence,
                        path: [us.fz.Users],
                        params: {
                            ids: e.slice(0, 25).join(",")
                        }
                    })
                }(e);
                return t.users.reduce(((e,t)=>(e[t.id] = function transformUserPresenceDto(e) {
                    var t, a;
                    const {activity: s, activityContext: n, id: o, status: r, statusAt: i, statusAtUncertain: l} = e
                      , c = {
                        battleLink: void 0,
                        eventLink: void 0,
                        gameLink: void 0,
                        id: o,
                        isOfflineStatusUncertain: void 0,
                        isOnline: r === fs.Online,
                        isPlaying: s === gs.Playing,
                        offlineSince: void 0,
                        statusAt: i
                    };
                    if (r === fs.Offline && (c.offlineSince = i),
                    null == (t = null == n ? void 0 : n.games) ? void 0 : t.length) {
                        const e = n.games[0]
                          , t = e.legacyId ? "web_game_live" : "web_game_rcn"
                          , a = e.legacyId || e.id;
                        c.gameLink = le.Z.generate(t, {
                            id: a
                        })
                    } else if (null == (a = null == n ? void 0 : n.battles) ? void 0 : a.length) {
                        const e = n.battles[0].id;
                        c.battleLink = le.Z.generate("web_puzzles_mode_battle_view", {
                            shortUuid: e
                        })
                    }
                    return c.isOfflineStatusUncertain = l,
                    c
                }(t),
                e)), {})
            }
            var vs = Object.defineProperty
              , ws = Object.defineProperties
              , ys = Object.getOwnPropertyDescriptors
              , ks = Object.getOwnPropertySymbols
              , _s = Object.prototype.hasOwnProperty
              , Cs = Object.prototype.propertyIsEnumerable
              , actions_defNormalProp = (e,t,a)=>t in e ? vs(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , Ts = {
                async fetchUserPopover({rootState: e, commit: t}, a) {
                    let s, n = !1;
                    try {
                        s = (await cs.Z.getUser(a)).data,
                        n = !0
                    } catch (r) {
                        t("setUser", {
                            userNotExist: !0
                        })
                    }
                    if (n) {
                        const n = await async function getUserOnlineStatus(e) {
                            return (await getUsersOnlineStatuses([e]))[e]
                        }(s.uuid)
                          , {user: i} = e;
                        if ((null == i ? void 0 : i.id) && s && s.userId !== i.id)
                            try {
                                const {data: e} = await ie.Z.post(le.Z.generate("web_user_callback_lifetime_score", {
                                    user: s.userId,
                                    opponent: i.id
                                }));
                                t("setLifetimeScore", e)
                            } catch (r) {
                                t("setLifetimeScore", null)
                            }
                        t("setUser", (o = ((e,t)=>{
                            for (var a in t || (t = {}))
                                _s.call(t, a) && actions_defNormalProp(e, a, t[a]);
                            if (ks)
                                for (var a of ks(t))
                                    Cs.call(t, a) && actions_defNormalProp(e, a, t[a]);
                            return e
                        }
                        )({}, s),
                        ws(o, ys({
                            username: a
                        })))),
                        t("setPresenceDetails", n)
                    }
                    var o
                }
            }
              , Ss = a(93644)
              , xs = a(32793);
            function setPopoverPosition(e) {
                const t = (0,
                xs.tq)() && window.innerWidth < 768;
                let a;
                return (0,
                Ss.t)() ? a = `left: auto; right: ${e.right}px; top: ${e.top}px;` : (a = `transform: translate(${e.left}px, ${e.top}px);`,
                t && (a = `transform: translateY(${e.top}px);`)),
                a
            }
            var Es = {
                hideUserPopover: e=>{
                    e.isHovered = !1,
                    e.show = !1
                }
                ,
                hover: e=>{
                    e.isHovered = !0
                }
                ,
                resetUser: e=>{
                    e.user = {
                        avatarUrl: "",
                        bestRating: 0,
                        bestRatingType: "",
                        chessTitle: "",
                        country: {},
                        joinDate: "",
                        lastLoginDate: "",
                        membership: {},
                        onlineStatus: "",
                        username: ""
                    },
                    e.presenceDetails = null,
                    e.lifetimeScore = null
                }
                ,
                showUserPopover: e=>{
                    e.show = !0
                }
                ,
                setPosition: (e,t)=>{
                    e.position = t
                }
                ,
                setUser: (e,t)=>{
                    e.user = t
                }
                ,
                setPresenceDetails: (e,t)=>{
                    e.presenceDetails = t
                }
                ,
                setLifetimeScore: (e,t)=>{
                    e.lifetimeScore = t
                }
            }
              , Os = {
                namespaced: !0,
                mutations: Es,
                actions: Ts,
                state: {
                    isHovered: !1,
                    show: !1,
                    user: {
                        avatarUrl: "",
                        bestRating: 0,
                        bestRatingType: "",
                        chessTitle: "",
                        country: {},
                        joinDate: "",
                        lastLoginDate: "",
                        membership: {},
                        onlineStatus: "",
                        username: ""
                    },
                    position: {
                        x: "right",
                        y: "bottom",
                        top: 0,
                        left: 0
                    },
                    presenceDetails: null,
                    lifetimeScore: null
                }
            }
              , As = a(86673)
              , Ms = a(41252)
              , Ps = a(24452)
              , js = a(87692)
              , zs = a(45381)
              , Ws = a(64694)
              , Ls = a(66426)
              , Is = {
                name: "IconButton",
                directives: {
                    Tooltip: os.Z
                },
                props: {
                    action: Function,
                    btnColor: String,
                    iconName: {
                        type: String,
                        required: !0
                    },
                    label: {
                        type: String,
                        required: !0
                    }
                },
                emits: ["click"],
                methods: {
                    onClick(e) {
                        this.action ? this.action(e) : this.$emit("click", e)
                    }
                }
            }
              , Rs = {
                link: "icon-button-link",
                icon: "icon-button-icon",
                label: "icon-button-label",
                blue: "icon-button-blue",
                grey: "icon-button-grey",
                red: "icon-button-red",
                translucent: "icon-button-translucent"
            };
            var Ns = (0,
            Ga.Z)(Is, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("button", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: {
                            content: e.label,
                            delay: 100
                        },
                        expression: "{\n    content: label,\n    delay: 100\n  }"
                    }],
                    class: [e.$style.link, e.$style[e.btnColor]],
                    attrs: {
                        type: "button",
                        "aria-label": e.label
                    },
                    on: {
                        click: e.onClick
                    }
                }, [a("span", {
                    class: [e.$style.icon, e.iconName, "icon-font-chess"]
                })])
            }
            ), [], !1, (function icon_button_injectStyles(e) {
                this.$style = Rs.locals || Rs
            }
            ), null, null).exports
              , Bs = {
                name: "AdminActions",
                components: {
                    IconButton: Ns
                },
                props: {
                    canModerate: {
                        type: Boolean,
                        default: !1
                    },
                    canMuteOnChat: {
                        type: Boolean,
                        default: !1
                    },
                    clientName: String,
                    canWarnOnChat: Boolean,
                    canModerateOnChat: Boolean,
                    userAlreadyMutedOnChat: Boolean
                },
                emits: ["chat-kick-user", "chat-unmute-user", "chat-mute-user-remove-messages", "chat-mute-user", "chat-warn-user", "ban-user", "kick-user", "mute-user", "warn-user"]
            }
              , Fs = {
                component: "admin-actions-component",
                separator: "admin-actions-separator"
            };
            var Ds = (0,
            Ga.Z)(Bs, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: e.$style.component
                }, [e.canModerate ? a("icon-button", {
                    attrs: {
                        "icon-name": "flag",
                        "btn-color": "red",
                        label: e.$trans("Warn")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("warn-user")
                        }
                    }
                }) : e._e(), e._v(" "), e.canModerate ? a("icon-button", {
                    attrs: {
                        "icon-name": "chat-x",
                        "btn-color": "red",
                        label: e.$trans("Mute")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("mute-user")
                        }
                    }
                }) : e._e(), e._v(" "), e.canModerate ? a("icon-button", {
                    attrs: {
                        "icon-name": "exit",
                        "btn-color": "red",
                        label: e.$trans("Kick")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("kick-user")
                        }
                    }
                }) : e._e(), e._v(" "), e.canModerate ? a("icon-button", {
                    attrs: {
                        "icon-name": "user-block",
                        "btn-color": "red",
                        label: e.$trans("Ban")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("ban-user")
                        }
                    }
                }) : e._e(), e._v(" "), e.canModerate && e.clientName ? a("icon-button", {
                    attrs: {
                        "icon-name": "circle-info",
                        label: e.clientName
                    }
                }) : e._e(), e._v(" "), e.canModerate && (e.canWarnOnChat || e.canModerateOnChat) ? a("div", {
                    class: e.$style.separator
                }) : e._e(), e._v(" "), e.canWarnOnChat && !e.userAlreadyMutedOnChat ? a("icon-button", {
                    attrs: {
                        "icon-name": "flag",
                        "btn-color": "red",
                        label: e.$trans("Chat Warn")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("chat-warn-user")
                        }
                    }
                }) : e._e(), e._v(" "), !e.canModerateOnChat && !e.canMuteOnChat || e.userAlreadyMutedOnChat ? e._e() : a("icon-button", {
                    attrs: {
                        "icon-name": "chat-x",
                        "btn-color": "red",
                        label: e.$trans("Chat Mute")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("chat-mute-user")
                        }
                    }
                }), e._v(" "), e.canMuteOnChat && !e.userAlreadyMutedOnChat ? a("icon-button", {
                    attrs: {
                        "icon-name": "trash",
                        "btn-color": "red",
                        label: e.$trans("Chat Mute and remove messages")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("chat-mute-user-remove-messages")
                        }
                    }
                }) : e._e(), e._v(" "), e.canMuteOnChat && e.userAlreadyMutedOnChat ? a("icon-button", {
                    attrs: {
                        "icon-name": "chat-alt",
                        "btn-color": "blue",
                        label: e.$trans("Chat Unmute")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("chat-unmute-user")
                        }
                    }
                }) : e._e(), e._v(" "), e.canModerateOnChat ? a("icon-button", {
                    attrs: {
                        "icon-name": "exit",
                        "btn-color": "red",
                        label: e.$trans("Chat Kick")
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("chat-kick-user")
                        }
                    }
                }) : e._e()], 1)
            }
            ), [], !1, (function admin_actions_injectStyles(e) {
                this.$style = Fs.locals || Fs
            }
            ), null, null).exports
              , $s = a(35559)
              , qs = {
                methods: {
                    hasVisibleDropdown() {
                        return Object.values(this.dropdown).some((e=>"block" === e.display))
                    },
                    createDropdown(e) {
                        const t = {
                            dropdown: {}
                        };
                        return e.forEach((e=>{
                            t.dropdown[e] = {
                                display: "none",
                                transform: "translate(0, 0)"
                            }
                        }
                        )),
                        t
                    },
                    hideDropdown() {
                        Object.keys(this.dropdown).forEach((e=>{
                            this.dropdown[e].display = "none"
                        }
                        ))
                    },
                    showDropdown(e, t, a) {
                        const s = document.querySelector(`ul[data-dropdown="${t}"]`);
                        s && ("block" === this.dropdown[t].display ? this.dropdown[t].display = "none" : (this.hideDropdown(),
                        this.dropdown[t].display = "block",
                        this.$nextTick((()=>{
                            const n = e.target.getBoundingClientRect()
                              , {width: o, height: r} = s.getBoundingClientRect()
                              , i = (0,
                            Ps.MD)(n, r, o);
                            a && a(i);
                            const {left: l, top: c} = i;
                            this.dropdown[t].transform = `translate(${l}px, ${c}px)`
                        }
                        ))))
                    }
                }
            }
              , Us = Object.defineProperty
              , Zs = Object.getOwnPropertySymbols
              , Gs = Object.prototype.hasOwnProperty
              , Hs = Object.prototype.propertyIsEnumerable
              , analysis_options_dropdownvue_type_script_lang_js_defNormalProp = (e,t,a)=>t in e ? Us(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , Vs = {
                name: "AnalysisOptionsDropdown",
                directives: {
                    Tooltip: os.Z
                },
                mixins: [qs],
                props: {
                    target: {
                        type: HTMLElement,
                        required: !0
                    },
                    position: {
                        type: Object,
                        required: !0
                    },
                    analysisOptions: {
                        type: Array,
                        default: ()=>[]
                    }
                },
                emits: ["option-selected", "hide"],
                data() {
                    return ((e,t)=>{
                        for (var a in t || (t = {}))
                            Gs.call(t, a) && analysis_options_dropdownvue_type_script_lang_js_defNormalProp(e, a, t[a]);
                        if (Zs)
                            for (var a of Zs(t))
                                Hs.call(t, a) && analysis_options_dropdownvue_type_script_lang_js_defNormalProp(e, a, t[a]);
                        return e
                    }
                    )({}, this.createDropdown(["analysis"]))
                },
                mounted() {
                    const e = {
                        target: this.target
                    };
                    this.showDropdown(e, "analysis", (e=>{
                        e.left -= this.position.left,
                        e.top -= this.position.top
                    }
                    ))
                },
                methods: {
                    onClickOption(e, t) {
                        e.examineId = t,
                        this.$emit("option-selected", e)
                    }
                }
            }
              , Ks = {
                component: "analysis-options-dropdown-component",
                close: "analysis-options-dropdown-close",
                title: "analysis-options-dropdown-title"
            };
            var Ys = (0,
            Ga.Z)(Vs, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("ul", {
                    class: e.$style.component,
                    style: e.dropdown.analysis,
                    attrs: {
                        "data-dropdown": "analysis"
                    }
                }, [e._l(e.analysisOptions, (function(t) {
                    return a("li", {
                        directives: [{
                            name: "tooltip",
                            rawName: "v-tooltip",
                            value: t.title,
                            expression: "analysisOption.title"
                        }],
                        key: t.examineId,
                        domProps: {
                            textContent: e._s(t.title)
                        },
                        on: {
                            click: function(a) {
                                return e.onClickOption(a, t.examineId)
                            }
                        }
                    })
                }
                )), e._v(" "), e._m(0), e._v(" "), a("i", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.$trans("Close"),
                        expression: "$trans('Close')"
                    }],
                    class: [e.$style.close, "icon-x"],
                    on: {
                        click: function(t) {
                            return e.$emit("hide")
                        }
                    }
                })], 2)
            }
            ), [function() {
                var e = this
                  , t = e.$createElement;
                return (e._self._c || t)("span", {
                    class: e.$style.title,
                    domProps: {
                        textContent: e._s(e.$trans("Analysis Board"))
                    }
                })
            }
            ], !1, (function analysis_options_dropdown_injectStyles(e) {
                this.$style = Ks.locals || Ks
            }
            ), null, null).exports
              , Qs = Object.defineProperty
              , Js = Object.getOwnPropertySymbols
              , Xs = Object.prototype.hasOwnProperty
              , en = Object.prototype.propertyIsEnumerable
              , chat_options_dropdownvue_type_script_lang_js_defNormalProp = (e,t,a)=>t in e ? Qs(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , tn = {
                name: "ChatOptionsDropdown",
                directives: {
                    Tooltip: os.Z
                },
                mixins: [qs],
                props: {
                    target: {
                        type: HTMLElement,
                        required: !0
                    },
                    position: {
                        type: Object,
                        required: !0
                    },
                    chatOptions: {
                        type: Array,
                        default: ()=>[]
                    }
                },
                emits: ["option-selected", "hide"],
                data() {
                    return ((e,t)=>{
                        for (var a in t || (t = {}))
                            Xs.call(t, a) && chat_options_dropdownvue_type_script_lang_js_defNormalProp(e, a, t[a]);
                        if (Js)
                            for (var a of Js(t))
                                en.call(t, a) && chat_options_dropdownvue_type_script_lang_js_defNormalProp(e, a, t[a]);
                        return e
                    }
                    )({}, this.createDropdown(["chat"]))
                },
                mounted() {
                    const e = {
                        target: this.target
                    };
                    this.showDropdown(e, "chat", (e=>{
                        e.left -= this.position.left,
                        e.top -= this.position.top
                    }
                    ))
                },
                methods: {
                    onClickOption(e, t) {
                        e.roomId = t,
                        this.$emit("option-selected", e)
                    }
                }
            }
              , an = {
                component: "chat-options-dropdown-component",
                close: "chat-options-dropdown-close",
                title: "chat-options-dropdown-title"
            };
            var sn = (0,
            Ga.Z)(tn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("ul", {
                    class: e.$style.component,
                    style: e.dropdown.chat,
                    attrs: {
                        "data-dropdown": "chat"
                    }
                }, [e._l(e.chatOptions, (function(t) {
                    return a("li", {
                        directives: [{
                            name: "tooltip",
                            rawName: "v-tooltip",
                            value: t.title,
                            expression: "chatOption.title"
                        }],
                        key: t.roomId,
                        domProps: {
                            textContent: e._s(t.title)
                        },
                        on: {
                            click: function(a) {
                                return e.onClickOption(a, t.roomId)
                            }
                        }
                    })
                }
                )), e._v(" "), e._m(0), e._v(" "), e._m(1), e._v(" "), a("i", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.$trans("Close"),
                        expression: "$trans('Close')"
                    }],
                    class: [e.$style.close, "icon-x"],
                    on: {
                        click: function(t) {
                            return e.$emit("hide")
                        }
                    }
                })], 2)
            }
            ), [function() {
                var e = this
                  , t = e.$createElement;
                return (e._self._c || t)("li", {
                    domProps: {
                        textContent: e._s(e.$trans("Private Chat"))
                    },
                    on: {
                        click: function(t) {
                            return e.onClickOption(t)
                        }
                    }
                })
            }
            , function() {
                var e = this
                  , t = e.$createElement;
                return (e._self._c || t)("span", {
                    class: e.$style.title,
                    domProps: {
                        textContent: e._s(e.$trans("Chat"))
                    }
                })
            }
            ], !1, (function chat_options_dropdown_injectStyles(e) {
                this.$style = an.locals || an
            }
            ), null, null).exports
              , nn = {
                name: "IconLink",
                directives: {
                    Tooltip: os.Z
                },
                props: {
                    url: String,
                    iconColor: String,
                    iconName: {
                        type: String,
                        required: !0
                    },
                    label: {
                        type: String,
                        required: !0
                    }
                },
                emits: ["click"]
            }
              , on = {
                link: "icon-link-link",
                icon: "icon-link-icon",
                label: "icon-link-label",
                blue: "icon-link-blue",
                grey: "icon-link-grey",
                red: "icon-link-red",
                translucent: "icon-link-translucent"
            };
            var rn = (0,
            Ga.Z)(nn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("a", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: {
                            content: e.label,
                            delay: 100
                        },
                        expression: "{\n    content: label,\n    delay: 100\n  }"
                    }],
                    class: [e.$style.link, e.$style[e.iconColor]],
                    attrs: {
                        href: e.url
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("click", t)
                        }
                    }
                }, [a("span", {
                    class: [e.$style.icon, e.iconName, "icon-font-chess"]
                })])
            }
            ), [], !1, (function icon_link_injectStyles(e) {
                this.$style = on.locals || on
            }
            ), null, null).exports
              , ln = {
                name: "LabeledIconButton",
                props: {
                    action: Function,
                    btnColor: String,
                    iconName: {
                        type: String,
                        required: !0
                    },
                    label: {
                        type: String,
                        required: !0
                    }
                },
                emits: ["click"],
                methods: {
                    onClick(e) {
                        this.action ? this.action(e) : this.$emit("click", e)
                    }
                }
            }
              , cn = {
                link: "labeled-icon-button-link",
                icon: "labeled-icon-button-icon",
                label: "labeled-icon-button-label",
                blue: "labeled-icon-button-blue",
                grey: "labeled-icon-button-grey",
                red: "labeled-icon-button-red",
                translucent: "labeled-icon-button-translucent"
            };
            var un = (0,
            Ga.Z)(ln, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("button", {
                    class: [e.$style.link, e.$style[e.btnColor]],
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: e.onClick
                    }
                }, [a("span", {
                    class: [e.$style.icon, e.iconName, "icon-font-chess"]
                }), e._v(" "), a("span", {
                    class: e.$style.label,
                    domProps: {
                        textContent: e._s(e.label)
                    }
                })])
            }
            ), [], !1, (function labeled_icon_button_injectStyles(e) {
                this.$style = cn.locals || cn
            }
            ), null, null).exports
              , dn = {
                name: "LabeledIconButton",
                props: {
                    url: String,
                    iconColor: String,
                    iconName: {
                        type: String,
                        required: !0
                    },
                    label: {
                        type: String,
                        required: !0
                    }
                },
                emits: ["click"]
            }
              , hn = {
                link: "labeled-icon-link-link",
                icon: "labeled-icon-link-icon",
                label: "labeled-icon-link-label",
                blue: "labeled-icon-link-blue",
                grey: "labeled-icon-link-grey",
                red: "labeled-icon-link-red",
                translucent: "labeled-icon-link-translucent"
            };
            var pn = (0,
            Ga.Z)(dn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("a", {
                    class: [e.$style.link, e.$style[e.iconColor]],
                    attrs: {
                        href: e.url
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("click", t)
                        }
                    }
                }, [a("span", {
                    class: [e.$style.icon, e.iconName, "icon-font-chess"]
                }), e._v(" "), a("span", {
                    class: e.$style.label,
                    domProps: {
                        textContent: e._s(e.label)
                    }
                })])
            }
            ), [], !1, (function labeled_icon_link_injectStyles(e) {
                this.$style = hn.locals || hn
            }
            ), null, null).exports
              , mn = {
                name: "UserActions",
                components: {
                    IconFont: $s.Z,
                    IconButton: Ns,
                    IconLink: rn,
                    LabeledIconButton: un,
                    LabeledIconLink: pn,
                    ChatOptionsDropdown: sn,
                    AnalysisOptionsDropdown: Ys
                },
                props: {
                    avatar: String,
                    canAddFriend: Boolean,
                    canBlockUser: Boolean,
                    canReportUser: Boolean,
                    canCreateChallenge: Boolean,
                    canFollowUser: Boolean,
                    canGiftMembership: Boolean,
                    canRemoveFriend: Boolean,
                    canSendMessage: Boolean,
                    canInviteToChat: Boolean,
                    canSendTrophy: Boolean,
                    canUnblockUser: Boolean,
                    canUnfollowUser: Boolean,
                    canUseGlobalChat: Boolean,
                    isEnabled: Boolean,
                    hasInboundFriendRequest: Boolean,
                    hasOutboundFriendRequest: Boolean,
                    loggedAsAnother: Boolean,
                    username: String,
                    canObserveGame: {
                        type: Boolean,
                        default: !1
                    },
                    isBughousePartner: {
                        type: Boolean,
                        default: !1
                    },
                    challengeUrl: String,
                    canCancelFriendRequest: {
                        type: Boolean,
                        default: !1
                    },
                    canDeclineFriendRequest: {
                        type: Boolean,
                        default: !1
                    },
                    canAcceptFriendRequest: {
                        type: Boolean,
                        default: !1
                    },
                    archiveUrl: String,
                    chatOptions: {
                        type: Array,
                        default: ()=>[]
                    },
                    position: {
                        type: Object,
                        default: ()=>({})
                    },
                    canInviteToAnalysis: {
                        type: Boolean,
                        default: !1
                    },
                    analysisOptions: {
                        type: Array,
                        default: ()=>[]
                    },
                    isConfirmVisible: {
                        type: Boolean,
                        default: !1
                    },
                    showBughousePartner: {
                        type: Boolean,
                        default: !1
                    },
                    membershipUrl: String,
                    dynamicActions: Array
                },
                emits: ["show-archive", "show-gift", "show-trophy", "decline-friend-request", "cancel-friend-request", "add-friend", "invite-analysis", "request-chat", "send-message", "create-challenge", "user-popover-hide", "remove-friend", "accept-friend-request", "follow-user", "unfollow-user", "block-user", "unblock-user", "show-report", "observe-user", "bughouse-partner", "bughouse-unpartner", "start-direct-chat"],
                data: ()=>({
                    allActions: !1,
                    chatDropdownTarget: null,
                    analysisDropdownTarget: null,
                    buttonsListStyle: null
                }),
                computed: {
                    showGlobalChatButton() {
                        return this.canUseGlobalChat && !this.canInviteToChat
                    }
                },
                methods: {
                    getIconComponent: e=>e ? rn : Ns,
                    getIconLabeledComponent: e=>e ? pn : un,
                    hidePopover() {
                        this.$emit("user-popover-hide")
                    },
                    onClickChallenge(e) {
                        this.challengeUrl ? this.hidePopover() : (e.username = this.username,
                        e.avatar = this.avatar,
                        this.$emit("create-challenge", e))
                    },
                    onClickMessage(e) {
                        e.username = this.username,
                        e.avatar = this.avatar,
                        this.$emit("send-message", e)
                    },
                    onClickChat(e) {
                        this.chatOptions.length ? this.chatDropdownTarget = e.target : this.onClickChatOption(e)
                    },
                    onClickChatOption(e) {
                        this.hideChatDropdown(),
                        this.$emit("request-chat", e)
                    },
                    onClickAnalysis(e) {
                        this.analysisDropdownTarget = e.target
                    },
                    onClickAnalysisOption(e) {
                        this.hideAnalysisDropdown(),
                        this.$emit("invite-analysis", e)
                    },
                    onClickAddFriend() {
                        this.$emit("add-friend")
                    },
                    onClickCancelFriendRequest() {
                        this.$emit("cancel-friend-request")
                    },
                    onClickDeclineFriendRequest() {
                        this.$emit("decline-friend-request")
                    },
                    onClickTrophy(e) {
                        e.username = this.username,
                        this.$emit("show-trophy", e)
                    },
                    onClickGift() {
                        this.$emit("show-gift")
                    },
                    onClickArchive(e) {
                        this.archiveUrl ? this.hidePopover() : (e.username = this.username,
                        this.$emit("show-archive", e))
                    },
                    onClickRemoveFriend() {
                        this.$emit("remove-friend")
                    },
                    onClickAcceptFriendRequest() {
                        this.$emit("accept-friend-request")
                    },
                    onClickFollowUser() {
                        this.$emit("follow-user")
                    },
                    onClickUnfollowUser() {
                        this.$emit("unfollow-user")
                    },
                    onClickBlockUser() {
                        this.$emit("block-user")
                    },
                    onClickUnblockUser() {
                        this.$emit("unblock-user")
                    },
                    onClickReport() {
                        this.$emit("show-report")
                    },
                    onClickObserve() {
                        this.$emit("observe-user")
                    },
                    onClickPartner() {
                        this.$emit("bughouse-partner")
                    },
                    onClickUnpartner() {
                        this.$emit("bughouse-unpartner")
                    },
                    showAllActions() {
                        this.allActions = !0,
                        this.$nextTick((()=>{
                            const e = document.getElementsByClassName(this.$style.buttonsList)[0];
                            if (e) {
                                const t = [...e.children]
                                  , a = Math.max(...t.map((e=>e.offsetHeight)));
                                this.buttonsListStyle = {
                                    height: a * Math.round(t.length / 2) + "px"
                                }
                            }
                        }
                        ))
                    },
                    startDirectChat() {
                        this.hidePopover(),
                        this.$emit("start-direct-chat")
                    },
                    hideChatDropdown() {
                        this.chatDropdownTarget = null
                    },
                    hideAnalysisDropdown() {
                        this.analysisDropdownTarget = null
                    }
                }
            }
              , bn = {
                component: "user-actions-component",
                "icons-list": "user-actions-icons-list",
                more: "user-actions-more",
                caret: "user-actions-caret",
                buttonsList: "user-actions-buttonsList"
            };
            var gn = (0,
            Ga.Z)(mn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: e.$style.component
                }, [e.allActions ? e._e() : a("div", {
                    class: e.$style["icons-list"]
                }, [e.canCreateChallenge ? a(e.getIconComponent(e.challengeUrl), {
                    tag: "component",
                    attrs: {
                        "icon-name": "chess-board-plus",
                        label: e.$trans("Challenge"),
                        url: e.challengeUrl
                    },
                    on: {
                        click: e.onClickChallenge
                    }
                }) : e._e(), e._v(" "), e.showGlobalChatButton ? a("icon-button", {
                    attrs: {
                        "icon-name": "chat",
                        label: e.$trans("Chat")
                    },
                    on: {
                        click: e.startDirectChat
                    }
                }) : e._e(), e._v(" "), e.loggedAsAnother ? a("icon-button", {
                    attrs: {
                        "icon-name": "mail-plus",
                        label: e.$trans("Message")
                    },
                    on: {
                        click: e.onClickMessage
                    }
                }) : e._e(), e._v(" "), e.canInviteToChat ? a("icon-button", {
                    attrs: {
                        "icon-name": "chat",
                        label: e.$trans("Chat")
                    },
                    on: {
                        click: e.onClickChat
                    }
                }) : e._e(), e._v(" "), e.canAddFriend ? a("icon-button", {
                    attrs: {
                        "icon-name": "user-plus",
                        label: e.$trans("Add Friend")
                    },
                    on: {
                        click: e.onClickAddFriend
                    }
                }) : e._e(), e._v(" "), e.canAcceptFriendRequest ? a("icon-button", {
                    attrs: {
                        "icon-name": "user-plus",
                        "data-cy": "user-popover-accept-friend-request",
                        label: e.$trans("Accept Request")
                    },
                    on: {
                        click: e.onClickAcceptFriendRequest
                    }
                }) : e._e(), e._v(" "), e.canDeclineFriendRequest ? a("icon-button", {
                    attrs: {
                        "btn-color": "grey",
                        "icon-name": "user-x",
                        label: e.$trans("Decline Request")
                    },
                    on: {
                        click: e.onClickDeclineFriendRequest
                    }
                }) : e._e(), e._v(" "), e.canCancelFriendRequest ? a("icon-button", {
                    attrs: {
                        "btn-color": "grey",
                        "icon-name": "user-x",
                        label: e.$trans("Cancel Request")
                    },
                    on: {
                        click: e.onClickCancelFriendRequest
                    }
                }) : e._e(), e._v(" "), e.canRemoveFriend ? a("icon-button", {
                    attrs: {
                        "icon-name": "user-x",
                        label: e.$trans("Remove Friend")
                    },
                    on: {
                        click: e.onClickRemoveFriend
                    }
                }) : e._e(), e._v(" "), e.canGiftMembership ? a(e.getIconComponent(e.membershipUrl), {
                    tag: "component",
                    attrs: {
                        "btn-color": "blue",
                        "icon-color": "blue",
                        "icon-name": "display-slider",
                        label: e.$trans("Gift Membership"),
                        url: e.membershipUrl
                    },
                    on: {
                        click: e.onClickGift
                    }
                }) : e._e(), e._v(" "), e.canObserveGame ? a("icon-button", {
                    attrs: {
                        "icon-name": "binoculars",
                        label: e.$trans("Observe Game")
                    },
                    on: {
                        click: e.onClickObserve
                    }
                }) : e._e(), e._v(" "), e.canReportUser ? a("icon-button", {
                    attrs: {
                        "icon-name": "circle-danger",
                        label: e.$trans("Report")
                    },
                    on: {
                        click: e.onClickReport
                    }
                }) : e._e(), e._v(" "), e.loggedAsAnother ? e._e() : a(e.getIconComponent(e.archiveUrl), {
                    tag: "component",
                    attrs: {
                        "icon-name": "chess-board-folder",
                        label: e.$trans("Archive"),
                        url: e.archiveUrl
                    },
                    on: {
                        click: e.onClickArchive
                    }
                }), e._v(" "), e.loggedAsAnother && e.isEnabled ? a("button", {
                    class: e.$style.more,
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: e.showAllActions
                    }
                }, [e._v("\n      " + e._s(e.$trans("More")) + "\n      "), a("icon-font", {
                    class: e.$style.caret,
                    attrs: {
                        name: "caret-down",
                        theme: "primary"
                    }
                })], 1) : e._e()], 1), e._v(" "), e.allActions && !e.isConfirmVisible ? a("div", {
                    class: e.$style.buttonsList,
                    style: e.buttonsListStyle
                }, [e.canCreateChallenge ? a(e.getIconLabeledComponent(e.challengeUrl), {
                    tag: "component",
                    attrs: {
                        "icon-name": "chess-board-plus",
                        label: e.$trans("Challenge"),
                        url: e.challengeUrl
                    },
                    on: {
                        click: e.onClickChallenge
                    }
                }) : e._e(), e._v(" "), e.showGlobalChatButton ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "chat",
                        label: e.$trans("Chat")
                    },
                    on: {
                        click: e.startDirectChat
                    }
                }) : e._e(), e._v(" "), e.loggedAsAnother ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "mail-plus",
                        label: e.$trans("Message")
                    },
                    on: {
                        click: e.onClickMessage
                    }
                }) : e._e(), e._v(" "), e.canInviteToChat ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "chat",
                        label: e.$trans("Chat")
                    },
                    on: {
                        click: e.onClickChat
                    }
                }) : e._e(), e._v(" "), e.canAddFriend ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "user-plus",
                        label: e.$trans("Add Friend")
                    },
                    on: {
                        click: e.onClickAddFriend
                    }
                }) : e._e(), e._v(" "), e.canAcceptFriendRequest ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "user-plus",
                        label: e.$trans("Accept Request")
                    },
                    on: {
                        click: e.onClickAcceptFriendRequest
                    }
                }) : e._e(), e._v(" "), e.canDeclineFriendRequest ? a("labeled-icon-button", {
                    attrs: {
                        "btn-color": "grey",
                        "icon-name": "user-x",
                        label: e.$trans("Decline Request")
                    },
                    on: {
                        click: e.onClickDeclineFriendRequest
                    }
                }) : e._e(), e._v(" "), e.canCancelFriendRequest ? a("labeled-icon-button", {
                    attrs: {
                        "btn-color": "grey",
                        "icon-name": "user-x",
                        label: e.$trans("Cancel Request")
                    },
                    on: {
                        click: e.onClickCancelFriendRequest
                    }
                }) : e._e(), e._v(" "), e.canRemoveFriend ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "user-x",
                        label: e.$trans("Remove Friend")
                    },
                    on: {
                        click: e.onClickRemoveFriend
                    }
                }) : e._e(), e._v(" "), e.canObserveGame ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "binoculars",
                        label: e.$trans("Observe")
                    },
                    on: {
                        click: e.onClickObserve
                    }
                }) : e._e(), e._v(" "), e.canFollowUser ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "follow",
                        label: e.$trans("Follow")
                    },
                    on: {
                        click: e.onClickFollowUser
                    }
                }) : e._e(), e._v(" "), e.canUnfollowUser ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "unfollow",
                        label: e.$trans("Unfollow")
                    },
                    on: {
                        click: e.onClickUnfollowUser
                    }
                }) : e._e(), e._v(" "), e.canGiftMembership ? a("labeled-icon-button", {
                    attrs: {
                        "btn-color": "blue",
                        "icon-name": "display-slider",
                        label: e.$trans("Gift Membership")
                    },
                    on: {
                        click: e.onClickGift
                    }
                }) : e._e(), e._v(" "), e.canSendTrophy ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "trophy-plus",
                        label: e.$trans("Give Award")
                    },
                    on: {
                        click: e.onClickTrophy
                    }
                }) : e._e(), e._v(" "), e.showBughousePartner && !e.isBughousePartner ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "bughouse",
                        label: e.$trans("Partner")
                    },
                    on: {
                        click: e.onClickPartner
                    }
                }) : e._e(), e._v(" "), e.showBughousePartner && e.isBughousePartner ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "bughouse",
                        label: e.$trans("Unpartner")
                    },
                    on: {
                        click: e.onClickUnpartner
                    }
                }) : e._e(), e._v(" "), e.canInviteToAnalysis ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "chess-board-search",
                        label: e.$trans("Analysis Board")
                    },
                    on: {
                        click: e.onClickAnalysis
                    }
                }) : e._e(), e._v(" "), a(e.getIconLabeledComponent(e.archiveUrl), {
                    tag: "component",
                    attrs: {
                        "icon-name": "chess-board-folder",
                        label: e.$trans("Archive"),
                        url: e.archiveUrl
                    },
                    on: {
                        click: e.onClickArchive
                    }
                }), e._v(" "), e.canBlockUser ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "circle-block",
                        label: e.$trans("Block")
                    },
                    on: {
                        click: e.onClickBlockUser
                    }
                }) : e._e(), e._v(" "), e.canUnblockUser ? a("labeled-icon-button", {
                    attrs: {
                        "btn-color": "red",
                        "icon-name": "circle-block",
                        label: e.$trans("Unblock")
                    },
                    on: {
                        click: e.onClickUnblockUser
                    }
                }) : e._e(), e._v(" "), e.canReportUser ? a("labeled-icon-button", {
                    attrs: {
                        "icon-name": "circle-danger",
                        label: e.$trans("Report")
                    },
                    on: {
                        click: e.onClickReport
                    }
                }) : e._e(), e._v(" "), e.dynamicActions ? e._l(e.dynamicActions, (function(e, t) {
                    return a("labeled-icon-button", {
                        key: t,
                        attrs: {
                            "icon-name": e.iconName,
                            label: e.label
                        },
                        on: {
                            click: e.handler
                        }
                    })
                }
                )) : e._e()], 2) : e._e(), e._v(" "), e.chatDropdownTarget ? a("chat-options-dropdown", {
                    attrs: {
                        target: e.chatDropdownTarget,
                        position: e.position,
                        "chat-options": e.chatOptions
                    },
                    on: {
                        "option-selected": e.onClickChatOption,
                        hide: e.hideChatDropdown
                    }
                }) : e._e(), e._v(" "), e.analysisDropdownTarget ? a("analysis-options-dropdown", {
                    attrs: {
                        target: e.analysisDropdownTarget,
                        position: e.position,
                        "analysis-options": e.analysisOptions
                    },
                    on: {
                        "option-selected": e.onClickAnalysisOption,
                        hide: e.hideAnalysisDropdown
                    }
                }) : e._e()], 1)
            }
            ), [], !1, (function user_actions_injectStyles(e) {
                this.$style = bn.locals || bn
            }
            ), null, null).exports
              , fn = {
                name: "OnlineStatus",
                props: {
                    isInLivechess: Boolean,
                    isOnline: Boolean
                },
                computed: {
                    classes() {
                        return [this.$style.component, {
                            [this.$style.online]: this.isOnline
                        }, {
                            [this.$style.live]: this.isInLivechess
                        }]
                    }
                }
            }
              , vn = {
                component: "online-status-component",
                online: "online-status-online",
                live: "online-status-live"
            };
            var wn = (0,
            Ga.Z)(fn, (function() {
                var e = this
                  , t = e.$createElement;
                return (e._self._c || t)("div", {
                    class: e.classes
                })
            }
            ), [], !1, (function online_status_injectStyles(e) {
                this.$style = vn.locals || vn
            }
            ), null, null).exports
              , yn = a(86910)
              , kn = a(4593)
              , _n = {
                name: "PresenceSquare",
                props: {
                    size: {
                        type: Number,
                        required: !1,
                        default: 3
                    },
                    userPresence: {
                        type: Object,
                        required: !0
                    }
                },
                computed: {
                    squareColor() {
                        var e, t;
                        return (null == (e = this.userPresence) ? void 0 : e.isPlaying) ? this.$style.red : (null == (t = this.userPresence) ? void 0 : t.isOnline) ? this.$style.green : ""
                    },
                    squareStyle() {
                        return `width: ${this.size}rem; height: ${this.size}rem;`
                    }
                }
            }
              , Cn = {
                component: "presence-square-component",
                square: "presence-square-square",
                round: "presence-square-round",
                red: "presence-square-red",
                green: "presence-square-green"
            };
            var Tn = (0,
            Ga.Z)(_n, (function() {
                var e, t = this, a = t.$createElement, s = t._self._c || a;
                return s("div", {
                    class: t.$style.component
                }, [s("div", {
                    class: [t.$style.square, t.squareColor, (e = {},
                    e[t.$style.round] = t.size > 2,
                    e)],
                    style: t.squareStyle
                })])
            }
            ), [], !1, (function presence_square_injectStyles(e) {
                this.$style = Cn.locals || Cn
            }
            ), null, null).exports
              , Sn = {
                name: "UserAvatar",
                directives: {
                    ImageDefer: kn.Z
                },
                components: {
                    OnlineStatus: wn,
                    PresenceSquare: Tn
                },
                props: {
                    alt: {
                        type: String,
                        default: ""
                    },
                    image: {
                        type: [String, null]
                    },
                    isLive: {
                        type: Boolean,
                        default: !1
                    },
                    presenceData: {
                        type: Object,
                        default: void 0
                    },
                    presenceSize: {
                        type: Number,
                        default: 1.5
                    },
                    isOnline: {
                        type: Boolean,
                        default: !1
                    },
                    url: {
                        type: String,
                        required: !1
                    }
                },
                computed: {
                    blankImage: ()=>(0,
                    yn.n)("bundles/web/images/user-image.svg"),
                    imageDefer() {
                        return this.image ? {
                            src: this.image,
                            srcset: !0
                        } : void 0
                    }
                }
            }
              , xn = {
                component: "user-avatar-component",
                image: "user-avatar-image"
            };
            var En = (0,
            Ga.Z)(Sn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a(e.url ? "a" : "div", {
                    tag: "component",
                    class: e.$style.component,
                    attrs: {
                        href: e.url
                    }
                }, [a("img", {
                    directives: [{
                        name: "image-defer",
                        rawName: "v-image-defer",
                        value: e.imageDefer,
                        expression: "imageDefer"
                    }],
                    class: e.$style.image,
                    attrs: {
                        alt: e.alt.length ? e.alt : null,
                        src: e.blankImage,
                        width: "50",
                        height: "50"
                    }
                }), e._v(" "), e.presenceData ? a("presence-square", {
                    attrs: {
                        size: e.presenceSize,
                        "user-presence": e.presenceData
                    }
                }) : a("online-status", {
                    attrs: {
                        "is-in-live-chess": e.isLive,
                        "is-online": e.isOnline
                    }
                })], 1)
            }
            ), [], !1, (function user_avatar_injectStyles(e) {
                this.$style = xn.locals || xn
            }
            ), null, null).exports
              , On = {
                name: "UserFlairStatus",
                props: {
                    status: {
                        type: String,
                        required: !0
                    }
                }
            }
              , An = {
                component: "user-flair-status-component"
            };
            var Mn = (0,
            Ga.Z)(On, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.status.length ? a("div", {
                    class: e.$style.component,
                    domProps: {
                        textContent: e._s(e.status)
                    }
                }) : e._e()
            }
            ), [], !1, (function user_flair_status_injectStyles(e) {
                this.$style = An.locals || An
            }
            ), null, null).exports
              , Pn = (0,
            Ce.aZ)({
                name: "UserLifetimeScore",
                components: {
                    UserTagline: ns.Z
                },
                props: {
                    opponent: Object,
                    username: String,
                    lifetimeScore: {
                        type: Object,
                        default: ()=>({
                            win: 0,
                            lose: 0,
                            draw: 0
                        })
                    }
                },
                computed: {
                    opponentUrl() {
                        var e;
                        return (null == (e = this.opponent) ? void 0 : e.username) ? le.Z.generate("web_member_view", {
                            username: this.opponent.username
                        }) : null
                    },
                    archiveUrl() {
                        var e;
                        return (null == (e = this.opponent) ? void 0 : e.username) && this.username ? le.Z.generate("web_archive_index", {
                            username: this.opponent.username,
                            opponent: this.username
                        }) : null
                    },
                    opponentTitle() {
                        var e, t;
                        return (null == (e = this.opponent) ? void 0 : e.chessTitle) ? this.opponent.chessTitle : (null == (t = this.opponent) ? void 0 : t.title) ? this.opponent.title.toUpperCase() : null
                    }
                }
            })
              , jn = {
                component: "user-lifetime-score-component",
                tagline: "user-lifetime-score-tagline",
                win: "user-lifetime-score-win",
                lose: "user-lifetime-score-lose",
                icon: "user-lifetime-score-icon"
            };
            var zn = (0,
            Ga.Z)(Pn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a(e.archiveUrl ? "a" : "div", {
                    tag: "component",
                    class: e.$style.component,
                    attrs: {
                        href: e.archiveUrl,
                        target: "_blank"
                    }
                }, [a("span", {
                    class: e.$style.win,
                    domProps: {
                        textContent: e._s(e.lifetimeScore.win)
                    }
                }), e._v(" "), a("span", {
                    class: e.$style.divider,
                    domProps: {
                        textContent: e._s("/")
                    }
                }), e._v(" "), a("span", {
                    domProps: {
                        textContent: e._s(e.lifetimeScore.draw)
                    }
                }), e._v(" "), a("span", {
                    class: e.$style.divider,
                    domProps: {
                        textContent: e._s("/")
                    }
                }), e._v(" "), a("span", {
                    class: e.$style.lose,
                    domProps: {
                        textContent: e._s(e.lifetimeScore.lose)
                    }
                }), e._v(" "), a("span", {
                    domProps: {
                        textContent: e._s(e.$trans("vs"))
                    }
                }), e._v(" "), a("user-tagline", {
                    class: e.$style.tagline,
                    attrs: {
                        title: e.opponentTitle,
                        username: e.opponent.username,
                        "is-dark-mode": !1,
                        "username-theme": "darkgray",
                        "is-username-clickable": !1
                    }
                }), e._v(" "), e.archiveUrl ? a("span", {
                    class: ["icon-font-chess", "square-out", e.$style.icon]
                }) : e._e()], 1)
            }
            ), [], !1, (function user_lifetime_score_injectStyles(e) {
                this.$style = jn.locals || jn
            }
            ), null, null).exports
              , Wn = {
                name: "UserRating",
                components: {
                    IconFont: $s.Z
                },
                props: {
                    icon: {
                        type: String,
                        required: !0
                    },
                    rating: {
                        type: Number,
                        required: !0
                    }
                }
            }
              , Ln = {
                component: "user-rating-component",
                icon: "user-rating-icon",
                rating: "user-rating-rating"
            };
            var In = (0,
            Ga.Z)(Wn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("span", {
                    class: e.$style.component
                }, [a("icon-font", {
                    class: e.$style.icon,
                    attrs: {
                        theme: "primary",
                        name: e.icon
                    }
                }), e._v(" "), a("span", {
                    class: e.$style.rating
                }, [e._v("\n    " + e._s(e.rating) + "\n  ")])], 1)
            }
            ), [], !1, (function user_rating_injectStyles(e) {
                this.$style = Ln.locals || Ln
            }
            ), null, null).exports
              , Rn = a(26924)
              , Nn = a(16272)
              , Bn = a(74672)
              , Fn = (e=>(e.MUTE = "mute",
            e.UNMUTE = "unmute",
            e.WARN = "warn",
            e))(Fn || {})
              , Dn = a(57463)
              , $n = {
                name: "PresenceButton",
                components: {
                    V5Button: $a.V5Button
                },
                props: {
                    username: {
                        type: String,
                        required: !0
                    },
                    userPresence: {
                        type: Object,
                        required: !0
                    },
                    isButtonSmall: {
                        type: Boolean,
                        default: !1
                    },
                    isIconsOnly: {
                        type: Boolean,
                        default: !1
                    },
                    isShowLastOnline: {
                        type: Boolean,
                        default: !1
                    },
                    isWatchOnly: {
                        type: Boolean,
                        default: !1
                    },
                    location: {
                        type: String,
                        default: "N/A"
                    }
                },
                computed: {
                    buttonData() {
                        const {battleLink: e, eventLink: t, gameLink: a, isOnline: s, isPlaying: n, offlineSince: o} = this.userPresence;
                        return n ? {
                            theme: this.isIconsOnly ? "" : "danger",
                            text: this.isIconsOnly ? "" : this.$trans("Watch"),
                            icon: "binoculars",
                            show: !0,
                            href: t || a || e
                        } : s ? {
                            theme: this.isIconsOnly ? "" : "primary",
                            text: this.isIconsOnly ? "" : this.$trans("Challenge"),
                            icon: "chess-board-plus",
                            show: !this.isWatchOnly,
                            href: le.Z.generate("web_play_new", {
                                opponent: this.username
                            })
                        } : this.isShowLastOnline ? {
                            lastOnline: Nn.p6.relative(new Date(o)),
                            show: !1
                        } : {
                            show: !1
                        }
                    }
                },
                methods: {
                    handleClick() {
                        const e = this.userPresence.isPlaying ? "watch" : "challenge"
                          , t = this.location;
                        Dn.Z.logEvent("presenceUiClick", {
                            selection: e,
                            location: t
                        })
                    }
                }
            }
              , qn = {
                component: "presence-button-component",
                placeholder: "presence-button-placeholder",
                visible: "presence-button-visible",
                hidden: "presence-button-hidden",
                narrow: "presence-button-narrow",
                watchIconOnly: "presence-button-watchIconOnly",
                challengeIconOnly: "presence-button-challengeIconOnly"
            };
            var Un = (0,
            Ga.Z)($n, (function() {
                var e, t, a, s, n = this, o = n.$createElement, r = n._self._c || o;
                return r("div", {
                    class: [n.$style.component, (e = {},
                    e[n.$style.narrow] = n.isIconsOnly,
                    e), (t = {},
                    t[n.$style.visible] = n.buttonData.show,
                    t), (a = {},
                    a[n.$style.hidden] = !n.buttonData.show,
                    a)]
                }, [n.buttonData.show ? r("v5-button", {
                    class: (s = {
                        staffGreen: "primary" === n.buttonData.theme
                    },
                    s[n.$style.challengeIconOnly] = n.isIconsOnly && n.userPresence.isOnline && !n.userPresence.isPlaying,
                    s[n.$style.watchIconOnly] = n.isIconsOnly && n.userPresence.isPlaying,
                    s),
                    attrs: {
                        href: n.buttonData.href,
                        size: n.isButtonSmall ? "x-small" : "small",
                        theme: n.buttonData.theme
                    },
                    on: {
                        click: function(e) {
                            return n.handleClick(e)
                        }
                    }
                }, [r("span", {
                    domProps: {
                        textContent: n._s(n.buttonData.text)
                    }
                }), n._v(" "), r("span", {
                    class: ["icon-font-chess ui_v5-button-icon", n.buttonData.icon]
                })]) : n.isShowLastOnline && n.buttonData.lastOnline ? r("div", {
                    domProps: {
                        textContent: n._s(n.buttonData.lastOnline)
                    }
                }) : r("div", {
                    class: n.$style.placeholder
                })], 1)
            }
            ), [], !1, (function presence_button_injectStyles(e) {
                this.$style = qn.locals || qn
            }
            ), null, null).exports
              , Zn = {
                name: "UserPopover",
                components: {
                    LoaderThreeBounce: Ls.Z,
                    UserAvatar: En,
                    UserFlairStatus: Mn,
                    UserRating: In,
                    UserTagline: ns.Z,
                    UserActions: gn,
                    UserLifetimeScore: zn,
                    AdminActions: Ds,
                    V5Button: $a.V5Button,
                    V5Input: $a.V5Input,
                    PresenceButton: Un
                },
                directives: {
                    Tooltip: os.Z,
                    ClickOutside: Rn.Z
                },
                props: {
                    avatar: {
                        type: String,
                        default: ""
                    },
                    ratings: {
                        type: Array,
                        required: !0
                    },
                    chessTitle: {
                        type: String,
                        required: !1
                    },
                    country: {
                        type: Object,
                        required: !1
                    },
                    flair: {
                        type: Object,
                        default: ()=>({
                            code: "",
                            status: ""
                        })
                    },
                    isEnabled: {
                        type: Boolean
                    },
                    isGuest: {
                        type: Boolean,
                        default: !1
                    },
                    isLoading: {
                        type: Boolean,
                        default: !1
                    },
                    joinedDate: String,
                    lastLoginDate: String,
                    membership: {
                        type: Number,
                        required: !1
                    },
                    onlineStatus: {
                        type: [Boolean, String],
                        required: !1
                    },
                    usernameElementRef: {
                        type: HTMLElement,
                        required: !0
                    },
                    username: {
                        type: String,
                        required: !1
                    },
                    isFideVerified: {
                        type: Boolean,
                        default: !1
                    },
                    canAddFriend: Boolean,
                    canBlockUser: Boolean,
                    canUseGlobalChat: Boolean,
                    canReportUser: Boolean,
                    canCreateChallenge: Boolean,
                    canFollowUser: Boolean,
                    canGiftMembership: Boolean,
                    canRemoveFriend: Boolean,
                    canSendMessage: Boolean,
                    canInviteToChat: Boolean,
                    canSendTrophy: Boolean,
                    canUnblockUser: Boolean,
                    canUnfollowUser: Boolean,
                    loggedAsAnother: Boolean,
                    canMuteUser: {
                        type: Boolean,
                        default: !1
                    },
                    canObserveGame: {
                        type: Boolean,
                        default: !1
                    },
                    isBughousePartner: {
                        type: Boolean,
                        default: !1
                    },
                    shouldShowModeration: {
                        type: Boolean,
                        default: !1
                    },
                    challengeUrl: String,
                    canCancelFriendRequest: {
                        type: Boolean,
                        default: !1
                    },
                    canDeclineFriendRequest: {
                        type: Boolean,
                        default: !1
                    },
                    canAcceptFriendRequest: {
                        type: Boolean,
                        default: !1
                    },
                    archiveUrl: String,
                    chatOptions: {
                        type: Array,
                        default: ()=>[]
                    },
                    canInviteToAnalysis: {
                        type: Boolean,
                        default: !1
                    },
                    analysisOptions: {
                        type: Array,
                        default: ()=>[]
                    },
                    canModerate: {
                        type: Boolean,
                        default: !1
                    },
                    clientName: String,
                    canWarnOnChat: Boolean,
                    canModerateOnChat: Boolean,
                    showBughousePartner: {
                        type: Boolean,
                        default: !1
                    },
                    openProfileOnNewTab: {
                        type: Boolean,
                        required: !1
                    },
                    membershipUrl: String,
                    dynamicActions: Array,
                    clubChatIdForModeratorActions: String,
                    popoverPosition: {
                        type: Object,
                        default: null
                    },
                    presenceDetails: {
                        type: Object,
                        default: null
                    },
                    showProfileUrls: {
                        type: Boolean,
                        default: !0
                    },
                    userAlreadyMutedOnChat: Boolean,
                    uuid: String,
                    leagueCode: String,
                    leagueDivision: String,
                    leagueName: String,
                    opponent: Object,
                    lifetimeScore: Object
                },
                emits: ["chat-kick-user", "chat-mute-user", "chat-warn-user", "ban-user", "kick-user", "mute-user", "warn-user", "block-user", "remove-friend", "user-popover-hide", "request-chat", "invite-analysis", "bughouse-unpartner", "bughouse-partner", "observe-user", "show-trophy", "show-report", "unblock-user", "unfollow-user", "follow-user", "accept-friend-request", "start-direct-chat", "show-archive", "show-gift", "decline-friend-request", "cancel-friend-request", "add-friend", "send-message", "create-challenge"],
                data: ()=>({
                    clubChatModeratorMessage: "",
                    isLoggedIn: (0,
                    zs.jl)(),
                    offset: 12,
                    translations: js.Iz,
                    confirmMessage: null,
                    confirmCallback: null,
                    position: {
                        x: 0,
                        y: 0,
                        top: 0,
                        left: 0
                    }
                }),
                computed: {
                    adminActionsIsVisible() {
                        return this.canModerate || this.canWarnOnChat || this.canModerateOnChat || this.clubChatIdForModeratorActions
                    },
                    formatedJoinedDate() {
                        return (0,
                        zs.jl)() ? this.joinedDate : Nn.p6.relative(this.joinedDate)
                    },
                    formatedLastLoginDate() {
                        return (0,
                        zs.jl)() ? this.presenceLastLoginDate : Nn.p6.relative(this.presenceLastLoginDate)
                    },
                    memberUrl() {
                        return le.Z.generate("web_member_view", {
                            username: this.username
                        })
                    },
                    fideUrl: ()=>le.Z.generate("web_verification_index"),
                    ratingsToShow() {
                        return this.ratings.slice(0, 3)
                    },
                    isConfirmVisible() {
                        return !!this.confirmMessage && !!this.confirmCallback
                    },
                    isFideEnabledAndVerified() {
                        return this.isFideVerified
                    },
                    isLeaguePlayer() {
                        return this.leagueCode && this.leagueDivision && this.username
                    },
                    showOfflineText() {
                        return this.presenceDetails && !this.presenceDetails.isOnline
                    },
                    presenceLastLoginDate() {
                        var e;
                        return !(null == (e = this.presenceDetails) ? void 0 : e.offlineSince) || this.presenceDetails.isOfflineStatusUncertain ? this.lastLoginDate || "" : Nn.p6.relative(new Date(this.presenceDetails.offlineSince))
                    },
                    inlineStyles() {
                        return setPopoverPosition(this.position)
                    },
                    userDivision() {
                        return js._j.userDivision({
                            league: this.leagueCode,
                            division: this.leagueDivision
                        })
                    }
                },
                mounted() {
                    this.popoverPosition ? this.position = this.popoverPosition : this.updatePopoverPosition()
                },
                methods: {
                    onMouseEnter() {
                        clearTimeout(this.hideTimeout)
                    },
                    onMouseLeave() {
                        this.hideTimeout = setTimeout((()=>{
                            this.hidePopover()
                        }
                        ), 500)
                    },
                    hidePopover() {
                        this.$emit("user-popover-hide")
                    },
                    onConfirmYes() {
                        this.confirmCallback && this.confirmCallback(),
                        this.onConfirmNo()
                    },
                    onConfirmNo() {
                        this.confirmMessage = null,
                        this.confirmCallback = null
                    },
                    onClickRemoveFriend() {
                        this.confirmMessage = this.$trans("Are you sure you want to remove this friend from your list?"),
                        this.confirmCallback = ()=>this.$emit("remove-friend")
                    },
                    onClickBlockUser() {
                        this.confirmMessage = this.$trans("Are you sure you want to block this user?"),
                        this.confirmCallback = ()=>this.$emit("block-user")
                    },
                    onClickWarn() {
                        this.confirmMessage = this.$trans("Are you sure you want to warn this user?"),
                        this.confirmCallback = ()=>this.$emit("warn-user")
                    },
                    onClickMute() {
                        this.confirmMessage = this.$trans("Are you sure you want to mute this user?"),
                        this.confirmCallback = ()=>this.$emit("mute-user")
                    },
                    onClickKick() {
                        this.confirmMessage = this.$trans("Are you sure you want to kick this user?"),
                        this.confirmCallback = ()=>this.$emit("kick-user")
                    },
                    onClickBan() {
                        this.confirmMessage = this.$trans("Are you sure you want to ban this user?"),
                        this.confirmCallback = ()=>this.$emit("ban-user")
                    },
                    onClickChatWarn() {
                        this.confirmMessage = this.$trans("Are you sure you want to warn this user?"),
                        this.clubChatIdForModeratorActions ? this.confirmCallback = this.onClubChatAction(Fn.WARN) : this.confirmCallback = ()=>this.$emit("chat-warn-user")
                    },
                    onClickChatMute() {
                        this.confirmMessage = this.$trans("Are you sure you want to mute this user?"),
                        this.clubChatIdForModeratorActions ? this.confirmCallback = this.onClubChatAction(Fn.MUTE) : this.confirmCallback = ()=>this.$emit("chat-mute-user")
                    },
                    onClickChatMuteRemoveMessages() {
                        this.confirmMessage = this.$trans("Are you sure you want to mute this user?"),
                        this.confirmCallback = this.onClubChatAction(Fn.MUTE, !0)
                    },
                    onClickChatUnMute() {
                        this.confirmMessage = this.$trans("Are you sure you want to unmute this user?"),
                        this.confirmCallback = this.onClubChatAction(Fn.UNMUTE)
                    },
                    onClickChatKick() {
                        this.confirmMessage = this.$trans("Are you sure you want to kick this user?"),
                        this.clubChatIdForModeratorActions || (this.confirmCallback = ()=>this.$emit("chat-kick-user"))
                    },
                    onClubChatAction(e, t) {
                        const a = {
                            chatId: this.clubChatIdForModeratorActions,
                            key: Ws.U3.CLUB_CHAT_MODERATOR_ACTION,
                            type: e,
                            userId: this.uuid
                        };
                        return t && (a.hideMessages = !0),
                        ()=>{
                            a.message = this.clubChatModeratorMessage,
                            (0,
                            Bn.o)(a)
                        }
                    },
                    updatePopoverPosition() {
                        if (!this.usernameElementRef || !this.$refs.userPopover)
                            return;
                        const e = this.usernameElementRef.getBoundingClientRect()
                          , {clientHeight: t, clientWidth: a} = this.$refs.userPopover;
                        this.position = (0,
                        Ps.MD)(e, t, a)
                    }
                }
            }
              , Gn = {
                popover: "user-popover-popover",
                bottom: "user-popover-bottom",
                top: "user-popover-top",
                component: "user-popover-component",
                "avatar-placeholder": "user-popover-avatar-placeholder",
                profile: "user-popover-profile",
                meta: "user-popover-meta",
                info: "user-popover-info",
                onlive: "user-popover-onlive",
                online: "user-popover-online",
                status: "user-popover-status",
                details: "user-popover-details",
                secondary: "user-popover-secondary",
                loader: "user-popover-loader",
                actions: "user-popover-actions",
                ratings: "user-popover-ratings",
                confirm: "user-popover-confirm",
                "moderator-message": "user-popover-moderator-message",
                badge: "user-popover-badge"
            };
            var Hn = (0,
            Ga.Z)(Zn, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    directives: [{
                        name: "click-outside",
                        rawName: "v-click-outside",
                        value: e.onMouseLeave,
                        expression: "onMouseLeave"
                    }],
                    ref: "userPopover",
                    class: [e.$style.popover, e.$style[e.position.x], e.$style[e.position.y]],
                    style: e.inlineStyles,
                    on: {
                        mouseenter: e.onMouseEnter,
                        mouseleave: e.onMouseLeave
                    }
                }, [a("div", {
                    class: e.$style.component
                }, [a("div", {
                    class: e.$style.profile
                }, [a("div", {
                    class: e.$style.meta
                }, [e.username ? a("user-avatar", {
                    attrs: {
                        image: e.avatar,
                        "presence-data": e.presenceDetails,
                        url: e.showProfileUrls ? e.memberUrl : null
                    }
                }) : e._e(), e._v(" "), e.username ? e._e() : a("div", {
                    class: e.$style["avatar-placeholder"]
                }), e._v(" "), e.username ? a("div", {
                    class: e.$style.info
                }, [a("user-tagline", {
                    attrs: {
                        "username-theme": "blue",
                        country: e.country,
                        "flair-code": e.flair ? e.flair.code : "",
                        membership: e.membership,
                        "not-clickable": !e.showProfileUrls,
                        "open-profile-on-new-tab": e.openProfileOnNewTab,
                        title: e.chessTitle,
                        url: e.showProfileUrls ? e.memberUrl : null,
                        username: e.username
                    }
                }), e._v(" "), e.isEnabled ? a("user-flair-status", {
                    attrs: {
                        status: e.flair ? e.flair.status : ""
                    }
                }) : e._e(), e._v(" "), a("div", {
                    class: e.$style.ratings
                }, e._l(e.ratingsToShow, (function(e) {
                    return a("user-rating", {
                        directives: [{
                            name: "tooltip",
                            rawName: "v-tooltip",
                            value: e.label,
                            expression: "rating.label"
                        }],
                        key: e.type,
                        attrs: {
                            icon: e.icon,
                            rating: e.value
                        }
                    })
                }
                )), 1)], 1) : e._e(), e._v(" "), e.isLeaguePlayer ? a("a", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.$trans("%leagueName% Division", {
                            "%leagueName%": e.leagueName
                        }),
                        expression: "$trans('%leagueName% Division', { '%leagueName%': leagueName })"
                    }],
                    class: e.$style.badge,
                    attrs: {
                        href: e.userDivision
                    }
                }, [a("img", {
                    attrs: {
                        src: "/bundles/web/images/leagues/badges/" + e.leagueCode + ".svg",
                        width: "38",
                        height: "28"
                    }
                })]) : e._e(), e._v(" "), e.isFideEnabledAndVerified ? a("a", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.$trans("Verified"),
                        expression: "$trans('Verified')"
                    }],
                    class: e.$style.badge,
                    attrs: {
                        href: e.fideUrl
                    }
                }, [a("img", {
                    attrs: {
                        alt: e.$trans("Verified"),
                        width: "30",
                        height: "28",
                        src: "/bundles/web/images/color-icons/verified.svg"
                    }
                })]) : e._e(), e._v(" "), e.username ? e._e() : a("div", {
                    class: e.$style.info
                }, [a("loader-three-bounce", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.isLoading,
                        expression: "isLoading"
                    }],
                    class: e.$style.loader,
                    attrs: {
                        size: 40
                    }
                })], 1)], 1), e._v(" "), e.joinedDate && e.username ? a("div", {
                    class: e.$style.secondary
                }, [a("div", {
                    domProps: {
                        textContent: e._s(e.translations.joinedDate(e.formatedJoinedDate))
                    }
                }), e._v(" "), a("div", {
                    class: e.$style.status
                }, [e.presenceDetails && e.loggedAsAnother ? a("presence-button", {
                    attrs: {
                        location: "user-popover",
                        username: e.username,
                        "user-presence": e.presenceDetails
                    }
                }) : e._e(), e._v(" "), e.presenceLastLoginDate && e.showOfflineText ? a("div", {
                    domProps: {
                        textContent: e._s(e.translations.lastOnline(e.formatedLastLoginDate))
                    }
                }) : e._e()], 1)]) : e._e(), e._v(" "), e.username ? e._e() : a("div", {
                    class: e.$style.secondary
                }), e._v(" "), e.lifetimeScore && e.opponent && e.username ? a("user-lifetime-score", {
                    attrs: {
                        username: e.username,
                        opponent: e.opponent,
                        "lifetime-score": e.lifetimeScore
                    }
                }) : e._e()], 1), e._v(" "), e.adminActionsIsVisible ? a("admin-actions", {
                    attrs: {
                        "can-moderate": e.canModerate,
                        "client-name": e.clientName,
                        "can-mute-on-chat": Boolean(e.clubChatIdForModeratorActions),
                        "can-warn-on-chat": e.canWarnOnChat || Boolean(e.clubChatIdForModeratorActions),
                        "can-moderate-on-chat": e.canModerateOnChat,
                        "user-already-muted-on-chat": e.userAlreadyMutedOnChat
                    },
                    on: {
                        "warn-user": e.onClickWarn,
                        "mute-user": e.onClickMute,
                        "kick-user": e.onClickKick,
                        "ban-user": e.onClickBan,
                        "chat-warn-user": e.onClickChatWarn,
                        "chat-mute-user": e.onClickChatMute,
                        "chat-unmute-user": e.onClickChatUnMute,
                        "chat-mute-user-remove-messages": e.onClickChatMuteRemoveMessages,
                        "chat-kick-user": e.onClickChatKick
                    }
                }) : e._e(), e._v(" "), e.isLoggedIn && !e.isGuest ? a("div", {
                    class: e.$style.actions
                }, [e.username ? a("user-actions", {
                    attrs: {
                        avatar: e.avatar,
                        "can-add-friend": e.canAddFriend,
                        "can-block-user": e.canBlockUser,
                        "can-create-challenge": e.canCreateChallenge,
                        "can-follow-user": e.canFollowUser,
                        "can-gift-membership": e.canGiftMembership,
                        "can-remove-friend": e.canRemoveFriend,
                        "can-report-user": e.canReportUser,
                        "can-send-message": e.canSendMessage,
                        "can-invite-to-chat": e.canInviteToChat,
                        "can-send-trophy": e.canSendTrophy,
                        "can-unblock-user": e.canUnblockUser,
                        "can-unfollow-user": e.canUnfollowUser,
                        "can-use-global-chat": e.canUseGlobalChat,
                        "can-cancel-friend-request": e.canCancelFriendRequest,
                        "can-decline-friend-request": e.canDeclineFriendRequest,
                        "can-accept-friend-request": e.canAcceptFriendRequest,
                        "dynamic-actions": e.dynamicActions,
                        "logged-as-another": e.loggedAsAnother,
                        username: e.username,
                        "can-observe-game": e.canObserveGame,
                        "is-bughouse-partner": e.isBughousePartner,
                        "challenge-url": e.challengeUrl,
                        "archive-url": e.archiveUrl,
                        "chat-options": e.chatOptions,
                        position: e.position,
                        "can-invite-to-analysis": e.canInviteToAnalysis,
                        "analysis-options": e.analysisOptions,
                        "is-enabled": e.isEnabled,
                        "is-confirm-visible": e.isConfirmVisible,
                        "show-bughouse-partner": e.showBughousePartner,
                        "membership-url": e.membershipUrl
                    },
                    on: {
                        "remove-friend": e.onClickRemoveFriend,
                        "block-user": e.onClickBlockUser,
                        "user-popover-hide": e.hidePopover,
                        "create-challenge": function(t) {
                            return e.$emit("create-challenge", t)
                        },
                        "send-message": function(t) {
                            return e.$emit("send-message", t)
                        },
                        "add-friend": function(t) {
                            return e.$emit("add-friend", t)
                        },
                        "cancel-friend-request": function(t) {
                            return e.$emit("cancel-friend-request", t)
                        },
                        "decline-friend-request": function(t) {
                            return e.$emit("decline-friend-request", t)
                        },
                        "show-gift": function(t) {
                            return e.$emit("show-gift", t)
                        },
                        "show-archive": function(t) {
                            return e.$emit("show-archive", t)
                        },
                        "start-direct-chat": function(t) {
                            return e.$emit("start-direct-chat")
                        },
                        "mute-user": function(t) {
                            return e.$emit("mute-user", t)
                        },
                        "accept-friend-request": function(t) {
                            return e.$emit("accept-friend-request", t)
                        },
                        "follow-user": function(t) {
                            return e.$emit("follow-user", t)
                        },
                        "unfollow-user": function(t) {
                            return e.$emit("unfollow-user", t)
                        },
                        "unblock-user": function(t) {
                            return e.$emit("unblock-user", t)
                        },
                        "show-report": function(t) {
                            return e.$emit("show-report", t)
                        },
                        "show-trophy": function(t) {
                            return e.$emit("show-trophy", t)
                        },
                        "observe-user": function(t) {
                            return e.$emit("observe-user", t)
                        },
                        "bughouse-partner": function(t) {
                            return e.$emit("bughouse-partner", t)
                        },
                        "bughouse-unpartner": function(t) {
                            return e.$emit("bughouse-unpartner", t)
                        },
                        "request-chat": function(t) {
                            return e.$emit("request-chat", t)
                        },
                        "invite-analysis": function(t) {
                            return e.$emit("invite-analysis", t)
                        }
                    }
                }) : e._e()], 1) : e._e()], 1), e._v(" "), e.isConfirmVisible ? a("div", {
                    class: e.$style.confirm
                }, [a("p", {
                    domProps: {
                        innerHTML: e._s(e.confirmMessage)
                    }
                }), e._v(" "), e.clubChatIdForModeratorActions && !e.userAlreadyMutedOnChat ? a("p", [e._v("\n      " + e._s(e.$trans("Message to user:")) + "\n      "), a("v5-input", {
                    class: e.$style["moderator-message"],
                    attrs: {
                        "force-theme": "light"
                    },
                    model: {
                        value: e.clubChatModeratorMessage,
                        callback: function(t) {
                            e.clubChatModeratorMessage = t
                        },
                        expression: "clubChatModeratorMessage"
                    }
                })], 1) : e._e(), e._v(" "), a("div", [a("v5-button", {
                    attrs: {
                        size: "x-small",
                        theme: "basic-light"
                    },
                    domProps: {
                        textContent: e._s(e.$trans("No"))
                    },
                    on: {
                        click: e.onConfirmNo
                    }
                }), e._v(" "), a("v5-button", {
                    attrs: {
                        size: "x-small",
                        theme: "primary"
                    },
                    domProps: {
                        textContent: e._s(e.$trans("Yes"))
                    },
                    on: {
                        click: e.onConfirmYes
                    }
                })], 1)]) : e._e()])
            }
            ), [], !1, (function user_popover_injectStyles(e) {
                this.$style = Gn.locals || Gn
            }
            ), null, null).exports
              , Vn = {
                namespaced: !0,
                mutations: {
                    newMessage: (e,t)=>{
                        e.message = t
                    }
                },
                state: {
                    message: null
                }
            }
              , Kn = a(49790)
              , Yn = a(26670)
              , Qn = a(70917)
              , Jn = a(18160);
            var Xn = {
                getUserTrophies: ({commit: e},t)=>{
                    const a = {
                        username: t.username,
                        trophyType: t.trophyType
                    };
                    return ie.Z.get(le.Z.generate("web_member_callback_trophy_list", a)).then((t=>{
                        if (t.data)
                            return e("setUserTrophies", t.data),
                            be.Z.set("user_trophies", t.data, 60),
                            t.data
                    }
                    )).catch((()=>{
                        const e = Kn.V5.error;
                        (0,
                        Yn.el)({
                            type: e,
                            message: Kn.R0.badRequest
                        })
                    }
                    ))
                }
                ,
                getAllTrophies: ({commit: e, state: t},a)=>{
                    e("setFinishedLoading", !1);
                    const s = Object.assign({}, {
                        type: t.trophyType
                    }, a);
                    return ie.Z.get(le.Z.generate("web_callback_get_trophies", s)).then((t=>{
                        t.data && e("setAllTrophies", t.data)
                    }
                    )).catch((()=>{
                        const e = Kn.V5.error;
                        (0,
                        Yn.el)({
                            type: e,
                            message: Kn.R0.badRequest
                        })
                    }
                    ))
                }
                ,
                getTrophyShowcase: ({commit: e},t)=>ie.Z.get(le.Z.generate("web_user_trophy_showcase_callback", {
                    username: t
                })).then((t=>{
                    t.data && e("setUserShowcaseTrophies", t.data)
                }
                )).catch((()=>{
                    const e = Kn.V5.error;
                    (0,
                    Yn.el)({
                        type: e,
                        message: Kn.R0.badRequest
                    })
                }
                )),
                getUserTrophyCount: ({commit: e},t)=>ie.Z.get(le.Z.generate("web_callback_count_user_trophies", {
                    username: t
                })).then((t=>{
                    t.data && e("setUserTrophiesCount", t.data.count)
                }
                )).catch((()=>{
                    const e = Kn.V5.error;
                    (0,
                    Yn.el)({
                        type: e,
                        message: Kn.R0.badRequest
                    })
                }
                )),
                featureTrophy: ({dispatch: e},{trophyId: t, featured: a, username: s})=>{
                    const n = {
                        id: t,
                        featured: a
                    };
                    return ie.Z.post(le.Z.generate("web_feature_trophy_callback", n)).then((t=>{
                        const a = Kn.V5.success
                          , n = (e=>{
                            var t, a;
                            return null != (a = null == (t = e.data) ? void 0 : t.message) ? a : Kn.R0.badRequest
                        }
                        )(t);
                        (0,
                        Yn.el)({
                            type: a,
                            message: n
                        }),
                        e("getTrophyShowcase", s)
                    }
                    )).catch((()=>{
                        const e = Kn.V5.error
                          , t = Jn.Z.trans("Error featuring trophies. Please try again later.");
                        (0,
                        Yn.el)({
                            type: e,
                            message: t
                        })
                    }
                    ))
                }
                ,
                sendTrophyToUser: ({commit: e, state: t})=>{
                    const a = {
                        username: t.recipientUsername,
                        trophyId: t.selectedTrophy.id,
                        message: (0,
                        Qn.Ak)(t.message)
                    };
                    return "number" == typeof t.gameId && (a[t.isLiveGame ? "gameLiveId" : "gameId"] = t.gameId),
                    e("disableSendButton", !0),
                    ie.Z.post(le.Z.generate("web_award_trophy_callback", a)).then((()=>{
                        e("disableSendButton", !1)
                    }
                    )).catch((t=>(e("setErrorMessage", t.response.data.message),
                    e("disableSendButton", !1),
                    Promise.reject(t))))
                }
            }
              , eo = {
                namespaced: !0,
                actions: Xn,
                mutations: {
                    disableSendButton: (e,t)=>{
                        e.disableSendButton = t
                    }
                    ,
                    setUserTrophies: (e,t)=>{
                        e.userTrophies = t
                    }
                    ,
                    setAllTrophies: (e,t)=>{
                        e.trophies = t.data,
                        e.meta = t.meta,
                        e.allTrophiesToGive = t.data,
                        e.finishedLoadingTrophies = !0
                    }
                    ,
                    setErrorMessage: (e,t)=>{
                        e.errorMessage = t
                    }
                    ,
                    setFinishedLoading: (e,t)=>{
                        e.finishedLoadingTrophies = t
                    }
                    ,
                    setGameId: (e,t)=>{
                        e.gameId = t
                    }
                    ,
                    setIsLiveGame: (e,t)=>{
                        e.isLiveGame = t
                    }
                    ,
                    setMessage: (e,t)=>{
                        e.message = t
                    }
                    ,
                    setModalState: (e,t)=>{
                        e.modalState = t
                    }
                    ,
                    setRecipientIsFriend: (e,t)=>{
                        e.recipientIsFriend = t
                    }
                    ,
                    setRecipientUsername: (e,t)=>{
                        e.recipientUsername = t
                    }
                    ,
                    setSelectedTrophy: (e,t)=>{
                        e.selectedTrophy = t
                    }
                    ,
                    setTrophyType: (e,t)=>{
                        e.trophyType = t
                    }
                    ,
                    setUserShowcaseTrophies: (e,t)=>{
                        e.hideShowcase = 0 === t.length,
                        e.userShowcaseTrophies = t
                    }
                    ,
                    setUserTrophiesCount: (e,t)=>{
                        e.userTrophyCount = t
                    }
                },
                state: {
                    allTrophiesToGive: [],
                    disableSendButton: !1,
                    errorMessage: "",
                    finishedLoadingTrophies: !1,
                    gameId: null,
                    hideShowcase: !1,
                    isLiveGame: !1,
                    message: "",
                    meta: {
                        currentPage: 1,
                        morePages: !1
                    },
                    recipientIsFriend: !1,
                    modalState: a(2468).Z.modalStates.select,
                    recipientUsername: null,
                    selectedTrophy: null,
                    trophies: [],
                    trophyType: "social",
                    userShowcaseTrophies: [],
                    userTrophies: [],
                    userTrophyCount: 0
                }
            }
              , to = a(20629)
              , ao = (Object.create,
            Object.defineProperty)
              , so = Object.defineProperties
              , no = (Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyDescriptors)
              , oo = (Object.getOwnPropertyNames,
            Object.getOwnPropertySymbols)
              , ro = (Object.getPrototypeOf,
            Object.prototype.hasOwnProperty)
              , io = Object.prototype.propertyIsEnumerable
              , user_popovervue_type_script_lang_js_defNormalProp = (e,t,a)=>t in e ? ao(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , user_popovervue_type_script_lang_js_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    ro.call(t, a) && user_popovervue_type_script_lang_js_defNormalProp(e, a, t[a]);
                if (oo)
                    for (var a of oo(t))
                        io.call(t, a) && user_popovervue_type_script_lang_js_defNormalProp(e, a, t[a]);
                return e
            }
              , user_popovervue_type_script_lang_js_spreadProps = (e,t)=>so(e, no(t))
              , lo = {
                name: "UserPopoverWidget",
                components: {
                    giftMembershipModal: ()=>({
                        component: a.e(614).then(a.bind(a, 81793))
                    }),
                    UserReportModal: ()=>({
                        component: a.e(210).then(a.bind(a, 17575))
                    }),
                    UserPopover: Hn,
                    TrophyPopover: ()=>({
                        component: a.e(284).then(a.bind(a, 716))
                    })
                },
                data: ()=>({
                    clubChatIdForModeratorActions: !1,
                    clickListener: null,
                    dynamicActions: null,
                    isLoading: !1,
                    showGiftMembershipModal: !1,
                    isUserReportModalVisible: !1,
                    isChallengePopoverVisible: !1,
                    isTrophyPopoverVisible: !1,
                    scrollContainer: null,
                    elementRef: null,
                    userAlreadyMutedOnChat: !1
                }),
                computed: user_popovervue_type_script_lang_js_spreadProps(user_popovervue_type_script_lang_js_spreadValues({}, (0,
                to.rn)({
                    currentUser: e=>e.user,
                    currentUserIsGuest: e=>e.user.isGuest,
                    show: e=>e.userPopover.show,
                    user: e=>e.userPopover.user,
                    username: e=>e.user.username,
                    lifetimeScore: e=>e.userPopover.lifetimeScore,
                    position: e=>e.userPopover.position,
                    presenceDetails: e=>e.userPopover.presenceDetails
                })), {
                    leagueData() {
                        var e;
                        const t = {
                            leagueCode: "",
                            leagueDivision: "",
                            leagueName: ""
                        }
                          , {isOptedIn: a, division: s} = null != (e = this.user.userLeagueData) ? e : {};
                        return a && s && Object.assign(t, {
                            leagueCode: s.league.code,
                            leagueDivision: s.name.slice(1),
                            leagueName: s.league.name
                        }),
                        t
                    },
                    ratings() {
                        const {bestRating: e, bestRatingType: t, topPuzzleRushScore: a} = this.user
                          , s = [{
                            type: t,
                            icon: t,
                            value: e
                        }];
                        return a && s.push({
                            type: "puzzle",
                            icon: "fire-puzzle",
                            value: a
                        }),
                        s
                    },
                    canAddFriend() {
                        return this.loggedAsAnother && !this.user.areFriends && !this.user.isFriendRequestFromUserExists && !this.user.isFriendRequestExists && this.user.isEnabled
                    },
                    canBlockUser() {
                        return this.loggedAsAnother && !this.user.areFriends && !this.user.isBlocked && this.user.isEnabled && this.user.membership && this.user.membership.level < js.p0.moderator
                    },
                    canUseGlobalChat() {
                        return this.loggedAsAnother && this.user.isEnabled
                    },
                    canCreateChallenge() {
                        return this.loggedAsAnother && this.user.isEnabled
                    },
                    canFollowUser() {
                        return this.loggedAsAnother && !this.user.isTracked && this.user.isEnabled
                    },
                    canGiftMembership() {
                        return this.user.canReceiveGiftMembership && this.user.isEnabled
                    },
                    canRemoveFriend() {
                        return this.loggedAsAnother && this.user.areFriends
                    },
                    canReportUser() {
                        return this.loggedAsAnother && !this.user.isModerator && !this.user.isStaff
                    },
                    canSendMessage() {
                        return this.loggedAsAnother && this.user.isMessageable && this.user.isEnabled
                    },
                    canSendTrophy() {
                        return this.canSendMessage && this.user.isEnabled
                    },
                    canUnblockUser() {
                        return this.loggedAsAnother && this.user.isBlocked && this.user.isEnabled
                    },
                    canUnfollowUser() {
                        return this.loggedAsAnother && this.user.isTracked && this.user.isEnabled
                    },
                    hasInboundFriendRequest() {
                        return this.loggedAsAnother && this.user.isFriendRequestFromUserExists
                    },
                    hasOutboundFriendRequest() {
                        return this.loggedAsAnother && this.user.isFriendRequestExists
                    },
                    canCancelFriendRequest() {
                        return this.hasOutboundFriendRequest && !this.hasInboundFriendRequest
                    },
                    canAcceptFriendRequest() {
                        return this.hasInboundFriendRequest
                    },
                    loggedAsAnother() {
                        return this.username && this.username !== this.user.username
                    },
                    membershipNumber() {
                        return (0,
                        zs.yO)(this.user.membership ? this.user.membership.level : null, this.user.isEnabled)
                    },
                    inlineStyles() {
                        return setPopoverPosition(this.position)
                    },
                    areFriends() {
                        return this.user.areFriends
                    },
                    isGuest() {
                        return this.currentUserIsGuest || this.user.isGuest
                    }
                }),
                created() {
                    (0,
                    rs.X)({
                        modalMessages: Vn,
                        trophies: eo
                    })
                },
                mounted() {
                    this.scrollContainer = window,
                    As.Z.on("userPopover/show", (({actions: e, clubChatIdForModeratorActions: t, userAlreadyMutedOnChat: a, username: s},n)=>{
                        if (this.dynamicActions = e,
                        this.clubChatIdForModeratorActions = t,
                        this.userAlreadyMutedOnChat = a,
                        this.$store.dispatch("userPopover/fetchUserPopover", s).then((()=>{
                            this.isLoading = !1
                        }
                        )),
                        this.$store.commit("userPopover/resetUser"),
                        null == s)
                            return;
                        this.clickListener = document.addEventListener("click", (e=>{
                            (this.user.userNotExist || this.$refs.userPopover && e.target !== this.$refs.userPopover.$el && !this.$refs.userPopover.$el.contains(e.target) && !document.getElementById(js.xL.USER_POPOVER_CONTAINER).contains(e.target)) && this.hideUserPopup()
                        }
                        ), !0),
                        setTimeout((()=>{
                            this.user.username || this.user.userNotExist || (this.isLoading = !0)
                        }
                        ), 500),
                        this.scrollContainer.addEventListener("scroll", this.hideUserPopup),
                        this.elementRef = n;
                        const o = (0,
                        Ps.MD)(n.getBoundingClientRect());
                        this.$store.commit("userPopover/setPosition", o),
                        this.$store.commit("userPopover/showUserPopover")
                    }
                    )),
                    As.Z.on("userPopover/hide", this.hideUserPopup)
                },
                beforeDestroy() {
                    this.removeListeners()
                },
                methods: user_popovervue_type_script_lang_js_spreadProps(user_popovervue_type_script_lang_js_spreadValues({}, (0,
                to.OI)({
                    hideUserPopover: "userPopover/hideUserPopover",
                    setRecipientIsFriend: "trophies/setRecipientIsFriend",
                    setRecipientUsername: "trophies/setRecipientUsername"
                })), {
                    onChallenge({username: e}) {
                        window.location = le.Z.generate("web_play_new", {
                            opponent: e
                        })
                    },
                    onMessage(e) {
                        this.hideUserPopup(),
                        window.postMessage({
                            event: "SHOW_MESSAGE_MODAL",
                            user: {
                                avatar_url: e.avatar,
                                username: e.username
                            }
                        }, window.location.origin)
                    },
                    onTrophy(e) {
                        this.hideUserPopup(),
                        this.setRecipientUsername(e.username),
                        this.isTrophyPopoverVisible = !0
                    },
                    acceptFriendRequest() {
                        this.$store.dispatch("user/approveFriendRequest", this.user.userId).then(this.reload)
                    },
                    addFriend() {
                        this.$store.dispatch("user/addFriend", this.user.userId).then(this.reload)
                    },
                    blockUser() {
                        this.$store.dispatch("user/blockUser", this.user.username).then(this.reload)
                    },
                    cancelFriendRequest() {
                        this.$store.dispatch("user/cancelFriendRequest", this.user.userId).then(this.reload)
                    },
                    deleteFriend() {
                        this.$store.dispatch("user/deleteFriend", this.user.userId).then(this.reload)
                    },
                    hideUserPopup() {
                        this.setRecipientIsFriend(this.areFriends),
                        this.hideUserPopover(),
                        this.removeListeners(),
                        this.isLoading = !1
                    },
                    reload() {
                        return this.$store.dispatch("userPopover/fetchUserPopover", this.user.username)
                    },
                    removeListeners() {
                        document.removeEventListener("click", this.clickListener, !0),
                        this.scrollContainer.removeEventListener("scroll", this.hideUserPopup)
                    },
                    trackUser() {
                        this.$store.dispatch("user/trackUser", this.user.username).then(this.reload)
                    },
                    unblockUser() {
                        this.$store.dispatch("user/unblockUser", this.user.username).then(this.reload)
                    },
                    untrackUser() {
                        this.$store.dispatch("user/untrackUser", this.user.username).then(this.reload)
                    },
                    showGiftModal() {
                        this.hideUserPopup(),
                        this.showGiftMembershipModal = !0
                    },
                    hideGiftMembershipModal() {
                        this.showGiftMembershipModal = !1
                    },
                    showReportModal() {
                        this.hideUserPopup(),
                        this.isUserReportModalVisible = !0
                    },
                    hideUserReportModal() {
                        this.isUserReportModalVisible = !1
                    },
                    hideChallengePopover() {
                        this.isChallengePopoverVisible = !1
                    },
                    hideTrophyPopover() {
                        this.isTrophyPopoverVisible = !1
                    },
                    showArchive(e) {
                        window.location.href = le.Z.generate("web_archive_index", {
                            username: e.username
                        })
                    },
                    startDirectChat() {
                        const e = Ws.U3.START_DIRECT_CHAT
                          , t = {
                            avatarUrl: this.user.avatarUrl,
                            id: this.user.uuid,
                            username: this.user.username
                        };
                        window.postMessage({
                            key: e,
                            payload: t
                        }, window.location.origin)
                    }
                })
            }
              , co = lo
              , uo = {
                "placeholder-popover": "user-popover-placeholder-popover",
                bottom: "user-popover-bottom",
                top: "user-popover-top",
                "placeholder-component": "user-popover-placeholder-component",
                "placeholder-profile": "user-popover-placeholder-profile",
                "placeholder-avatar": "user-popover-placeholder-avatar",
                "placeholder-info": "user-popover-placeholder-info"
            };
            var ho = (0,
            Ga.Z)(co, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", [e.user.userNotExist ? e._e() : a("div", {
                    attrs: {
                        id: "user-popover"
                    }
                }, [e.show ? a("user-popover", {
                    ref: "userPopover",
                    attrs: {
                        "dynamic-actions": e.dynamicActions,
                        avatar: e.user.avatarUrl,
                        "is-fide-verified": e.user.isFideVerified,
                        "can-add-friend": e.canAddFriend,
                        "can-block-user": e.canBlockUser,
                        "can-create-challenge": e.canCreateChallenge,
                        "can-follow-user": e.canFollowUser,
                        "can-gift-membership": e.canGiftMembership,
                        "can-remove-friend": e.canRemoveFriend,
                        "can-report-user": e.canReportUser,
                        "can-send-message": e.canSendMessage,
                        "can-send-trophy": e.canSendTrophy,
                        "can-unblock-user": e.canUnblockUser,
                        "can-unfollow-user": e.canUnfollowUser,
                        "can-use-global-chat": e.canUseGlobalChat,
                        "can-cancel-friend-request": e.canCancelFriendRequest,
                        "can-accept-friend-request": e.canAcceptFriendRequest,
                        "chess-title": e.user.chessTitle,
                        country: {
                            name: e.user.countryName,
                            code: e.user.countryId
                        },
                        flair: e.user.flair,
                        "club-chat-id-for-moderator-actions": e.clubChatIdForModeratorActions,
                        "is-enabled": e.user.isEnabled,
                        "is-guest": e.isGuest,
                        "is-loading": e.isLoading,
                        "joined-date": e.user.joinDate,
                        "last-login-date": e.user.lastLoginDate,
                        "logged-as-another": e.loggedAsAnother,
                        membership: e.membershipNumber,
                        "popover-position": e.position,
                        "presence-details": e.presenceDetails,
                        ratings: e.ratings,
                        username: e.user.username,
                        "username-element-ref": e.elementRef,
                        "user-already-muted-on-chat": e.userAlreadyMutedOnChat,
                        uuid: e.user.uuid,
                        "league-code": e.leagueData.leagueCode,
                        "league-division": e.leagueData.leagueDivision,
                        "league-name": e.leagueData.leagueName,
                        "lifetime-score": e.lifetimeScore,
                        opponent: e.currentUser
                    },
                    on: {
                        "accept-friend-request": e.acceptFriendRequest,
                        "add-friend": e.addFriend,
                        "block-user": e.blockUser,
                        "cancel-friend-request": e.cancelFriendRequest,
                        "create-challenge": e.onChallenge,
                        "follow-user": e.trackUser,
                        "remove-friend": e.deleteFriend,
                        "send-message": e.onMessage,
                        "show-archive": e.showArchive,
                        "show-gift": e.showGiftModal,
                        "show-report": e.showReportModal,
                        "show-trophy": e.onTrophy,
                        "start-direct-chat": e.startDirectChat,
                        "unblock-user": e.unblockUser,
                        "unfollow-user": e.untrackUser,
                        "user-popover-hide": e.hideUserPopup
                    }
                }) : e._e(), e._v(" "), e.isUserReportModalVisible ? a("user-report-modal", {
                    attrs: {
                        username: e.user.username
                    },
                    on: {
                        "modal-did-hide": e.hideUserReportModal
                    }
                }) : e._e(), e._v(" "), e.showGiftMembershipModal ? a("gift-membership-modal", {
                    attrs: {
                        "receiver-username": e.user.username,
                        "receiver-id": e.user.userId,
                        "sender-username": e.username
                    },
                    on: {
                        "hide-modal": e.hideGiftMembershipModal
                    }
                }) : e._e(), e._v(" "), e.isTrophyPopoverVisible ? a("trophy-popover", {
                    on: {
                        hide: e.hideTrophyPopover
                    }
                }) : e._e()], 1), e._v(" "), e.user.userNotExist && e.show ? a("div", {
                    class: [e.$style["placeholder-popover"], e.$style[e.position.x], e.$style[e.position.y]],
                    style: e.inlineStyles
                }, [a("div", {
                    class: e.$style["placeholder-component"]
                }, [a("div", {
                    class: e.$style["placeholder-profile"]
                }, [a("div", {
                    class: e.$style["placeholder-avatar"]
                }), e._v(" "), a("div", {
                    class: e.$style["placeholder-info"],
                    domProps: {
                        textContent: e._s(e.$trans("Member name does not exist"))
                    }
                })])])]) : e._e()])
            }
            ), [], !1, (function user_user_popover_injectStyles(e) {
                this.$style = uo.locals || uo
            }
            ), null, null).exports;
            (0,
            rs.X)({
                user: ls.Z,
                userPopover: Os
            });
            const po = (0,
            Ms.Z)({
                userPopover: {
                    component: ho,
                    el: "#user-popover",
                    store: is.Z
                }
            })
              , mo = window;
            let bo, go = 0;
            const documentClickListener = e=>{
                const t = document.getElementById("userPopover");
                if (!t || e.target !== t && !t.contains(e.target)) {
                    document.removeEventListener("click", documentClickListener, !0);
                    const t = !bo || e.target !== bo && !bo.contains(e.target)
                      , a = null === bo.getAttribute("href");
                    t ? go = 0 : a && setTimeout((()=>{
                        go = 0
                    }
                    ), 0)
                }
            }
              , documentScrollListener = ()=>{
                mo.removeEventListener("scroll", documentScrollListener),
                go = 0
            }
              , directiveClickListener = e=>{
                bo = e.target,
                0 === go && (go += 1,
                po.createInstance("userPopover"),
                As.Z.emit("userPopover/show", e.currentTarget.userPopoverProps, e.target),
                e.preventDefault(),
                document.addEventListener("click", documentClickListener, !0),
                mo.addEventListener("scroll", documentScrollListener))
            }
              , normalizeProps = e=>"string" == typeof e ? {
                username: e
            } : e;
            var fo, vo = {
                bind: (e,t)=>{
                    if (!t.value)
                        return !1;
                    e.userPopoverProps = normalizeProps(t.value),
                    e.addEventListener("click", directiveClickListener)
                }
                ,
                unbind: e=>{
                    e.removeEventListener("click", directiveClickListener)
                }
                ,
                update: (e,t)=>{
                    if (!t.value)
                        return !1;
                    const a = normalizeProps(t.value);
                    e.userPopoverProps.username = a.username,
                    a.actions && e.userPopoverProps.actions.splice(0, a.actions.length, ...a.actions)
                }
            }, wo = a(75285), yo = a(15350);
            (e=>{
                let t;
                var a;
                (a = t = e.Positions || (e.Positions = {})).Top = "Top",
                a.Bottom = "Bottom",
                e.OverrideHeaderTypes = [f.Q.GameTypes.OTB, f.Q.GameTypes.PGN, f.Q.GameTypes.Library, f.Q.GameTypes.Master]
            }
            )(fo || (fo = {}));
            var ko = (0,
            Ce.aZ)({
                name: "Player",
                directives: {
                    tooltip: os.Z,
                    userPopover: vo
                },
                components: {
                    Avatar: ss.Z,
                    Clock: as,
                    UserTagline: ns.Z
                },
                props: {
                    boardId: {
                        type: String,
                        required: !0
                    },
                    color: {
                        type: Number,
                        required: !0
                    },
                    position: {
                        type: String,
                        required: !0
                    },
                    player: {
                        type: wo.S,
                        required: !0
                    },
                    time: Number,
                    turn: {
                        type: Number,
                        required: !0
                    }
                },
                emits: ["click-user"],
                setup(e) {
                    const t = (0,
                    Ce.Fl)((()=>({
                        content: e.player.username,
                        position: e.position === fo.Positions.Top ? "bottom" : "top"
                    })))
                      , a = (0,
                    Ce.Fl)((()=>(0,
                    yo.B)() ? {
                        username: e.player.username
                    } : null))
                      , s = (0,
                    Ce.Fl)((()=>(0,
                    $.RS)(e.color)));
                    return {
                        chessTitle: (0,
                        Ce.Fl)((()=>{
                            var t, a;
                            return null != (a = e.player.title) ? a : null == (t = window.chesscom.analysis.userDetails[s.value]) ? void 0 : t.chessTitle
                        }
                        )),
                        clockValue: (0,
                        Ce.Fl)((()=>e.time && formatClock(e.time))),
                        colorAsWord: s,
                        isPlayerTurn: (0,
                        Ce.Fl)((()=>e.turn === e.color)),
                        titleUrl: le.Z.generate("web_member_titled_players"),
                        userAvatarTooltip: t,
                        userPopoverName: a
                    }
                }
            })
              , _o = {
                component: "player-component",
                tagline: "player-tagline",
                clock: "player-clock"
            };
            var Co = (0,
            Ga.Z)(ko, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: [e.$style.component, e.$style[e.position]],
                    attrs: {
                        "data-cy": "analysis-player-" + e.position
                    }
                }, [a("avatar", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.userAvatarTooltip,
                        expression: "userAvatarTooltip"
                    }],
                    attrs: {
                        width: "40",
                        height: "40",
                        alt: e.player.name,
                        src: e.player.getAvatar()
                    }
                }), e._v(" "), a("div", {
                    class: e.$style.tagline
                }, [a("user-tagline", {
                    directives: [{
                        name: "user-popover",
                        rawName: "v-user-popover",
                        value: e.userPopoverName,
                        expression: "userPopoverName"
                    }],
                    key: e.player.getName(),
                    attrs: {
                        "username-theme": "dark",
                        "open-title-on-new-tab": "",
                        username: e.player.getName(),
                        title: e.chessTitle,
                        "title-url": e.titleUrl,
                        country: e.player.country,
                        "flair-code": e.player.flairCode,
                        membership: e.player.membershipLevel,
                        rating: e.player.rating
                    }
                }), e._v(" "), e.boardId ? a("captured-pieces", {
                    class: e.$style.pieces,
                    attrs: {
                        "board-id": e.boardId,
                        color: e.color
                    }
                }) : e._e()], 1), e._v(" "), e.time ? a("clock", {
                    class: e.$style.clock,
                    attrs: {
                        theme: e.isPlayerTurn ? "light" : "dark",
                        "show-timer-icon": e.isPlayerTurn,
                        "time-left": e.clockValue
                    }
                }) : e._e()], 1)
            }
            ), [], !1, (function player_injectStyles(e) {
                this.$style = _o.locals || _o
            }
            ), null, null).exports
              , To = a(81057)
              , So = a(51e3);
            var xo = a(48573);
            var Eo = (0,
            Ce.aZ)({
                name: "PlayerController",
                components: {
                    Player: Co
                },
                props: {
                    position: {
                        type: String,
                        default: fo.Positions.Bottom
                    }
                },
                setup(e) {
                    const t = (0,
                    Ce.Fl)((()=>(0,
                    To.x)().isFlipped ? e.position === fo.Positions.Bottom ? $.lA.ColorsAsNumbers.Black : $.lA.ColorsAsNumbers.White : e.position === fo.Positions.Bottom ? $.lA.ColorsAsNumbers.White : $.lA.ColorsAsNumbers.Black))
                      , a = (0,
                    Ce.Fl)((()=>t.value === $.lA.ColorsAsNumbers.White ? Ra.F.white : Ra.F.black))
                      , s = (0,
                    Ce.Fl)((()=>y.S.turn))
                      , n = (0,
                    Ce.Fl)((()=>{
                        var e;
                        if (!function shouldShowClock() {
                            var e;
                            return !!y.S.headers.TimeControl && "daily" !== (0,
                            xo.B)(y.S.headers.TimeControl).timeType && (null == (e = y.S.nodes[0]) ? void 0 : e.time)
                        }())
                            return;
                        if ((null == (e = y.S.headers.Termination) ? void 0 : e.includes("time")) && y.S.isOver && 0 === y.S.ids.line && function getWinningColor() {
                            return y.S.headers.Result === $.lA.Results.White ? $.lA.ColorsAsNumbers.White : y.S.headers.Result === $.lA.Results.Black ? $.lA.ColorsAsNumbers.Black : null
                        }() !== t.value)
                            return 0;
                        const a = y.S.nodes[0].time
                          , s = (0,
                        So.n)();
                        if (!s)
                            return a;
                        const n = y.S.nodes[s.color === t.value ? s.ids.move : s.ids.move - 1];
                        return n ? n.time : a
                    }
                    ));
                    return {
                        boardInitialized: (0,
                        Ce.Fl)((()=>ve.j.isInitialized)),
                        boardId: (0,
                        Qa.H)(),
                        color: t,
                        clockTime: n,
                        player: a,
                        turn: s
                    }
                }
            })
              , Oo = Eo
              , Ao = (0,
            Ga.Z)(Oo, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.boardInitialized ? a("player", {
                    attrs: {
                        "board-id": e.boardId,
                        color: e.color,
                        player: e.player,
                        position: e.position,
                        time: e.clockTime,
                        turn: e.turn
                    }
                }) : e._e()
            }
            ), [], !1, null, null, null).exports
              , Mo = (0,
            Ce.aZ)({
                el: "#player-bottom",
                name: "PlayerBottomController",
                extends: Ao
            })
              , Po = (0,
            Ga.Z)(Mo, undefined, undefined, !1, null, null, null).exports
              , jo = (0,
            Ce.aZ)({
                el: "#player-top",
                name: "PlayerTopController",
                extends: Ao,
                props: {
                    position: {
                        type: String,
                        default: fo.Positions.Top
                    }
                }
            })
              , zo = (0,
            Ga.Z)(jo, undefined, undefined, !1, null, null, null).exports
              , Wo = a(42898)
              , Lo = (0,
            Ce.aZ)({
                name: "SidebarTabs",
                props: {
                    selectedTab: String,
                    tabs: Array
                },
                emits: ["select-tab"],
                setup: (e,{emit: t})=>({
                    onClickTab: function onClickTab(e) {
                        t("select-tab", {
                            tab: e
                        })
                    }
                })
            })
              , Io = {
                component: "sidebar-tabs-component",
                tab: "sidebar-tabs-tab",
                active: "sidebar-tabs-active",
                icon: "sidebar-tabs-icon",
                label: "sidebar-tabs-label"
            };
            var Ro = (0,
            Ga.Z)(Lo, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: e.$style.component
                }, e._l(e.tabs, (function(t) {
                    var s;
                    return a("a", {
                        key: t.key,
                        class: [e.$style.tab, (s = {},
                        s[e.$style.active] = e.selectedTab === t.key,
                        s)],
                        attrs: {
                            "data-cy": "analysis-tab-button-" + t.key
                        },
                        on: {
                            click: function(a) {
                                return e.onClickTab(t.key)
                            }
                        }
                    }, [a("span", {
                        class: [e.$style.icon, "icon-font-chess", t.icon]
                    }), e._v(" "), a("span", {
                        class: e.$style.label,
                        domProps: {
                            textContent: e._s(t.label)
                        }
                    })])
                }
                )), 0)
            }
            ), [], !1, (function sidebar_tabs_injectStyles(e) {
                this.$style = Io.locals || Io
            }
            ), null, null).exports
              , No = (0,
            Ce.aZ)({
                components: {
                    LoaderThreeBounce: Ls.Z
                }
            })
              , Bo = {
                component: "sidebar-loader-component",
                content: "sidebar-loader-content"
            };
            var Fo = (0,
            Ga.Z)(No, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: e.$style.component
                }, [a("div", {
                    class: e.$style.content
                }, [a("loader-three-bounce", {
                    attrs: {
                        "is-circle": !0,
                        size: 40
                    }
                })], 1)])
            }
            ), [], !1, (function sidebar_loader_injectStyles(e) {
                this.$style = Bo.locals || Bo
            }
            ), null, null).exports;
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            const Do = {
                [k.Y.Tabs.Analysis]: (0,
                Ce.RC)({
                    loader: ()=>a.e(991).then(a.bind(a, 33328)),
                    loadingComponent: Fo
                }),
                [k.Y.Tabs.Details]: (0,
                Ce.RC)({
                    loader: ()=>Promise.all([a.e(511), a.e(487)]).then(a.bind(a, 32990)),
                    loadingComponent: Fo
                }),
                [k.Y.Tabs.Openings]: (0,
                Ce.RC)({
                    loader: ()=>a.e(617).then(a.bind(a, 64)),
                    loadingComponent: Fo
                }),
                [k.Y.Tabs.Review]: (0,
                Ce.RC)({
                    loader: ()=>Promise.all([a.e(840), a.e(560), a.e(367), a.e(177)]).then(a.bind(a, 99153)),
                    loadingComponent: Fo
                }),
                [k.Y.Tabs.Tablebase]: (0,
                Ce.RC)({
                    loader: ()=>a.e(563).then(a.bind(a, 10284)),
                    loadingComponent: Fo
                })
            };
            var $o = Object.defineProperty
              , qo = Object.getOwnPropertySymbols
              , Uo = Object.prototype.hasOwnProperty
              , Zo = Object.prototype.propertyIsEnumerable
              , sidebar_viewvue_type_script_lang_ts_defNormalProp = (e,t,a)=>t in e ? $o(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , Go = (0,
            Ce.aZ)({
                name: "SidebarView",
                components: ((e,t)=>{
                    for (var a in t || (t = {}))
                        Uo.call(t, a) && sidebar_viewvue_type_script_lang_ts_defNormalProp(e, a, t[a]);
                    if (qo)
                        for (var a of qo(t))
                            Zo.call(t, a) && sidebar_viewvue_type_script_lang_ts_defNormalProp(e, a, t[a]);
                    return e
                }
                )({
                    Tabs: Ro
                }, Do),
                props: {
                    selectedTab: String,
                    showGameList: Boolean,
                    tabs: Array
                },
                emits: ["select-tab"]
            })
              , Ho = {
                component: "sidebar-view-component",
                "with-game-list": "sidebar-view-with-game-list",
                content: "sidebar-view-content"
            };
            var Vo = (0,
            Ga.Z)(Go, (function() {
                var e, t = this, a = t.$createElement, s = t._self._c || a;
                return s("div", {
                    class: [t.$style.component, (e = {},
                    e[t.$style["with-game-list"]] = t.showGameList,
                    e)],
                    attrs: {
                        "data-cy": "analysis-sidebar"
                    }
                }, [s("tabs", {
                    attrs: {
                        "selected-tab": t.selectedTab,
                        tabs: t.tabs
                    },
                    on: {
                        "select-tab": function(e) {
                            return t.$emit("select-tab", e)
                        }
                    }
                }), t._v(" "), s("transition", {
                    attrs: {
                        name: "sidebar-component",
                        mode: "out-in",
                        appear: ""
                    }
                }, [s(t.selectedTab, {
                    tag: "component",
                    class: t.$style.content,
                    attrs: {
                        "data-cy": "sidebar-selected-tab-" + t.selectedTab
                    }
                })], 1), t._v(" "), t._t("game-controls")], 2)
            }
            ), [], !1, (function sidebar_view_injectStyles(e) {
                this.$style = Ho.locals || Ho
            }
            ), null, null).exports
              , Ko = a(6639);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            var Yo = a(45570)
              , Qo = a(15100)
              , Jo = a(81786)
              , Xo = a(71919)
              , er = a(90632)
              , tr = a(16210);
            const ar = window.innerWidth < 960
              , sr = window
              , nr = document.querySelector(".board-sidebar") || document.querySelector(".board-layout-sidebar") || document.querySelector(".layout-sidebar");
            var or = {
                data() {
                    return {
                        throttledScrollHandler: (0,
                        tr.Z)(this.onScroll, 500)
                    }
                },
                mounted() {
                    ar && (this.onScroll(),
                    (sr || window).addEventListener("scroll", this.throttledScrollHandler))
                },
                destroyed() {
                    ar && (sr || window).removeEventListener("scroll", this.throttledScrollHandler)
                },
                methods: {
                    onScroll() {
                        var e, t;
                        const a = sr ? sr.scrollTop : document.documentElement.scrollTop;
                        window.innerHeight + a > nr.offsetTop + nr.getBoundingClientRect().height ? (null == (e = this.$el.classList) || e.remove(this.$style.float),
                        Object.assign(document.body.style, {
                            paddingBottom: null
                        })) : (null == (t = this.$el.classList) || t.add(this.$style.float),
                        Object.assign(document.body.style, {
                            paddingBottom: `${this.$el.offsetHeight}px`
                        }))
                    }
                }
            }
              , rr = (0,
            Ce.aZ)({
                name: "SidebarControlsMain",
                components: {
                    V5Button: $a.V5Button
                },
                directives: {
                    Tooltip: os.Z
                },
                mixins: [or],
                props: {
                    controls: {
                        type: Array,
                        required: !0
                    }
                }
            })
              , ir = {
                component: "game-controls-primary-component",
                float: "game-controls-primary-float",
                button: "game-controls-primary-button",
                badge: "game-controls-primary-badge"
            };
            var lr = (0,
            Ga.Z)(rr, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: e.$style.component,
                    attrs: {
                        "data-cy": "analysis-game-controls-primary"
                    }
                }, e._l(e.controls, (function(t) {
                    return a("v5-button", {
                        directives: [{
                            name: "tooltip",
                            rawName: "v-tooltip",
                            value: t.tooltip,
                            expression: "control.tooltip"
                        }],
                        key: t.tooltip,
                        class: e.$style.button,
                        attrs: {
                            "aria-label": t.tooltip
                        },
                        on: {
                            click: function(a) {
                                return e.$emit(t.event)
                            }
                        }
                    }, [a("span", {
                        class: ["icon-font-chess ui_v5-button-icon", t.icon.value]
                    })])
                }
                )), 1)
            }
            ), [], !1, (function game_controls_primary_injectStyles(e) {
                this.$style = ir.locals || ir
            }
            ), null, null).exports
              , cr = (0,
            Ce.aZ)({
                name: "GameControlsSecondaryButton",
                directives: {
                    Tooltip: os.Z
                },
                props: {
                    control: {
                        type: Object,
                        required: !0
                    }
                },
                setup(e, {emit: t}) {
                    const a = (0,
                    Ce.Fl)((()=>e.control.show()));
                    return {
                        enabled: a,
                        onClick: function onClick() {
                            if (!a.value)
                                return;
                            t(e.control.event)
                        }
                    }
                }
            })
              , ur = {
                component: "game-controls-secondary-button-component",
                button: "game-controls-secondary-button-button",
                icon: "game-controls-secondary-button-icon"
            };
            var dr = (0,
            Ga.Z)(cr, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("button", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: {
                            content: e.control.tooltip,
                            delay: 50
                        },
                        expression: "{ content: control.tooltip, delay: 50 }"
                    }],
                    class: e.$style.button,
                    attrs: {
                        type: "button",
                        "aria-label": e.control.tooltip,
                        disabled: !e.enabled,
                        "data-cy": "analysis-secondary-controls-" + e.control.event
                    },
                    on: {
                        click: function(t) {
                            return t.preventDefault(),
                            e.onClick.apply(null, arguments)
                        }
                    }
                }, [a("span", {
                    class: [e.$style.icon, "icon-font-chess", e.control.icon]
                })])
            }
            ), [], !1, (function game_controls_secondary_button_injectStyles(e) {
                this.$style = ur.locals || ur
            }
            ), null, null)
              , hr = dr.exports
              , pr = (0,
            Ce.aZ)({
                name: "SidebarControlsSecondary",
                components: {
                    SecondaryButton: hr
                },
                props: {
                    controls: {
                        type: Object,
                        required: !0
                    }
                }
            })
              , mr = {
                component: "game-controls-secondary-component",
                button: "game-controls-secondary-button",
                icon: "game-controls-secondary-icon"
            };
            var br = (0,
            Ga.Z)(pr, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("div", {
                    class: e.$style.component,
                    attrs: {
                        "data-cy": "analysis-secondary-controls"
                    }
                }, [a("div", {
                    class: e.$style.left
                }, e._l(e.controls.left, (function(t) {
                    return a("secondary-button", e._g({
                        key: t.key,
                        attrs: {
                            control: t
                        }
                    }, e.$listeners))
                }
                )), 1), e._v(" "), a("div", {
                    class: e.$style.right
                }, e._l(e.controls.right, (function(t) {
                    return a("secondary-button", e._g({
                        key: t.key,
                        attrs: {
                            control: t
                        }
                    }, e.$listeners))
                }
                )), 1)])
            }
            ), [], !1, (function game_controls_secondary_injectStyles(e) {
                this.$style = mr.locals || mr
            }
            ), null, null).exports
              , gr = (0,
            Ce.aZ)({
                name: "GameControlsView"
            })
              , fr = {
                component: "game-controls-view-component"
            };
            var vr = (0,
            Ga.Z)(gr, (function() {
                var e = this
                  , t = e.$createElement;
                return (e._self._c || t)("div", {
                    class: e.$style.component
                }, [e._t("default")], 2)
            }
            ), [], !1, (function game_controls_view_injectStyles(e) {
                this.$style = fr.locals || fr
            }
            ), null, null).exports
              , wr = a(76088)
              , yr = a(8488);
            var kr = a(1463);
            function startNewAnalysis() {
                var e;
                (0,
                kr.m)() || wr.h.selfAnalysis.url || !window.context.user || (null == (e = window.context.user) ? void 0 : e.isBasic) ? window.location = Nt._.analysis() : ((0,
                yr.C)(),
                function resetCore() {
                    v.X.gameId = void 0,
                    v.X.gameType = f.Q.GameTypes.OTB,
                    v.X.initialFen = void 0,
                    v.X.initialPgn = void 0,
                    (0,
                    W.G)(f.Q.AnalysisModes.Self)
                }(),
                wr.h.selfAnalysis = {
                    pgn: void 0,
                    url: void 0
                },
                ue.p.analyses.reset())
            }
            var _r = a(58714)
              , Cr = a(57178)
              , Tr = a(3350)
              , Sr = a(54578)
              , xr = a(24392)
              , Er = a(99106)
              , Or = (0,
            Ce.aZ)({
                name: "GameControls",
                components: {
                    ControlsView: vr,
                    PrimaryControls: lr,
                    SecondaryControls: br
                },
                props: {
                    hideMainControls: Boolean,
                    overrides: {
                        type: Object,
                        default: ()=>({})
                    },
                    secondaryControls: {
                        type: Object,
                        default: ()=>_r.X
                    }
                },
                setup(e) {
                    var t, n, o, r, i, l, c, d;
                    const m = (0,
                    Ce.iH)(!1)
                      , b = (0,
                    Ce.iH)();
                    return {
                        goToSummary: Cr.y,
                        isGameReview: (0,
                        Ce.Fl)((()=>_.B.selectedTab === k.Y.Tabs.Review)),
                        isMobile: ()=>/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent),
                        primaryControls: function getPrimaryControls() {
                            return [{
                                icon: {
                                    value: "chevron-previous"
                                },
                                event: "first-move",
                                tooltip: (0,
                                h.dW)("First Move")
                            }, {
                                icon: {
                                    value: "chevron-left"
                                },
                                event: "previous-move",
                                tooltip: (0,
                                h.dW)("Previous Move")
                            }, {
                                icon: (0,
                                Ce.Fl)((()=>m.value ? "pause" : "play")),
                                event: "play-pause",
                                tooltip: (0,
                                h.dW)("Play / Pause")
                            }, {
                                icon: {
                                    value: "chevron-right"
                                },
                                event: "next-move",
                                tooltip: (0,
                                h.dW)("Next Move")
                            }, {
                                icon: {
                                    value: "chevron-next"
                                },
                                event: "last-move",
                                tooltip: (0,
                                h.dW)("Last Move")
                            }]
                        }(),
                        primaryControlsGameReview: (0,
                        Ce.Fl)((()=>function getPrimaryControlsGameReview() {
                            const e = (0,
                            xr.p)()
                              , t = [{
                                icon: {
                                    value: "undo"
                                },
                                event: "retry-move",
                                tooltip: (0,
                                h.dW)("Retry")
                            }, {
                                icon: {
                                    value: "perfect"
                                },
                                event: "best-move",
                                tooltip: (0,
                                h.dW)("Best")
                            }, {
                                icon: {
                                    value: "share"
                                },
                                event: "share",
                                tooltip: (0,
                                h.dW)("Share")
                            }, {
                                icon: {
                                    value: "key"
                                },
                                event: "next-key-move",
                                tooltip: (0,
                                h.dW)("Key Moves")
                            }, {
                                icon: {
                                    value: "lightbulb"
                                },
                                event: "show-hint",
                                tooltip: (0,
                                h.dW)("Hint")
                            }, {
                                icon: {
                                    value: "best"
                                },
                                event: "start-review",
                                tooltip: (0,
                                h.dW)("Start Review")
                            }, {
                                icon: {
                                    value: "comp-analysis"
                                },
                                event: "summary",
                                tooltip: (0,
                                h.dW)("Summary")
                            }, {
                                icon: {
                                    value: "display-slider"
                                },
                                event: "upgrade",
                                tooltip: (0,
                                h.dW)("Go Diamond")
                            }].filter((t=>e.find((e=>e.icon === t.icon.value)))).concat([{
                                icon: {
                                    value: "chevron-left"
                                },
                                event: "previous-move",
                                tooltip: (0,
                                h.dW)("Previous Move")
                            }, {
                                icon: {
                                    value: "chevron-right"
                                },
                                event: "next-move",
                                tooltip: (0,
                                h.dW)("Next Move")
                            }]);
                            -1 === _t.j.selectedMoveNumber && t.unshift({
                                icon: {
                                    value: "key"
                                },
                                event: "next-key-move",
                                tooltip: (0,
                                h.dW)("Key Moves")
                            });
                            if (t.length < 5) {
                                const e = {
                                    icon: {
                                        value: ""
                                    },
                                    event: "",
                                    tooltip: (0,
                                    h.dW)("")
                                }
                                  , a = t.length;
                                for (let s = 0; s < 5 - a; s++)
                                    t.unshift(e)
                            }
                            return t
                        }())),
                        onFirstMove: null != (t = e.overrides.onFirstMove) ? t : function onFirstMove() {
                            stopPlaying(),
                            (0,
                            g.j)().selectLineStart()
                        }
                        ,
                        onPreviousMove: null != (n = e.overrides.onPreviousMove) ? n : function onPreviousMove() {
                            stopPlaying(),
                            (0,
                            g.j)().moveBackward()
                        }
                        ,
                        onNextMove: null != (o = e.overrides.onNextMove) ? o : function onNextMove() {
                            stopPlaying(),
                            (0,
                            g.j)().moveForward()
                        }
                        ,
                        onLastMove: null != (r = e.overrides.onLastMove) ? r : function onLastMove() {
                            stopPlaying(),
                            (0,
                            g.j)().selectLineEnd()
                        }
                        ,
                        onPlayPause: null != (i = e.overrides.onPlayPause) ? i : onPlayPause,
                        onNextKeyMove: null != (l = e.overrides.onNextKeyMove) ? l : function onNextKeyMove() {
                            (0,
                            Sr.D)(!0)
                        }
                        ,
                        onRetryMove: null != (c = e.overrides.onRetryMove) ? c : function onRetryMove() {
                            (0,
                            g.j)().markings.removeAll(),
                            (0,
                            Vt.h)(),
                            (0,
                            Yo.F)(_t.j.selectedMoveNumber)
                        }
                        ,
                        onBestMove: null != (d = e.overrides.onBestMove) ? d : function onBestMove() {
                            (0,
                            g.j)().markings.removeAll(),
                            (0,
                            Vt.h)(),
                            (0,
                            Jo.k)(_t.j.selectedMoveNumber, (0,
                            Kt.C)().suggestedMove.moveLan)
                        }
                        ,
                        onNewAnalysis: startNewAnalysis,
                        onFlipBoard: re.v,
                        onGameReview: function onGameReview() {
                            (0,
                            R.u)()
                        },
                        onOpenShare: function onOpenShare() {
                            (0,
                            Xo.T)({
                                analyzedPgn: p.F.annotatedPgn,
                                initialTab: er.z.Pgn,
                                shareUrl: window.location.href
                            })
                        },
                        onPractice: function onPractice() {
                            var e, t;
                            const a = (0,
                            g.j)()
                              , s = a.getCurrentFullLine()
                              , n = {
                                color: (0,
                                To.x)().isFlipped ? $.lA.ColorsAsWords.Black : $.lA.ColorsAsWords.White,
                                fen: null != (t = null == (e = s[0]) ? void 0 : e.beforeFen) ? t : y.S.fen,
                                is960: a.getVariant() === $.lA.Variants.Chess960,
                                moveList: s.map((e=>(0,
                                Gt.S)(e))).join(" ")
                            };
                            window.open(le.Z.generate("web_practice_custom", n))
                        },
                        onSetUpPosition: function onSetUpPosition() {
                            (0,
                            g.j)().load({
                                fen: y.S.fen
                            }),
                            ue.p.isLoaded = !1,
                            ue.p.selectedSetupTab = de.k.Setup.Tabs.SetupPosition,
                            (0,
                            u.K)(k.Y.Tabs.Analysis)
                        },
                        onShowHint: function onShowHint() {
                            (0,
                            Qo.F)((0,
                            Kt.C)().suggestedMove.moveLan)
                        },
                        onToggleCharts: function onToggleCharts() {
                            (0,
                            Er.V)({
                                chartsEnabled: !me.Ko.chartsEnabled
                            }),
                            Qe.e.emit(Ye.G.Events.ToggleCharts, {
                                value: me.Ko.chartsEnabled
                            })
                        },
                        onToggleLibrary: function onToggleLibrary() {
                            !function showAddToLibraryModal() {
                                (0,
                                s.tL)((()=>a.e(51).then(a.bind(a, 36051)))),
                                Ko.o.isVisible = !0
                            }()
                        },
                        onUpgrade: function onUpgrade() {
                            window.open(Nt._.upgradeMembership())
                        },
                        selectFirstKeyMove: Tr.s
                    };
                    function onPlayPause() {
                        m.value = !m.value,
                        m.value ? playNextMove() : clearTimeout(b.value)
                    }
                    function playNextMove() {
                        b.value && clearTimeout(b.value),
                        (0,
                        g.j)().isAtEndOfLine() ? onPlayPause() : ((0,
                        g.j)().moveForward(),
                        b.value = setTimeout(playNextMove, 1e3))
                    }
                    function stopPlaying() {
                        m.value && onPlayPause()
                    }
                }
            })
              , Ar = (0,
            Ga.Z)(Or, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("controls-view", [e.hideMainControls ? e.isGameReview && e.isMobile() ? a("primary-controls", {
                    attrs: {
                        controls: e.primaryControlsGameReview
                    },
                    on: {
                        "retry-move": e.onRetryMove,
                        "best-move": e.onBestMove,
                        "next-key-move": e.onNextKeyMove,
                        "previous-move": e.onPreviousMove,
                        share: e.onOpenShare,
                        "show-hint": e.onShowHint,
                        summary: e.goToSummary,
                        "next-move": e.onNextMove,
                        "start-review": function(t) {
                            return e.selectFirstKeyMove(!0)
                        },
                        upgrade: e.onUpgrade
                    }
                }) : e._e() : a("primary-controls", {
                    attrs: {
                        controls: e.primaryControls
                    },
                    on: {
                        "first-move": e.onFirstMove,
                        "previous-move": e.onPreviousMove,
                        "next-move": e.onNextMove,
                        "last-move": e.onLastMove,
                        "play-pause": e.onPlayPause
                    }
                }), e._v(" "), a("secondary-controls", e._g({
                    attrs: {
                        controls: e.secondaryControls
                    },
                    on: {
                        "flip-board": e.onFlipBoard,
                        "game-review": e.onGameReview,
                        "new-analysis": e.onNewAnalysis,
                        "open-share": e.onOpenShare,
                        practice: e.onPractice,
                        "set-up-position": e.onSetUpPosition,
                        "toggle-charts": e.onToggleCharts,
                        "toggle-library": e.onToggleLibrary
                    }
                }, e.$listeners))], 1)
            }
            ), [], !1, null, null, null).exports
              , Mr = a(8002);
            const Pr = {
                [k.Y.Tabs.Review]: {
                    key: k.Y.Tabs.Review,
                    icon: "best",
                    label: (0,
                    h.dW)("Review"),
                    controls: Mr.v
                },
                [k.Y.Tabs.Analysis]: {
                    key: k.Y.Tabs.Analysis,
                    icon: "chess-board-search",
                    label: (0,
                    h.dW)("Analysis")
                },
                [k.Y.Tabs.Details]: {
                    key: k.Y.Tabs.Details,
                    icon: "circle-info",
                    label: (0,
                    h.dW)("Details")
                },
                [k.Y.Tabs.Tablebase]: {
                    key: k.Y.Tabs.Tablebase,
                    icon: "square-equal",
                    label: (0,
                    h.dW)("Tablebase")
                },
                [k.Y.Tabs.Openings]: {
                    key: k.Y.Tabs.Openings,
                    icon: "book-alt",
                    label: (0,
                    h.dW)("Openings")
                }
            };
            function shouldShowTablebase() {
                return y.S.piecesLeft <= st.g.MaxPieces
            }
            var jr = (0,
            Ce.aZ)({
                el: "#sidebar",
                name: "SidebarController",
                components: {
                    GameControlsController: Ar,
                    SidebarView: Vo
                },
                setup() {
                    const e = (0,
                    Ce.iH)(getTabs())
                      , t = (0,
                    Ce.Fl)((()=>Pr[_.B.selectedTab]));
                    return (0,
                    Ce.YP)((()=>p.F.progress), (()=>e.value = getTabs())),
                    (0,
                    Ce.YP)(shouldShowTablebase, (function swapTablebaseAndOpeningsTabs() {
                        [k.Y.Tabs.Openings, k.Y.Tabs.Tablebase].includes(_.B.selectedTab) && (0,
                        u.K)(shouldShowTablebase() ? k.Y.Tabs.Tablebase : k.Y.Tabs.Openings);
                        e.value = getTabs()
                    }
                    )),
                    (0,
                    Ce.bv)((()=>{
                        const {tab: t} = (0,
                        Wo.c)(window.location.search);
                        t && e.value.includes(t) && (0,
                        u.K)(t)
                    }
                    )),
                    {
                        controls: (0,
                        Ce.Fl)((()=>{
                            var e, a;
                            return {
                                props: null == (e = t.value.controls) ? void 0 : e.props,
                                events: null == (a = t.value.controls) ? void 0 : a.events
                            }
                        }
                        )),
                        onSelectTab: function onSelectTab({tab: e}) {
                            (0,
                            u.K)(e)
                        },
                        selectedTab: t,
                        showGameList: (0,
                        Ce.Fl)(showGameList),
                        tabs: e
                    };
                    function getTabs() {
                        const e = [Pr[k.Y.Tabs.Analysis], Pr[k.Y.Tabs.Details]];
                        return e.push(Pr[shouldShowTablebase() ? k.Y.Tabs.Tablebase : k.Y.Tabs.Openings]),
                        p.F.progress > 0 && e.unshift(Pr[k.Y.Tabs.Review]),
                        e.find((e=>e.key === _.B.selectedTab)) || (0,
                        u.K)(k.Y.Tabs.Analysis),
                        e
                    }
                }
            });
            const zr = [Ya, Po, zo, (0,
            Ga.Z)(jr, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return a("sidebar-view", {
                    attrs: {
                        "selected-tab": e.selectedTab.key,
                        "show-game-list": e.showGameList,
                        tabs: e.tabs
                    },
                    on: {
                        "select-tab": e.onSelectTab
                    },
                    scopedSlots: e._u([{
                        key: "game-controls",
                        fn: function() {
                            return [a("game-controls-controller", e._g(e._b({}, "game-controls-controller", e.controls.props, !1), e.controls.events))]
                        },
                        proxy: !0
                    }])
                })
            }
            ), [], !1, null, null, null).exports]
              , Wr = {
                p: "pawn",
                n: "knight",
                b: "bishop",
                r: "rook",
                q: "queen"
            }
              , Lr = {
                p: 1,
                b: 2,
                n: 3,
                r: 4,
                q: 5
            }
              , getClassName = (e,t,a)=>(e=>`cpiece ${e}-`)(t) + (1 === a ? (e=>Wr[e])(e) : ((e,t)=>`${e}-${Wr[t]}s`)(a, e))
              , buildPieceClassNames = (e,t,a,s)=>s && "p" === e ? ((e,t)=>[...Array.from(Array(Math.floor(t / 2)), (()=>getClassName($.lA.Piece.Types.Pawn, e, 2))), ...Array.from(Array(t % 2), (()=>getClassName($.lA.Piece.Types.Pawn, e, 1)))])(t, a) : getClassName(e, t, a)
              , Ir = [$.QY.APIEvents.CreateGame, $.QY.APIEvents.DeletePosition, $.QY.APIEvents.Load, $.QY.APIEvents.Move, $.QY.APIEvents.MoveBackward, $.QY.APIEvents.MoveForward, $.QY.APIEvents.MoveVariation, $.QY.APIEvents.PromoteVariation, $.QY.APIEvents.SelectLineEnd, $.QY.APIEvents.SelectLineStart, $.QY.APIEvents.SelectNode, $.QY.APIEvents.ResetToMainLine];
            var Rr = a(75213)
              , Nr = {
                "captured-pieces": "captured-pieces-captured-pieces",
                vertical: "captured-pieces-vertical",
                hidden: "captured-pieces-hidden",
                cpiece: "captured-pieces-cpiece",
                score: "captured-pieces-score",
                "b-pawn": "captured-pieces-b-pawn",
                "w-pawn": "captured-pieces-w-pawn",
                "b-2-pawns": "captured-pieces-b-2-pawns",
                "w-2-pawns": "captured-pieces-w-2-pawns",
                "b-3-pawns": "captured-pieces-b-3-pawns",
                "w-3-pawns": "captured-pieces-w-3-pawns",
                "b-4-pawns": "captured-pieces-b-4-pawns",
                "w-4-pawns": "captured-pieces-w-4-pawns",
                "b-5-pawns": "captured-pieces-b-5-pawns",
                "w-5-pawns": "captured-pieces-w-5-pawns",
                "b-6-pawns": "captured-pieces-b-6-pawns",
                "w-6-pawns": "captured-pieces-w-6-pawns",
                "b-7-pawns": "captured-pieces-b-7-pawns",
                "w-7-pawns": "captured-pieces-w-7-pawns",
                "b-8-pawns": "captured-pieces-b-8-pawns",
                "w-8-pawns": "captured-pieces-w-8-pawns",
                "b-bishop": "captured-pieces-b-bishop",
                "w-bishop": "captured-pieces-w-bishop",
                "b-2-bishops": "captured-pieces-b-2-bishops",
                "w-2-bishops": "captured-pieces-w-2-bishops",
                "b-knight": "captured-pieces-b-knight",
                "w-knight": "captured-pieces-w-knight",
                "b-2-knights": "captured-pieces-b-2-knights",
                "w-2-knights": "captured-pieces-w-2-knights",
                "b-rook": "captured-pieces-b-rook",
                "w-rook": "captured-pieces-w-rook",
                "b-2-rooks": "captured-pieces-b-2-rooks",
                "w-2-rooks": "captured-pieces-w-2-rooks",
                "b-queen": "captured-pieces-b-queen",
                "w-queen": "captured-pieces-w-queen"
            };
            class CapturedPieces extends Rr.H {
                constructor() {
                    super(),
                    this.color = 1,
                    this.verticalLayout = !1,
                    this.onPositionChangeHandler = (0,
                    Se.Z)(this.onPositionChange.bind(this), 100)
                }
                static get observedAttributes() {
                    return [Te._.ObservedAttributes.BoardId, Te._.ObservedAttributes.Color, Te._.ObservedAttributes.VerticalLayout]
                }
                boardReady() {
                    this.removeListeners(),
                    this.addListeners(),
                    this.onPositionChange()
                }
                componentDestroy() {
                    this.removeListeners()
                }
                addListeners() {
                    Ir.forEach((e=>{
                        this.addBoardEventListener(e, this.onPositionChangeHandler)
                    }
                    ))
                }
                removeListeners() {
                    Ir.forEach((e=>{
                        this.removeBoardEventListener(e, this.onPositionChangeHandler)
                    }
                    ))
                }
                readAttributes() {
                    const e = Number(this.getAttribute(Te._.ObservedAttributes.Color))
                      , t = Boolean(this.hasAttribute(Te._.ObservedAttributes.VerticalLayout));
                    return (e !== this.color || t !== this.verticalLayout) && (this.color = e,
                    this.verticalLayout = t,
                    !0)
                }
                attributesChanged() {
                    this.readAttributes() && (this.buildComponent(),
                    this.board && this.onPositionChange())
                }
                componentReady() {
                    this.readAttributes(),
                    this.buildComponent()
                }
                buildComponent() {
                    this.innerHTML = `\n      <div>\n        <span class="${Nr.cpiece} ${Nr.score}" />\n      </div>\n    `,
                    this.scoreElement = this.querySelector(`.${Nr.score}`)
                }
                onPositionChange() {
                    var e;
                    this.capturedPieces = null == (e = this.board) ? void 0 : e.game.getMaterial(),
                    this.updatePieces(),
                    this.updateScore()
                }
                updatePieces() {
                    if (!this.capturedPieces)
                        return;
                    const e = this.firstElementChild;
                    if (!e)
                        return;
                    const t = ((e,t,a=!1)=>Object.keys(e).filter((t=>e[t] > 0 && Wr[t])).sort(((e,t)=>Lr[e] - Lr[t])).map((s=>buildPieceClassNames(s, t, e[s], a))).reduce(((e,t)=>e.concat(t)), []))(1 === this.color ? this.capturedPieces.white : this.capturedPieces.black, 1 === this.color ? $.lA.ColorsAsLetters.Black : $.lA.ColorsAsLetters.White, this.verticalLayout);
                    for (; t.length < e.childElementCount - 1 && e.childElementCount > 1; ) {
                        const t = e.children[e.childElementCount - 2];
                        e.removeChild(t)
                    }
                    for (let a = 0; a < t.length; a++) {
                        const s = t[a].split(" ").map((e=>Nr[e])).join(" ");
                        if (e.childElementCount - 1 >= a + 1)
                            e.children[a].className !== s && (e.children[a].className = s);
                        else {
                            const t = document.createElement("span");
                            t.className = s,
                            e.insertBefore(t, e.lastElementChild)
                        }
                    }
                }
                updateScore() {
                    if (!this.scoreElement || !this.capturedPieces)
                        return;
                    let e = "";
                    1 === this.color && this.capturedPieces.imbalance > 0 && (e = `+${this.capturedPieces.imbalance}`),
                    2 === this.color && this.capturedPieces.imbalance < 0 && (e = `+${Math.abs(this.capturedPieces.imbalance)}`),
                    this.scoreElement.textContent = e
                }
            }
            var Br = a(61682)
              , Fr = a(24073);
            Fr.Z.gameSource.label.MASTER,
            Fr.Z.gameSource.MASTER,
            Fr.Z.gameSource.label.OWN,
            Fr.Z.gameSource.OWN,
            Fr.Z.gameSource.label.OTHER,
            Fr.Z.gameSource.OTHER,
            Fr.Z.gameType.label.ALL,
            Fr.Z.gameType.ALL,
            Fr.Z.gameType.label.DAILY,
            Fr.Z.gameType.DAILY,
            Fr.Z.gameType.label.LIVE,
            Fr.Z.gameType.LIVE,
            Fr.Z.gameType.label.STANDARD,
            Fr.Z.gameType.STANDARD,
            Fr.Z.gameType.label.BLITZ,
            Fr.Z.gameType.BLITZ,
            Fr.Z.gameType.label.LIGHTNING,
            Fr.Z.gameType.LIGHTNING,
            Fr.Z.color.label.WHITE,
            Fr.Z.color.WHITE,
            Fr.Z.color.label.BLACK,
            Fr.Z.color.BLACK;
            const Dr = {
                archive: e=>le.Z.generate("web_archive_index", e),
                defaultExplorerLink: le.Z.generate("explorer_index"),
                explorerMove: le.Z.generate("explorer_callback_move"),
                explorerGetSuggestedMoves: le.Z.generate("explorer_callback_get_suggested_moves"),
                masterGames: e=>le.Z.generate("web_master_games_search", e),
                openAnalysis: e=>le.Z.generate("web_analysis_board_editor", e),
                openPractice: e=>le.Z.generate("web_practice_custom", e),
                register: le.Z.generate("web_security_register"),
                upgrade: le.Z.generate("web_membership", {
                    c: "explorer"
                }),
                vscomp: e=>le.Z.generate("web_play_computer", {
                    fen: e
                })
            };
            var $r = a(84171)
              , qr = Object.defineProperty
              , Ur = Object.defineProperties
              , Zr = Object.getOwnPropertyDescriptors
              , Gr = Object.getOwnPropertySymbols
              , Hr = Object.prototype.hasOwnProperty
              , Vr = Object.prototype.propertyIsEnumerable
              , get_explorer_link_defNormalProp = (e,t,a)=>t in e ? qr(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function getExplorerLink({game: e, gameSource: t=Rt.O.Explorer.GameSource.Master, gameType: a=Rt.O.Explorer.GameType.All, moveList: s}) {
                var n, o, r, i;
                return decodeURIComponent(le.Z.generate("explorer_index", (r = ((e,t)=>{
                    for (var a in t || (t = {}))
                        Hr.call(t, a) && get_explorer_link_defNormalProp(e, a, t[a]);
                    if (Gr)
                        for (var a of Gr(t))
                            Vr.call(t, a) && get_explorer_link_defNormalProp(e, a, t[a]);
                    return e
                }
                )({
                    color: e.getOptions().flipped ? "black" : "white",
                    gameSource: t
                }, !(t === Rt.O.Explorer.GameSource.Master && a === Rt.O.Explorer.GameType.All) && {
                    gameType: a
                }),
                i = {
                    moveList: null != s ? s : e.getHistorySANs().join("+"),
                    ne: 1,
                    ply: (null != (o = null == (n = e.getSelectedNode()) ? void 0 : n.moveNumber) ? o : 0) + 1
                },
                Ur(r, Zr(i)))))
            }
            var Kr = a(36292)
              , Yr = a(60803)
              , Qr = "eco-opening-panel"
              , Jr = "eco-opening-links"
              , Xr = "eco-opening-variant"
              , ei = "eco-opening-name"
              , ti = "eco-opening-explorer"
              , ai = "eco-opening-opening"
              , si = "eco-opening-icon";
            class EcoOpening extends Rr.H {
                constructor() {
                    super(),
                    this.plugin = null,
                    this.elements = {
                        explorer: void 0,
                        opening: void 0,
                        openingName: void 0
                    },
                    this.getLinks = this.getLinks.bind(this),
                    this.updateOpeningData = this.updateOpeningData.bind(this),
                    this.handleUpdateEco = this.handleUpdateEco.bind(this)
                }
                static get observedAttributes() {
                    return [Te._.ObservedAttributes.BoardId, Te._.ObservedAttributes.LinkToExplorer, Te._.ObservedAttributes.OpeningIsClickable]
                }
                getLinks(e) {
                    var t;
                    if (this.hasAttribute(Te._.ObservedAttributes.LinkToExplorer) && e && (null == (t = this.board) ? void 0 : t.game))
                        return {
                            explorer: getExplorerLink({
                                game: this.board.game
                            }),
                            openings: (0,
                            Kr.c)(e)
                        }
                }
                isVariant() {
                    var e;
                    return Boolean(null == (e = this.board) ? void 0 : e.game.getHeaders().Variant)
                }
                componentDestroy() {
                    var e, t, a, s, n, o, r, i;
                    null == (t = null == (e = this.board) ? void 0 : e.game) || t.off({
                        type: $.th.ECO.Events.Update,
                        handler: this.handleUpdateEco
                    }),
                    this.plugin && !(null == (s = null == (a = this.board) ? void 0 : a.game) ? void 0 : s.listeners.some((e=>"UpdateECO" === e.type))) && (null == (i = null == (o = null == (n = this.board) ? void 0 : n.game) ? void 0 : (r = o.plugins).remove) || i.call(r, this.plugin.name),
                    this.plugin = null)
                }
                updateOpeningData(e) {
                    var t;
                    const a = {
                        fen: null == e ? void 0 : e.f,
                        link: null == e ? void 0 : e.u,
                        name: null != (t = null == e ? void 0 : e.n) ? t : Rt.O.Config.Text.CustomPosition
                    };
                    if (!this.elements.opening || !this.elements.explorer || !this.elements.openingName)
                        return;
                    a.fen && $r.nn.includes(a.fen) && (a.name = Rt.O.Config.Text.StartingPosition,
                    a.link = void 0),
                    this.updateVariant(),
                    this.elements.openingName.innerText = a.name;
                    const s = this.getLinks(a.link)
                      , n = this.hasAttribute(Te._.ObservedAttributes.OpeningIsClickable)
                      , o = this.hasAttribute(Te._.ObservedAttributes.ExplorerIsClickable);
                    function addLink(e, t) {
                        e.setAttribute("href", t),
                        e.setAttribute("target", "_blank")
                    }
                    function removeLink(e) {
                        e.removeAttribute("href"),
                        e.removeAttribute("target")
                    }
                    (!s && this.elements.opening.href || !n) && removeLink(this.elements.opening),
                    (!s && this.elements.explorer.href || !o) && removeLink(this.elements.explorer),
                    s || this.elements.explorer.href.length || !o || addLink(this.elements.explorer, Dr.defaultExplorerLink),
                    s && (n && addLink(this.elements.opening, s.openings),
                    o && addLink(this.elements.explorer, s.explorer))
                }
                updateExplorerLink(e) {
                    var t;
                    this.elements.explorer && (this.elements.explorer.href = getExplorerLink({
                        game: null == (t = this.board) ? void 0 : t.game,
                        gameSource: e
                    }))
                }
                updateVariant() {
                    const e = this.isVariant()
                      , t = this.classList.contains(Xr);
                    e && !t ? this.classList.add(Xr) : !e && t && this.classList.remove(Xr)
                }
                boardReady() {
                    var e, t, a, s, n, o, r, i;
                    const l = null == (e = this.board) ? void 0 : e.game.plugins.has($.th.ECO.Name);
                    this.plugin = l ? null == (t = this.board) ? void 0 : t.game.plugins.get().find((e=>e.name === $.th.ECO.Name)) : (0,
                    $.Kh)({
                        ecoPath: (0,
                        Yr.K)(),
                        http: ie.Z
                    }),
                    (null == (a = this.board) ? void 0 : a.game.getVariant()) === Br.$y.CHESS_960 && (null == (s = document.querySelector(`.${ai}`)) || s.remove(),
                    null == (n = document.querySelector(`.${ti}`)) || n.remove()),
                    null == (o = this.board) || o.game.on($.th.ECO.Events.Update, this.handleUpdateEco),
                    l ? this.updateOpeningData(null == (i = this.board) ? void 0 : i.game.eco.get()) : null == (r = this.board) || r.game.plugins.add(this.plugin)
                }
                handleUpdateEco({data: e}) {
                    this.updateOpeningData(e)
                }
                componentReady() {
                    this.classList.add(Qr),
                    this.innerHTML = `\n      <span class="${ei}"></span>\n      <div class="${Jr}">\n        <a class="${ai}" title="${(0,
                    h.dW)("Openings")}"><span class="icon-font-chess chess-book ${si}"></span></a>\n        <a class="${ti}" title="${(0,
                    h.dW)("Explorer")}"><span class="icon-font-chess circle-compass ${si}"></span></a>\n      </div>\n    `,
                    this.elements = {
                        explorer: this.querySelector(`.${ti}`),
                        opening: this.querySelector(`.${ai}`),
                        openingName: this.querySelector(`.${ei}`)
                    },
                    os.Z.bind(this.elements.opening),
                    os.Z.bind(this.elements.explorer)
                }
            }
            class HandPieces extends Rr.H {
                constructor() {
                    super(...arguments),
                    this.plugin = null
                }
                static get observedAttributes() {
                    return [Te._.ObservedAttributes.BoardId, Te._.ObservedAttributes.Direction]
                }
                boardReady() {
                    var e, t;
                    this.plugin = (0,
                    $.rF)({
                        direction: this.getAttribute(Te._.ObservedAttributes.Direction),
                        el: this,
                        replaceContainer: !1
                    }),
                    null == (t = null == (e = this.board) ? void 0 : e.game) || t.plugins.add(this.plugin)
                }
                componentDestroy() {
                    var e, t, a;
                    null == (a = null == (e = this.board) ? void 0 : e.game) || a.plugins.remove(null == (t = this.plugin) ? void 0 : t.name),
                    this.plugin = null
                }
            }
            const ni = (0,
            a(19818).FI)()
              , oi = {
                "%username% won on time": e=>h.$H.trans("%username% won on time", {
                    "%username": e
                }),
                "Good move": ()=>h.$H.trans("Good move"),
                "Bad move": ()=>h.$H.trans("Bad move"),
                "Excellent move": ()=>h.$H.trans("Excellent move"),
                Blunder: ()=>h.$H.trans("Blunder"),
                "Speculative move": ()=>h.$H.trans("Speculative move"),
                "Dubious move": ()=>h.$H.trans("Dubious move"),
                Drawish: ()=>h.$H.trans("Drawish"),
                Unclear: ()=>h.$H.trans("Unclear"),
                "White has a slight advantage": ()=>h.$H.trans("White has a slight advantage"),
                "Black has a slight advantage": ()=>h.$H.trans("Black has a slight advantage"),
                "White has a moderate advantage": ()=>h.$H.trans("White has a moderate advantage"),
                "Black has a moderate advantage": ()=>h.$H.trans("Black has a moderate advantage"),
                "White has a decisive advantage": ()=>h.$H.trans("White has a decisive advantage"),
                "Black has a decisive advantage": ()=>h.$H.trans("Black has a decisive advantage"),
                "The position is in zugzwang": ()=>h.$H.trans("The position is in zugzwang"),
                "With initiative": ()=>h.$H.trans("With initiative"),
                "With compensation": ()=>h.$H.trans("With compensation"),
                Novelty: ()=>h.$H.trans("Novelty"),
                "With an attack": ()=>h.$H.trans("With an attack"),
                "Clear All Analysis": ()=>h.$H.trans("Clear All Analysis"),
                "Delete Comment After": ()=>h.$H.trans("Delete Comment After"),
                "Delete Comment Before": ()=>h.$H.trans("Delete Comment Before"),
                "Delete Move": ()=>h.$H.trans("Delete Move"),
                "Delete Entire Variation": ()=>h.$H.trans("Delete Entire Variation"),
                "Comment After": ()=>h.$H.trans("Comment After"),
                "Comment Before": ()=>h.$H.trans("Comment Before"),
                "Insert Continuation": ()=>h.$H.trans("Insert Continuation"),
                Miss: ()=>h.$H.trans("Miss"),
                "Move Variation Down": ()=>h.$H.trans("Move Variation Down"),
                "Move Variation Up": ()=>h.$H.trans("Move Variation Up"),
                Promote: ()=>h.$H.trans("Promote"),
                "Remove Annotation": ()=>h.$H.trans("Remove Annotation"),
                "Remove Begin": ()=>h.$H.trans("Remove Begin"),
                "Remove End": ()=>h.$H.trans("Remove End"),
                "Remove Evaluation Annotation": ()=>h.$H.trans("Remove Evaluation Annotation"),
                "Remove Focus": ()=>h.$H.trans("Remove Focus"),
                "Set Begin": ()=>h.$H.trans("Set Begin"),
                "Set End": ()=>h.$H.trans("Set End"),
                "Set Focus": ()=>h.$H.trans("Set Focus"),
                "Add Comment...": ()=>h.$H.trans("Add Comment..."),
                B: ()=>ni.B,
                K: ()=>ni.K,
                N: ()=>ni.N,
                P: ()=>ni.P,
                Q: ()=>ni.Q,
                R: ()=>ni.R,
                numberOfDays: e=>h.$H.transChoice("{1} 1 day|]1,Inf] %1$s% days", e, {
                    "%1$s%": e
                }),
                numberOfHours: e=>h.$H.transChoice("{1} 1 hr|]1,Inf] %1$s% hrs", e, {
                    "%1$s%": e
                }),
                numberOfMinutes: e=>h.$H.transChoice("{1} 1 min|]1,Inf] %1$s% mins", e, {
                    "%1$s%": e
                }),
                "This game ended in a draw because the same position was repeated three times.": ()=>h.$H.trans("This game ended in a draw because the same position was repeated three times."),
                "En passant is a special pawn move by which a pawn captures another pawn that has advanced two squares.": ()=>h.$H.trans("En passant is a special pawn move by which a pawn captures another pawn that has advanced two squares.")
            };
            class HorizontalMoveList extends Rr.H {
                constructor() {
                    super(...arguments),
                    this.plugin = null
                }
                static get observedAttributes() {
                    return [Te._.ObservedAttributes.BoardId, Te._.ObservedAttributes.ScrollContainerId]
                }
                componentDestroy() {
                    var e, t, a, s;
                    this.plugin && (null == (s = null == (t = null == (e = this.board) ? void 0 : e.game) ? void 0 : (a = t.plugins).remove) || s.call(a, this.plugin.name),
                    this.plugin = null)
                }
                boardReady() {
                    var e, t;
                    const a = this.getAttribute(Te._.ObservedAttributes.ScrollContainerId);
                    this.plugin = (0,
                    $.Mo)({
                        el: this,
                        enableContextMenu: !this.hasAttribute(Te._.ObservedAttributes.DisableContextMenu),
                        scrollContainer: a && document.getElementById(a) || void 0,
                        translations: oi
                    }),
                    null == (t = null == (e = this.board) ? void 0 : e.game) || t.plugins.add(this.plugin)
                }
            }
            const ri = {
                "captured-pieces": CapturedPieces,
                "eco-opening": EcoOpening,
                "hand-pieces": HandPieces,
                "horizontal-move-list": HorizontalMoveList
            };
            var ii = a(3804);
            const li = (0,
            s.ko)({
                state: [Ko.o],
                context: ii.k
            })({
                getGamePgn: ()=>y.S.pgn
            })
              , ci = (0,
            s.kr)();
            var ui = a(53950)
              , di = a(14610)
              , hi = a(39237)
              , pi = (e=>(e.Arrows = "ceeArrow",
            e.Squares = "ceeSquare",
            e))(pi || {});
            function clearArrowsAndSquares() {
                if (di.t.activeType)
                    return;
                ci.getActiveChessboard().game.markings.removeAllWhere({
                    tags: [pi.Arrows, pi.Squares]
                }),
                ui.I.emit(hi.d.MarkingsUpdated)
            }
            const mi = {
                opacity: .75
            };
            var bi = Object.defineProperty
              , gi = Object.getOwnPropertySymbols
              , fi = Object.prototype.hasOwnProperty
              , vi = Object.prototype.propertyIsEnumerable
              , mark_arrows_and_squares_defNormalProp = (e,t,a)=>t in e ? bi(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , mark_arrows_and_squares_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    fi.call(t, a) && mark_arrows_and_squares_defNormalProp(e, a, t[a]);
                if (gi)
                    for (var a of gi(t))
                        vi.call(t, a) && mark_arrows_and_squares_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            const wi = (0,
            s.eI)({
                init() {
                    const e = ci.getActiveChessboard().game;
                    ui.I.on(hi.d.ActiveStateChanged, this.onActiveStateChanged),
                    ui.I.on(hi.d.MarkingsAdded, this.update),
                    ui.I.on(hi.d.MarkingsCleared, this.deactivate),
                    e.onMany($.jd, this.onPositionChange)
                },
                onActiveStateChanged(e) {
                    const t = `${e.type}-${e.san}`;
                    if (!di.t.activeType || di.t.activeType && t !== di.t.activeType)
                        return di.t.activeType = t,
                        void this.update(e);
                    t === di.t.activeType && (di.t.activeType = null,
                    this.deactivate())
                },
                onPositionChange() {
                    di.t.activeType = null,
                    clearArrowsAndSquares()
                },
                deactivate() {
                    clearArrowsAndSquares()
                },
                update(e) {
                    !function markArrowsAndSquares(e) {
                        const t = ci.getActiveChessboard().game
                          , {markings: a} = e;
                        t.markings.removeAllWhere({
                            types: ["arrow", "highlight"]
                        });
                        const s = []
                          , n = [];
                        a.arrows.forEach((e=>{
                            s.push({
                                data: mark_arrows_and_squares_spreadValues({
                                    from: e.slice(0, 2),
                                    to: e.slice(2, 4)
                                }, mi),
                                tags: [pi.Arrows],
                                type: "arrow"
                            })
                        }
                        )),
                        a.squares.forEach((e=>{
                            n.push({
                                data: {
                                    square: e,
                                    opacity: .8
                                },
                                tags: [pi.Squares],
                                node: !0,
                                type: "highlight"
                            })
                        }
                        )),
                        t.markings.addMany(s),
                        t.markings.addMany(n),
                        ui.I.emit(hi.d.MarkingsUpdated)
                    }(e)
                }
            })
              , yi = (0,
            s.ko)({
                clients: [wi],
                context: ci
            })({
                getActiveChessboard: ze.g
            });
            var ki = a(27894);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            function togglePalette(e, t="right") {
                if (!function isPaletteInitialized() {
                    return Boolean(ki.h.position)
                }()) {
                    if (e) {
                        const a = e.getBoundingClientRect();
                        if (a) {
                            const e = 300
                              , s = 400;
                            let n = "right" === t ? a.top - 33 : a.top - s - 10
                              , o = "right" === t ? a.left + 33 : a.left - (e - a.width) / 2;
                            n = Math.max(0, n),
                            n = Math.min(window.innerHeight - s, n),
                            o = Math.max(0, o),
                            o = Math.min(window.innerWidth - e, o);
                            const r = {
                                top: n,
                                left: o,
                                width: e,
                                height: s
                            };
                            ki.h.position || (ki.h.position = r),
                            Object.assign(ki.h.position, r)
                        }
                    }
                    return (0,
                    s.tL)((()=>a.e(245).then(a.bind(a, 24245)))),
                    void (ki.h.isVisible = !0)
                }
                ki.h.isVisible = !ki.h.isVisible
            }
            const _i = (0,
            s.eI)({
                init() {
                    (0,
                    ye.FR)("chessboard_board_images_palette") && this.addIcon()
                },
                addIcon() {
                    const e = document.getElementById("board-controls-emoji-palette");
                    null == e || e.addEventListener("click", (()=>{
                        togglePalette(e)
                    }
                    ))
                }
            });
            var Ci = a(7616);
            const Ti = (0,
            s.ko)({
                context: Ci.u,
                clients: [_i],
                state: [ki.h]
            })({
                getActiveChessboard: ze.g
            });
            var Si = a(27376)
              , xi = a(75696);
            const Ei = (0,
            s.eI)({
                init: ()=>function shouldLoadBoardOptions() {
                    var e, t, a, s;
                    return Boolean((null == (t = null == (e = window.context) ? void 0 : e.user) ? void 0 : t.username) && (null == (s = (a = ke.f).shouldLoadBoardOptions) ? void 0 : s.call(a)))
                }() ? async function loadBoardOptions() {
                    let e;
                    try {
                        e = await (0,
                        Si.R)()
                    } catch (t) {
                        console.error(t)
                    }
                    e && (Object.assign(_e.q.boardOptions, e),
                    xi.n.setBoardOptions(_e.q.boardOptions)),
                    ke.f.getActiveChessboardId && ((0,
                    We.x)().forEach((e=>{
                        e.game.setOptions(_e.q.boardOptions)
                    }
                    )),
                    (0,
                    je.q)())
                }() : Promise.resolve()
            });
            var Oi = a(10942);
            const Ai = "chessboard_annotations_effects_sync"
              , Mi = "chessboard_recorder_plugin"
              , Pi = ["boardStyle", "coordinates", "darkMode", "highlightLegalMoves", "moveListDisplayType", "moveMethod", "pieceStyle", "real3D", "autoPromote", "autoClaimDraw", "disableUserMarkings", "enabled", "id", "legalPositionCheck", "soundTheme", "animationType"]
              , ji = (()=>{
                const e = {};
                return ({api: t, options: a})=>{
                    if (!t.getVersion)
                        return;
                    const s = t.getVersion();
                    e[s] || console.log("CHESSBOARD VERSION:", s),
                    e[s] = Pi.reduce(((e,t)=>(e[t] = a[t],
                    e)), {}),
                    window.context.chessboardOptionsByVersion = e
                }
            }
            )()
              , zi = {
                name: "ChessboardOptionsUserSnapPlugin",
                create: ji,
                match: [{
                    condition: e=>e.type === $.QY.OptionsEvents.Update,
                    handler: (e,t)=>ji(t)
                }]
            };
            var Wi = zi
              , Li = a(15870)
              , Ii = a(70528);
            var Ri = {
                name: "RendererSetFailedFallbackPlugin",
                match: [{
                    condition: e=>e.type === $.QY.InstanceEvents.RendererSetFailed,
                    handler: (0,
                    tr.Z)((()=>{
                        (0,
                        Li.W)(!1),
                        Ii.Z.add({
                            content: (0,
                            h.dW)('WebGL is not supported by your browser, so some of your Piece or Animation Type <a href="/settings/board" target="_blank">settings</a> are ignored.'),
                            icon: "circle-x",
                            duration: 12e3
                        })
                    }
                    ), 12500, {
                        trailing: !1
                    })
                }]
            }
              , Ni = a(91047)
              , Bi = Object.defineProperty
              , Fi = Object.defineProperties
              , Di = Object.getOwnPropertyDescriptors
              , $i = Object.getOwnPropertySymbols
              , qi = Object.prototype.hasOwnProperty
              , Ui = Object.prototype.propertyIsEnumerable
              , chess_board_defNormalProp = (e,t,a)=>t in e ? Bi(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            let Zi;
            class ChessBoard extends HTMLElement {
                createGame(e) {
                    const t = [...e.plugins || [], Ri];
                    var a;
                    this.game = (0,
                    $.dz)((a = ((e,t)=>{
                        for (var a in t || (t = {}))
                            qi.call(t, a) && chess_board_defNormalProp(e, a, t[a]);
                        if ($i)
                            for (var a of $i(t))
                                Ui.call(t, a) && chess_board_defNormalProp(e, a, t[a]);
                        return e
                    }
                    )({}, e),
                    Fi(a, Di({
                        plugins: t
                    })))),
                    this.game.on("CheatDetectionError", (e=>{
                        (0,
                        Ni.T)(e.type, e.data)
                    }
                    )),
                    this.game.plugins.add(Wi),
                    (0,
                    Oi.F)(Ai) || (this.game.plugins.remove("effectsHMLSync"),
                    this.game.onMany([$.QY.InstanceEvents.Create, $.QY.InstanceEvents.ModeChanged], (()=>this.game.plugins.remove("effectsHMLSync")))),
                    (0,
                    Oi.F)(Mi) && this.game.plugins.add((0,
                    $.KW)()),
                    this.dispatchEvent(new CustomEvent(Te._.Events.BoardInitialized,{
                        detail: this.game.getOptions().id
                    }))
                }
                init({boardStyles: e, createRenderer: t, emitter: a, init: s, mode: n, options: o, plugins: r, pieceStyles: i}) {
                    this.innerHTML = "";
                    const l = Object.assign((0,
                    $.jw)(), o, {
                        test: Boolean(window.Cypress)
                    });
                    return this.createGame({
                        el: this,
                        emitter: a,
                        init: s,
                        mode: n,
                        options: l,
                        plugins: getPlugins(r),
                        renderer: null == t ? void 0 : t({
                            boardStyles: e,
                            el: this,
                            options: l,
                            pieceStyles: i
                        })
                    }),
                    this.game
                }
                get options() {
                    var e;
                    return null == (e = this.game) ? void 0 : e.getOptions()
                }
                connectedCallback() {
                    this.dispatchEvent(new CustomEvent(Te._.Events.BoardAttached))
                }
                disconnectedCallback() {
                    this.dispatchEvent(new CustomEvent(Te._.Events.BoardDetached))
                }
            }
            function getPlugins(e=[]) {
                const t = (0,
                $.n8)((0,
                $.NQ)(), e);
                return Zi || (Zi = (0,
                $.q4)()),
                [...t.filter((e=>e.name !== $.th.Sounds.Plugin.Name)), Zi]
            }
            var Gi = {
                "chess-board": ChessBoard
            };
            const Hi = (0,
            s.ko)({
                clients: [Ei],
                context: ke.f,
                elements: Gi,
                state: [_e.q.boardOptions]
            })({
                getActiveChessboardId: ()=>Re.Id,
                shouldLoadBoardOptions: ()=>!0
            })
              , Vi = (0,
            s.kr)()
              , Ki = (0,
            s.ko)({
                context: Vi,
                state: [Ia.Y]
            })({});
            var Yi = a(86833);
            const Qi = (0,
            s.ko)({
                state: [ot.v],
                context: Yi.a
            })({
                getActiveChessboard: ze.g,
                getActiveChessboardElementId: Qa.H,
                getEvaluationProgress: ()=>p.F.progress > 0 && p.F.progress < 1 ? p.F.progress : 1,
                isDefaultFenAutomatic: ()=>!1,
                isEvaluationBarVisible: function isEvaluationBarVisible() {
                    return Boolean(it.v.engineEnabled && me.Ko.evalBarEnabled)
                },
                isWdlBarEnabled: isWdlBarEnabled,
                updateManually: useManualEval
            });
            var Ji = a(30461)
              , Xi = a(919);
            const el = (0,
            s.ko)({
                context: Ji.R,
                state: [Xi.F]
            })
              , tl = (0,
            s.kr)()
              , al = {
                game: null
            };
            function clearGamePreview() {
                al.game && (al.game = null,
                tl.clearChessboardPreview())
            }
            var sl = a(73372);
            function getPlayer({players: e}, t) {
                var a;
                const s = Object.values(e).find((e=>e.color === t))
                  , n = (0,
                h.ox)();
                return {
                    country: Object.keys(n).find((e=>n[e] === s.countryName)) || (null == (a = s.countryId) ? void 0 : a.toString()) || null,
                    avatarUrl: s.avatarUrl,
                    flairCode: s.flairCode,
                    membership: s.membershipCode,
                    name: s.username,
                    rating: s.rating,
                    title: s.chessTitle,
                    hasAccount: !0
                }
            }
            async function fetchArchiveGame(e) {
                var t;
                let a;
                a = e.live ? "web_callback_load_game_live_data" : e.vsComputer ? "web_computer_callback_load_game" : "web_daily_callback_load_game";
                const s = le.Z.generate(a, {
                    id: e.id
                })
                  , {data: n} = await ie.Z.get(s);
                return {
                    whitePlayer: getPlayer(n, "white"),
                    blackPlayer: getPlayer(n, "black"),
                    pgn: wa().generatePgn({
                        tcn: n.game.moveList,
                        headers: n.game.pgnHeaders,
                        timestamps: n.game.moveTimestamps ? null == (t = n.game.moveTimestamps) ? void 0 : t.split(",").map(Number) : n.game.timestamps
                    })
                }
            }
            function loadGamePreview(e) {
                var t;
                const a = null == (t = al.game) ? void 0 : t.id;
                al.game = null,
                e.id !== a ? setTimeout((async()=>{
                    e instanceof sl.m ? tl.loadChessboardPreview(await fetchArchiveGame(e)) : tl.loadChessboardPreview(e),
                    al.game = e
                }
                )) : tl.clearChessboardPreview()
            }
            function getGamePreviewId() {
                var e, t;
                return null != (t = null == (e = al.game) ? void 0 : e.id) ? t : null
            }
            const nl = {
                isSearchingUser: !1,
                userSearchMessage: "",
                userSearchResults: []
            };
            function clearUserSearch() {
                nl.isSearchingUser = !1,
                nl.userSearchMessage = "",
                nl.userSearchResults = []
            }
            var ol = a(83229);
            class UserModel extends s.Hn {
                constructor(e) {
                    super(),
                    this.avatarUrl = null,
                    this.chessTitle = null,
                    this.country = null,
                    this.flairCode = null,
                    this.id = "",
                    this.membership = null,
                    this.membershipLevel = null,
                    this.userId = 0,
                    this.username = "",
                    e && (0,
                    s.Uc)(this, e)
                }
                isPremium() {
                    return "basic" !== this.membership
                }
                getMembershipLevel() {
                    return this.membership && this.membership in ol.p ? ol.p[this.membership] : null
                }
            }
            const rl = (0,
            a(78719).x)()
              , il = {
                currentUser: rl ? new UserModel({
                    id: rl.uuid,
                    userId: rl.id,
                    membership: rl.membershipCode,
                    membershipLevel: rl.membershipLevel,
                    flairCode: rl.flairCode,
                    country: rl.country.code,
                    chessTitle: rl.chessTitle,
                    username: rl.username,
                    avatarUrl: rl.avatarUrl
                }) : null
            };
            function getCurrentUser() {
                return il.currentUser
            }
            var ll = a(34497);
            async function forEachAsync(e, t) {
                await e.reduce((async(e,a,s)=>{
                    await e,
                    await t(a, s)
                }
                ), Promise.resolve())
            }
            const cl = {
                addGamesFromArchive: async function addGamesFromArchive(e) {
                    let t = "";
                    await forEachAsync(e, (async e=>{
                        let a;
                        try {
                            a = await fetchArchiveGame(e)
                        } catch (s) {
                            (0,
                            ll.T)(s)
                        }
                        a && (t = `${t}\n      ${a.pgn}`)
                    }
                    )),
                    ue.p.selectedSetupTab === de.k.Setup.Tabs.SetupPosition && (0,
                    he.G)(),
                    ue.p.selectedSetupTab = void 0,
                    (0,
                    ce.w)({
                        pgn: t
                    }, {
                        allowMultiplePgns: !0
                    })
                },
                clearGamePreview: clearGamePreview,
                clearUserSearch: clearUserSearch,
                getActiveChessboardElementId: Qa.H,
                getDefaultUserSearchResults: ()=>{
                    const e = getCurrentUser();
                    return [{
                        username: e.username,
                        avatar_url: e.avatarUrl || "",
                        membership_level: e.membershipLevel,
                        flair_code: e.flairCode || ""
                    }]
                }
                ,
                getGamePreviewId: getGamePreviewId,
                getUserSearch: function getUserSearch() {
                    return nl
                },
                loadGamePreview: loadGamePreview,
                searchUser: async function searchUser(e) {
                    if (e) {
                        if (e.length < 3)
                            return nl.userSearchResults = [],
                            void (nl.userSearchMessage = (0,
                            h.dW)("Please enter %number% or more characters", {
                                "%number%": 3
                            }));
                        nl.isSearchingUser = !0;
                        try {
                            const {data: t} = await function searchUsername(e) {
                                return ie.Z.get(le.Z.generate("web_user_callback_username_search", {
                                    activeDays: 4e3,
                                    query: e
                                }))
                            }(e);
                            nl.userSearchResults = t,
                            nl.userSearchMessage = ""
                        } catch (t) {
                            nl.userSearchMessage = (0,
                            h.dW)("No results found.")
                        }
                        nl.isSearchingUser = !1
                    } else
                        clearUserSearch()
                },
                getCurrentUser: getCurrentUser
            }
              , ul = el(cl)
              , dl = (0,
            s.ko)({
                context: tl,
                state: [al]
            });
            const hl = $.C8.create();
            const pl = dl({
                clearChessboardPreview: function clearBoardPreview() {
                    (0,
                    he.G)(),
                    Object.assign(Ra.F.white, new wo.S($.lA.ColorsAsNumbers.White)),
                    Object.assign(Ra.F.black, new wo.S($.lA.ColorsAsNumbers.Black));
                    const e = (0,
                    g.j)();
                    e.markings.removeAll(),
                    e.load({
                        fen: (0,
                        se.H)()
                    }),
                    e.selectLineEnd(),
                    ve.j.isGamePreviewActive = !1
                },
                loadChessboardPreview: function loadBoardPreview({pgn: e, whitePlayer: t, blackPlayer: a}) {
                    ve.j.isGamePreviewActive = !0;
                    const s = (0,
                    g.j)();
                    s.setMode(hl);
                    let n = e;
                    try {
                        n = wa().generatePgn({
                            moves: wa().pgnToJson(e, 0).moves,
                            hideComments: !0
                        })
                    } catch (o) {}
                    s.load({
                        pgn: n
                    }),
                    s.selectLineStart(),
                    t && Object.assign(Ra.F.white, t),
                    a && Object.assign(Ra.F.black, a)
                }
            });
            var ml = a(58611)
              , bl = a(49825);
            const gl = (0,
            s.ko)({
                context: ml.R,
                state: [bl.c]
            });
            var fl = a(5169)
              , vl = a(20063);
            async function addCollectionPageGames(e) {
                const t = e.data.map((e=>({
                    id: e.lucgId,
                    pgn: e.typeSpecificData.pgn
                })));
                await (0,
                vl.y)(t)
            }
            const wl = gl({
                addGamesFromLibrary: async function addGamesFromCollections(e) {
                    ue.p.analyses.reset(),
                    await forEachAsync(e, (async e=>{
                        e.allGames ? await async function addAllGamesFromCollection(e) {
                            const {data: t} = await (0,
                            fl.k)(e);
                            if (await addCollectionPageGames(t),
                            t.meta.totalPages > 1)
                                for (let a = 2; a <= t.meta.totalPages; a++) {
                                    const {data: t} = await (0,
                                    fl.k)(e, {
                                        page: a
                                    });
                                    await addCollectionPageGames(t)
                                }
                        }(e.id) : e.games.length && (0,
                        vl.y)(e.games)
                    }
                    ))
                },
                clearGamePreview: clearGamePreview,
                getActiveChessboardElementId: Qa.H,
                getGamePreviewId: getGamePreviewId,
                getPlayerModel: e=>new wo.S(e),
                loadGamePreview: loadGamePreview
            })
              , yl = (0,
            s.kr)()
              , kl = (0,
            s.ko)({
                context: yl
            })({})
              , _l = (0,
            s.ko)({
                context: Ut.V,
                state: [$t.D]
            });
            var Cl = a(23624);
            function getSuggestedMoveAnalysisType({position: e, userColor: t, viewedAnswer: a=!1}) {
                return (0,
                Fa.Q)({
                    classification: ya.x.Classifications.Types.BestMove,
                    hideFallback: a,
                    position: {
                        analysisTypes: e.analysisTypes,
                        color: e.color,
                        playedMove: e.playedMove,
                        suggestedMove: e.suggestedMove
                    },
                    typePhrase: a ? z.J.Response.AnalysisTypes.Phrases.Impersonal : void 0,
                    typeResponse: z.J.Response.AnalysisTypes.ResponseTypes.Best,
                    userColor: t,
                    isRetry: !0
                })
            }
            var Tl = a(6194);
            function buildPGN(e, t) {
                const a = e.beforeFen.split(" ")
                  , s = a[a.length - 1]
                  , n = e.color === $.lA.ColorsAsNumbers.White ? "." : "...";
                return `${t.BlackElo && t.WhiteElo ? `[BlackElo "${t.BlackElo}"]\n[WhiteElo "${t.WhiteElo}"]\n` : ""}[SetUp "1"]\n[FEN "${e.beforeFen}"]\n${s}${e.color}${n} ${e.san} *`
            }
            const Sl = _l({
                analyze: (e,t)=>(0,
                Tl.B)({
                    options: {
                        retryMove: t,
                        noPersist: !0,
                        noTEP: !1,
                        noTactics: !0,
                        skipToFront: !0,
                        tep: {
                            classificationv2: !0,
                            isRetry: !0
                        }
                    },
                    pgn: buildPGN(e, (0,
                    g.j)().getHeaders())
                }),
                getBestMoveKey: (e,t,a)=>function addBestMoveAsPosition(e, t, a) {
                    var s;
                    const n = (0,
                    Cl.u)({
                        position: e,
                        node: t
                    })
                      , o = (0,
                    A.F)({
                        node: t,
                        next: n,
                        position: n,
                        data: {
                            analysisType: getSuggestedMoveAnalysisType({
                                position: n,
                                userColor: null != (s = (0,
                                yt.D)()) ? s : null,
                                viewedAnswer: a
                            })
                        }
                    });
                    return null == o ? void 0 : o.id
                }((0,
                kt.N)()[t], e, a),
                getGameAPI: g.j
            });
            var xl = a(43936)
              , El = a(6850);
            const Ol = (0,
            s.kr)();
            var Al = a(90607)
              , Ml = a(19579);
            var Pl = a(2101)
              , jl = (Object.create,
            Object.defineProperty)
              , zl = Object.defineProperties
              , Wl = (Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyDescriptors)
              , Ll = (Object.getOwnPropertyNames,
            Object.getOwnPropertySymbols)
              , Il = (Object.getPrototypeOf,
            Object.prototype.hasOwnProperty)
              , Rl = Object.prototype.propertyIsEnumerable
              , share_modalvue_type_script_lang_ts_defNormalProp = (e,t,a)=>t in e ? jl(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , Nl = (0,
            Ce.aZ)({
                el: "#share-modal",
                name: "ShareModalController",
                components: {
                    ShareMenu: ()=>a.e(112).then(a.bind(a, 93112))
                },
                setup: ()=>({
                    checkboxModel: Pl._$
                }),
                data: ()=>({
                    shareMenuData: null
                }),
                computed: {
                    isVisible: ()=>function isShareModalVisible() {
                        return Ml.h.isVisible
                    }(),
                    boardStyles: ()=>Ol.getBoardStyles(),
                    isLoggedIn() {
                        var e, t;
                        return Boolean(null == (t = null == (e = window.context) ? void 0 : e.user) ? void 0 : t.id)
                    }
                },
                watch: {
                    isVisible() {
                        this.isVisible && this.loadBoardData()
                    },
                    checkboxModel: {
                        deep: !0,
                        handler() {
                            this.loadBoardData()
                        }
                    }
                },
                methods: {
                    onClose() {
                        !function hideShareModal() {
                            Ml.h.options = Al.v,
                            Ml.h.isVisible = !1
                        }()
                    },
                    onShareMenuMounted(e) {
                        e()
                    },
                    async loadBoardData() {
                        await Ol.loadBoardStyles();
                        const e = function getShareModalChessboard() {
                            return Ol.getActiveChessboard()
                        }()
                          , t = e.game.getOptions()
                          , a = function getShareModalOptions() {
                            return Ml.h.options
                        }();
                        var s, n;
                        this.shareMenuData = (s = ((e,t)=>{
                            for (var a in t || (t = {}))
                                Il.call(t, a) && share_modalvue_type_script_lang_ts_defNormalProp(e, a, t[a]);
                            if (Ll)
                                for (var a of Ll(t))
                                    Rl.call(t, a) && share_modalvue_type_script_lang_ts_defNormalProp(e, a, t[a]);
                            return e
                        }
                        )({}, a),
                        n = {
                            initialActiveTab: a.initialTab,
                            tcn: e.game.getTCN(),
                            fen: e.game.getFEN(),
                            pgn: e.game.getPGN((0,
                            Pl.nj)(this.checkboxModel)),
                            pgnHeaders: e.game.getHeaders(),
                            hasTimestamps: !0,
                            variant: e.game.getVariant(),
                            boardOptions: {
                                coordinates: t.coordinates,
                                boardStyle: t.boardStyle,
                                pieceStyle: t.pieceStyle,
                                flipBoard: t.flipped
                            }
                        },
                        zl(s, Wl(n)))
                    }
                }
            })
              , Bl = Nl
              , Fl = (0,
            Ga.Z)(Bl, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.isVisible && e.shareMenuData ? a("share-menu", e._b({
                    ref: "modal",
                    attrs: {
                        "board-settings": e.boardStyles,
                        "is-logged-in": e.isLoggedIn
                    },
                    on: {
                        hide: e.onClose,
                        mounted: e.onShareMenuMounted
                    }
                }, "share-menu", e.shareMenuData, !1)) : e._e()
            }
            ), [], !1, null, null, null).exports;
            const Dl = (0,
            s.ko)({
                state: [Ml.h],
                context: Ol,
                controllers: [Fl]
            });
            (0,
            Pl.sY)({
                isCommentsCheckboxVisible: !0,
                isHighlightsCheckboxVisible: !0
            });
            const $l = Dl({
                getActiveChessboard: ze.g,
                getBoardStyles: El.X,
                loadBoardStyles: xl.o
            });
            var ql = a(32751)
              , Ul = a(91857);
            const Zl = (0,
            s.ko)({
                context: Ul.$,
                state: [Ht.I]
            })({
                getGameAPI: g.j,
                getBoardOptions: ql.T
            })
              , Gl = "threats"
              , Hl = (0,
            s.kr)();
            var Vl = a(44014);
            class ThreatModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.bestMove = "",
                    this.fen = "",
                    this.mate = null,
                    this.promotion = null,
                    this.score = 0,
                    this.seeValue = 0,
                    this.type = ""
                }
            }
            const Kl = {
                collection: (0,
                s.BL)(ThreatModel, {
                    key: "fen"
                }),
                engine: null
            };
            var Yl = a(642);
            function clearThreats() {
                const e = Hl.getActiveChessboard().game;
                Kl.collection.reset(),
                e.markings.removeAllWhere({
                    tags: [Gl]
                }),
                Vl.h.emit(Yl._.ThreatsCleared)
            }
            const Ql = {
                color: "#ca3431",
                opacity: .75
            };
            var Jl = Object.defineProperty
              , Xl = Object.getOwnPropertySymbols
              , ec = Object.prototype.hasOwnProperty
              , tc = Object.prototype.propertyIsEnumerable
              , mark_active_threats_defNormalProp = (e,t,a)=>t in e ? Jl(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , mark_active_threats_spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    ec.call(t, a) && mark_active_threats_defNormalProp(e, a, t[a]);
                if (Xl)
                    for (var a of Xl(t))
                        tc.call(t, a) && mark_active_threats_defNormalProp(e, a, t[a]);
                return e
            }
            ;
            const ac = {
                name: "Komodo Threats",
                paths: {
                    pathToEngineWorker: window.Config.pathToExplanationEngineWorker,
                    pathToWasmEngine: window.Config.pathToWasmExplanationEngine
                }
            };
            async function updateThreats(e) {
                return clearThreats(),
                await async function updateEngine() {
                    return new Promise((e=>{
                        Kl.engine ? Kl.engine.stopFast((t=>{
                            Kl.engine = t,
                            e()
                        }
                        ), 200) : (Kl.engine = wa()(ac.paths),
                        e())
                    }
                    ))
                }(),
                new Promise((t=>{
                    const a = Kl.engine;
                    a.send(`position fen ${e}`, (()=>{
                        a.send("fetch threats", (e=>{
                            e.forEach(Kl.collection.add),
                            function markActiveThreats() {
                                const e = Hl.getActiveChessboard().game
                                  , t = Kl.collection.reduce(((e,t)=>(e.push({
                                    data: mark_active_threats_spreadValues({
                                        from: t.bestMove.slice(0, 2),
                                        to: t.bestMove.slice(2, 4)
                                    }, Ql),
                                    tags: [Gl],
                                    type: "arrow"
                                }),
                                e)), []);
                                e.markings.addMany(t)
                            }(),
                            Vl.h.emit(Yl._.ThreatsAdded, {
                                threats: e
                            }),
                            t()
                        }
                        ))
                    }
                    ))
                }
                ))
            }
            const sc = (0,
            s.eI)({
                init() {
                    const e = Hl.getActiveChessboard().game;
                    Vl.h.on(Yl._.ActiveStateChanged, this.onActiveStateChanged),
                    e.onMany($.jd, this.onPositionChange)
                },
                onActiveStateChanged() {
                    Hl.isActive() ? this.update() : this.deactivate()
                },
                onPositionChange() {
                    if (!Hl.isActive())
                        return;
                    updateThreats(Hl.getActiveChessboard().game.getFEN())
                },
                deactivate() {
                    Kl.collection.length && clearThreats(),
                    Kl.engine && function stopThreatsEngine() {
                        Kl.engine && (Kl.engine.stopAll(),
                        Kl.engine.quit(),
                        Kl.engine = null)
                    }()
                },
                update() {
                    updateThreats(Hl.getActiveChessboard().game.getFEN())
                }
            })
              , nc = (0,
            s.ko)({
                clients: [sc],
                context: Hl,
                state: [Kl]
            })({
                getActiveChessboard: ze.g,
                isActive: ()=>me.Ko.threatsEnabled
            })
              , oc = (0,
            s.kr)()
              , rc = {
                arrowsAndSquaresExtension: yi,
                chessboardExtension: Hi,
                countriesExtension: Ki,
                evaluationExtension: Qi,
                gameArchiveExtension: ul,
                gamePreviewExtension: pl,
                addToLibraryModalExtension: li,
                libraryExtension: wl,
                notificationsExtension: kl,
                retriesExtension: Sl,
                shareModalExtension: $l,
                showLineExtension: Zl,
                threatsExtension: nc,
                boardImagesExtension: Ti,
                userSearchExtension: (0,
                s.ko)({
                    context: oc,
                    state: [nl]
                })({})
            };
            var ic = a(64300)
              , lc = a(12585)
              , cc = a(41733)
              , uc = a(1074);
            const dc = {
                boardState: ve.j,
                boardSettingsState: me.oX,
                ceeAnalysisState: ic.Q,
                coreState: v.X,
                evaluationState: it.v,
                featureControlState: lc.d,
                gameState: y.S,
                gameAnalysis: p.F,
                gameReviewState: _t.j,
                maxAnalysisState: U.V,
                modalsState: cc.B,
                openingsState: uc.$,
                optionsState: pe.G,
                playersState: Ra.F,
                retriesState: $t.D,
                savedAnalysisState: wr.h,
                selfAnalysisState: ue.p,
                settingsState: me.Ko,
                settingsLayoutState: me.BU,
                sidebarState: _.B,
                themesState: na.z
            };
            async function initAnalysis() {
                await (0,
                s.QB)({
                    controllers: zr,
                    clients: Object.values(Da),
                    elements: ri,
                    state: Object.values(dc),
                    extensions: Object.values(rc)
                }),
                "dev" === window.context.environment && (window.App = {
                    controllers: zr,
                    clients: Da,
                    extensions: rc,
                    elements: ri,
                    state: dc
                }),
                i.emit(n.AppInitialized)
            }
            window.Config.cypress ? window.addEventListener("load", initAnalysis) : initAnalysis(),
            window.context.appVersion = function getAnalysisVersion() {
                return function getPackageVersion(e) {
                    return e.version
                }(a(41747))
            }(),
            window.context.chessboardVersion = function getChessboardFullVersion() {
                const {default: e} = a(76940);
                return e
            }()
        },
        34604: function(e, t, a) {
            "use strict";
            a.d(t, {
                S: function() {
                    return GameAnalysisModel
                }
            });
            var s = a(54713)
              , n = a(67104)
              , o = a(26908);
            const r = {
                CAPS: {
                    all: 0,
                    B: 0,
                    K: 0,
                    N: 0,
                    P: 0,
                    Q: 0,
                    R: 0
                },
                pieceMoves: {
                    B: 0,
                    K: 0,
                    N: 0,
                    P: 0,
                    Q: 0,
                    R: 0
                },
                tallies: {
                    best: 0,
                    excellent: 0,
                    good: 0,
                    inaccuracy: 0,
                    mistake: 0,
                    blunder: 0,
                    forced: 0,
                    book: 0,
                    missedMate: 0,
                    fasterMate: 0,
                    winningToLosing: 0,
                    missedWin: 0,
                    critical: 0,
                    brilliant: 0,
                    blunderGP0: 0,
                    missedWinGP0: 0,
                    blunderGP1: 0,
                    missedWinGP1: 0,
                    blunderGP2: 0,
                    missedWinGP2: 0
                }
            }
              , i = {
                depth: 0,
                eval: {
                    cp: 0,
                    mateIn: void 0,
                    pv: [],
                    score: void 0
                },
                mateIn: null,
                moveLan: "",
                score: 0,
                speech: ""
            }
              , l = {
                played: {
                    good: [],
                    bad: []
                },
                best: {
                    good: [],
                    bad: []
                }
            };
            class PositionModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.analysisType = "",
                    this.beforeFen = null,
                    this.ceacAnalysisTypes = l,
                    this.classification = o.x.Classifications.Types.BestMove,
                    this.color = n.lA.ColorsAsNumbers.White,
                    this.difference = 0,
                    this.fromClient = !1,
                    this.fen = "",
                    this.id = "",
                    this.ids = {
                        line: 0,
                        move: -1
                    },
                    this.isKeyMove = !1,
                    this.isLastBookMove = !1,
                    this.moveNumber = 0,
                    this.playedMove = i,
                    this.ply = null,
                    this.san = "",
                    this.scenarios = {},
                    this.suggestedMove = i,
                    this.symbol = null,
                    this.time = null,
                    this.wholeMoveNumber = -1
                }
            }
            class GameAnalysisModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.analysisDepth = 0,
                    this.annotatedPgn = "",
                    this.arc = null,
                    this.arcPlayerScenarios = {
                        black: void 0,
                        white: void 0
                    },
                    this.averageDifference = {
                        black: 0,
                        white: 0
                    },
                    this.book = {
                        code: "",
                        depth: 0,
                        moves: "",
                        name: "",
                        score: 0,
                        sdiff: 0,
                        url: ""
                    },
                    this.bookPly = 0,
                    this.CAPS = {
                        black: r.CAPS,
                        white: r.CAPS
                    },
                    this.gamePhases = [0, 0],
                    this.fromSaved = !1,
                    this.isBasicAnalysis = !1,
                    this.pieceMoves = {
                        black: r.pieceMoves,
                        white: r.pieceMoves
                    },
                    this.playMayContinue = {
                        cp: 0,
                        mateIn: void 0,
                        pv: []
                    },
                    this.positions = (0,
                    s.BL)(PositionModel, {
                        key: "id"
                    }),
                    this.prediction = null,
                    this.progress = 0,
                    this.progressUpdatedAt = void 0,
                    this.startingFen = "",
                    this.tallies = {
                        black: r.tallies,
                        white: r.tallies
                    },
                    this.themes = {
                        moves: {
                            black: {},
                            white: {}
                        },
                        weights: {
                            black: {},
                            white: {}
                        }
                    },
                    this.time = void 0
                }
            }
        },
        75285: function(e, t, a) {
            "use strict";
            a.d(t, {
                S: function() {
                    return PlayerModel
                }
            });
            var s = a(67104)
              , n = a(54713)
              , o = a(86910)
              , r = a(32305)
              , i = a(19578);
            var l = a(87692);
            class PlayerModel extends n.Hn {
                constructor(e, t) {
                    super(),
                    this.avatarUrl = null,
                    this.color = s.lA.ColorsAsNumbers.White,
                    this.country = null,
                    this.flairCode = null,
                    this.membershipLevel = l.p0.basic,
                    this.rating = null,
                    this.title = null,
                    this.username = "",
                    this.color = e,
                    t && (0,
                    n.Uc)(this, t)
                }
                getAvatar() {
                    return this.avatarUrl ? this.avatarUrl : (0,
                    o.n)(this.color === s.lA.ColorsAsNumbers.White ? "bundles/web/images/white_400.png" : "bundles/web/images/black_400.png")
                }
                getName() {
                    return this.username && "?" !== this.username ? this.username : this.color === s.lA.ColorsAsNumbers.White ? (0,
                    r.dW)("White") : this.color === s.lA.ColorsAsNumbers.Black ? (0,
                    r.dW)("Black") : (0,
                    r.dW)("Player")
                }
                syncHeaders(e) {
                    var t, a, n, o, r;
                    const l = this.color === s.lA.ColorsAsNumbers.White ? "White" : "Black"
                      , c = Object.keys(e);
                    function getColorKey(e, t="") {
                        return `${e}${t}`
                    }
                    function getColorHeader(t, a) {
                        return e[getColorKey(t, a)]
                    }
                    function hasHeader(e, t) {
                        return c.includes(getColorKey(e, t))
                    }
                    hasHeader(l, "Url") && (this.avatarUrl = null != (t = getColorHeader(l, "Url")) ? t : ""),
                    hasHeader(l, "Country") && (this.country = null != (a = function getCountry(e) {
                        var t;
                        if (!e)
                            return;
                        const a = null == (t = i.Y.countries) ? void 0 : t[null != e ? e : ""];
                        return a ? {
                            code: e,
                            name: a
                        } : void 0
                    }(getColorHeader(l, "Country"))) ? a : null),
                    hasHeader(l, "Elo") && (this.rating = null != (n = Number(getColorHeader(l, "Elo"))) ? n : null),
                    hasHeader(l, "Title") && (this.title = null != (o = getColorHeader(l, "Title")) ? o : null),
                    hasHeader(l) && (this.username = null != (r = getColorHeader(l)) ? r : "")
                }
            }
        },
        49458: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                Y: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                (a = t = e.Events || (e.Events = {})).Analysis = "Analysis - Analyze",
                a.Details = "Analysis - Details",
                a.Moments = "Analysis - Key Moments",
                a.MaxAnalysis = "Analysis - Max Analysis",
                a.Openings = "Analysis - Openings",
                a.Retry = "Game Review - Retry",
                a.Review = "Analysis - Game Review",
                a.Shared = "Game Review - Shared",
                a.ShowBest = "Game Review - Best",
                a.ShowBestMoveModeActive = "Game Review - Show Best Move Mode Is Active",
                a.ShowBestMoveModeToggled = "Game Review - Show Best Move Mode Toggled",
                a.ShowHint = "Game Review - Show Hint",
                a.ShowLine = "Game Review - Show Line",
                a.Tablebase = "Analysis - Tablebase",
                a.Training = "Game Review - Recommended Training",
                a.UpgradeModal = "Analysis - PremiumModal"
            }
            )(s || (s = {}))
        },
        46979: function(e, t, a) {
            "use strict";
            a.d(t, {
                P: function() {
                    return cancelRunningAnalysis
                }
            });
            var s = a(64300);
            function cancelRunningAnalysis() {
                s.Q.analyses.reset(),
                s.Q.queue = []
            }
        },
        29983: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                O: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                (t = e.Events || (e.Events = {})).CeeClassificationReceived = "CeeClassificationReceived",
                e.EngineTimeout = 15e3
            }
            )(s || (s = {}))
        },
        72829: function(e, t, a) {
            "use strict";
            a.d(t, {
                u: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        37869: function(e, t, a) {
            "use strict";
            a.d(t, {
                q: function() {
                    return getCeeEngine
                }
            });
            var s = a(3527)
              , n = a.n(s)
              , o = a(29983)
              , r = a(64300);
            function getCeeEngine(e=!1) {
                if (r.Q.ceeEngine && !e)
                    return r.Q.ceeEngine;
                r.Q.ceeEngine && e && r.Q.ceeEngine.kill();
                const t = n()({
                    enginePath: window.Config.pathToExplanationEngineWorker,
                    pathToWasmEngine: window.Config.pathToWasmExplanationEngine,
                    ceeMode: !0
                });
                return t.fetch.setTimeout(o.O.EngineTimeout),
                r.Q.ceeEngine = t,
                t
            }
        },
        64300: function(e, t, a) {
            "use strict";
            a.d(t, {
                Q: function() {
                    return o
                }
            });
            var s = a(54713)
              , n = a(67104);
            class CeeAnalysisModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.depth = 0,
                    this.evals = [],
                    this.hashes = [],
                    this.id = "",
                    this.onEval = ()=>{}
                    ,
                    this.startingFen = "",
                    this.moves = [],
                    this.variant = n.lA.Variants.Chess
                }
            }
            const o = {
                analyses: (0,
                s.BL)(CeeAnalysisModel, {
                    key: "id"
                }),
                ceeEngine: void 0,
                engines: [],
                queue: []
            }
        },
        75536: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return addPosition
                }
            });
            var s = a(64099)
              , n = a(84881);
            function addPosition({data: e, next: t, node: a, position: o}) {
                const r = (0,
                n.D)({
                    data: e,
                    next: t,
                    node: a,
                    position: o
                });
                if (r)
                    return s.F.positions.update(r)
            }
        },
        93594: function(e, t, a) {
            "use strict";
            a.d(t, {
                x: function() {
                    return runClientAnalysis
                }
            });
            var s = a(54713)
              , n = a(99208)
              , o = a(43153)
              , r = a(91047)
              , i = a(46979)
              , l = a(37869)
              , c = a(75536)
              , u = a(64099)
              , d = a(923)
              , h = a(651)
              , p = a(68635)
              , m = a(32614)
              , b = Object.defineProperty
              , g = Object.defineProperties
              , f = Object.getOwnPropertyDescriptors
              , v = Object.getOwnPropertySymbols
              , w = Object.prototype.hasOwnProperty
              , y = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? b(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            async function analyzeGame(e) {
                return new Promise(((t,a)=>{
                    var b;
                    const {WhiteElo: k, BlackElo: _} = (0,
                    d.j)().getHeaders()
                      , C = (0,
                    d.j)().getVariant();
                    (0,
                    i.P)();
                    (0,
                    l.q)().fetch({
                        action: "analysis",
                        moves: m.S.nodes.map(o.S),
                        startFen: (null == (b = m.S.nodes[0]) ? void 0 : b.beforeFen) || "",
                        variant: C,
                        options: {
                            WhiteElo: k,
                            BlackElo: _,
                            HandleContinuations: !0,
                            HandleContinuationsDepth: e,
                            ScoreWhiteToMove: !0,
                            SerializeLikeCEAC: !0,
                            UseDeclarativePositionCommand: !0
                        }
                    }, (function onDone(a) {
                        (0,
                        s.Uc)(u.F, {
                            analysisDepth: e,
                            CAPS: a.caps,
                            progress: 1,
                            isBasicAnalysis: !0,
                            tallies: a.tallies
                        }),
                        a.positions.slice(1).forEach(((e,t)=>(0,
                        c.F)({
                            next: a.positions[t + 1],
                            node: m.S.nodes[t],
                            position: e
                        }))),
                        t()
                    }
                    ), (function onError(t, s) {
                        (0,
                        r.T)(`CEE Error code ${t.code}: ${t.msg}`, (o = ((e,t)=>{
                            for (var a in t || (t = {}))
                                w.call(t, a) && __defNormalProp(e, a, t[a]);
                            if (v)
                                for (var a of v(t))
                                    y.call(t, a) && __defNormalProp(e, a, t[a]);
                            return e
                        }
                        )({}, t),
                        i = {
                            uciInputs: s,
                            depth: e
                        },
                        g(o, f(i)))),
                        (0,
                        n.x)(h.R[p.J.ErrorTypes.Engine].message),
                        a(t);
                        var o, i
                    }
                    ))
                }
                ))
            }
            var k = a(70962)
              , _ = a(72212)
              , C = a(39761)
              , T = a(79321);
            async function runClientAnalysis(e=k.A.DefaultDepths.Basic) {
                (0,
                T.G)(C.Q.AnalysisModes.Full),
                await analyzeGame(e),
                _.y.emit(k.A.Events.AnalysisComplete)
            }
        },
        82282: function(e, t, a) {
            "use strict";
            a.d(t, {
                u: function() {
                    return runFullAnalysis
                }
            });
            var s = a(54713)
              , n = a(5556)
              , o = a(92535)
              , r = a(91353)
              , i = a(91047)
              , l = a(70962)
              , c = a(37620)
              , u = a(64099)
              , d = a(76088)
              , h = a(67858)
              , p = a(60326);
            var m = a(93594);
            function hasGameAnalysis() {
                return Boolean(u.F.positions.length)
            }
            var b = a(3527)
              , g = a.n(b);
            var f = a(67988)
              , v = a(73972)
              , w = a(49059)
              , y = a(93705)
              , k = a(6194)
              , _ = a(39761)
              , C = a(1463)
              , T = a(79321)
              , S = a(98482)
              , x = a(96257)
              , E = a(32614)
              , O = a(92333)
              , A = a(57878)
              , M = a(93083)
              , P = a(24050)
              , j = a(12089)
              , z = a(53418);
            async function runFullAnalysis({depth: e, shouldSave: t, userInitiated: a}={}) {
                (0,
                T.G)(_.Q.AnalysisModes.Full);
                const b = null != e ? e : p.Ko.fullAnalysisDepth;
                if (a || M.G.tab && M.G.tab !== j.Y.Tabs.Review || ((0,
                P.K)(j.Y.Tabs.Review),
                window.history.pushState({
                    path: window.location.pathname
                }, "", `${window.location.pathname}?tab=review`)),
                !analysisExists())
                    if ((0,
                    s.Uc)(u.F, {
                        progress: .01
                    }),
                    !(0,
                    C.m)() && (0,
                    w.K)() && t && (0,
                    x.q)() && !h.X.noPersist ? await (0,
                    v.K)() : !(0,
                    C.m)() || y.k.FetchedSavedGameOnLoadGameTypes.includes(h.X.gameType) || hasGameAnalysis() || await (0,
                    f.i)(b),
                    analysisExists())
                        (0,
                        s.Uc)(u.F, {
                            progress: 1
                        });
                    else {
                        if ((0,
                        r.FR)("analysis_log_user_slowdowns") && p.Ko.fullAnalysisDepth && b <= l.A.DefaultDepths.Full && function logSlowAnalyses() {
                            const e = Date.now();
                            let t = !1;
                            const a = setInterval((()=>{
                                var s;
                                const n = null != (s = u.F.progressUpdatedAt) ? s : e;
                                if (!t && (0,
                                c.r)() && Date.now() > n + l.A.MsBeforeReportingSlowAnalysis)
                                    t = !0,
                                    (0,
                                    i.T)("Analysis slow progress", {
                                        gameId: h.X.gameId,
                                        settings: JSON.stringify(p.Ko),
                                        savedSelfAnalysis: JSON.stringify(d.h),
                                        initialPgn: h.X.initialPgn
                                    });
                                else if (1 === u.F.progress) {
                                    const t = Date.now();
                                    clearInterval(a),
                                    (0,
                                    i.T)("Analysis user wait report", {
                                        gameId: h.X.gameId,
                                        started: e,
                                        finished: t,
                                        timeTook: t - e
                                    })
                                }
                            }
                            ), 4e3)
                        }(),
                        (0,
                        S.p)())
                            return function onLocked() {
                                if ((0,
                                m.x)(),
                                z.E.get("isGuest"))
                                    return (0,
                                    o.Y)({
                                        slide: n._G.GUEST_MODAL_SLIDES.analysis
                                    });
                                (0,
                                O.h)(A.n.Types.Upgrade)
                            }();
                        (0,
                        k.B)({
                            depth: b,
                            pgn: E.S.pgn
                        })
                    }
                function analysisExists() {
                    return hasGameAnalysis() && Number(b) <= Number(u.F.analysisDepth) && function doMainLinesMatch(e, t) {
                        const a = g().createGame({
                            analysis: !0,
                            pgn: e
                        })
                          , s = g().createGame({
                            analysis: !0,
                            pgn: t
                        });
                        return !(!a || !s) && a.history().join() === s.history().join()
                    }(E.S.pgn, u.F.annotatedPgn)
                }
            }
        },
        70962: function(e, t, a) {
            "use strict";
            a.d(t, {
                A: function() {
                    return s
                }
            });
            var s, n = a(32305);
            (e=>{
                let t;
                var a;
                let s;
                (a = t = e.DefaultDepths || (e.DefaultDepths = {}))[a.Basic = 10] = "Basic",
                a[a.Full = 18] = "Full",
                (s = e.Events || (e.Events = {})).AnalysisComplete = "AnalysisComplete",
                e.MsBeforeReportingSlowAnalysis = 15e3,
                e.Messages = {
                    BadGame: (0,
                    n.dW)("Unacceptable game."),
                    Limit: (0,
                    n.dW)("You have reached the limit of concurrent analyses. Please wait for your other request to finish before starting new ones.")
                },
                e.MinimumMovesToRunAnalysis = 1
            }
            )(s || (s = {}))
        },
        72212: function(e, t, a) {
            "use strict";
            a.d(t, {
                y: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        89188: function(e, t, a) {
            "use strict";
            a.d(t, {
                j: function() {
                    return getLastBookPosition
                }
            });
            var s = a(64099);
            function getLastBookPosition() {
                return s.F.positions.find((e=>e.isLastBookMove))
            }
        },
        34104: function(e, t, a) {
            "use strict";
            a.d(t, {
                N: function() {
                    return getOrderedPositions
                }
            });
            var s = a(37481)
              , n = a(64099);
            function getOrderedPositions() {
                return (0,
                s.q)(n.F.positions.filter((e=>0 === e.ids.line && !e.fromClient)), "moveNumber")
            }
        },
        99293: function(e, t, a) {
            "use strict";
            function getPositionKey(e) {
                return `${e.fen}|${e.san}${e.ids ? `|${e.ids.line}` : ""}`
            }
            a.d(t, {
                g: function() {
                    return getPositionKey
                }
            })
        },
        26525: function(e, t, a) {
            "use strict";
            a.d(t, {
                b: function() {
                    return getPosition
                }
            });
            var s = a(99293)
              , n = a(64099);
            function getPosition(e) {
                if (!e)
                    return;
                let t = e;
                return e && "string" != typeof e && (t = (0,
                s.g)(e)),
                n.F.positions.find(t)
            }
        },
        72308: function(e, t, a) {
            "use strict";
            a.d(t, {
                W: function() {
                    return getSelectedPosition
                }
            });
            var s = a(26525)
              , n = a(32614);
            function getSelectedPosition() {
                if (n.S.selectedNode)
                    return (0,
                    s.b)(n.S.selectedNode)
            }
        },
        58819: function(e, t, a) {
            "use strict";
            a.d(t, {
                u: function() {
                    return isAnalysisComplete
                }
            });
            var s = a(64099);
            function isAnalysisComplete() {
                return 1 === s.F.progress
            }
        },
        37620: function(e, t, a) {
            "use strict";
            a.d(t, {
                r: function() {
                    return isAnalysisRunning
                }
            });
            var s = a(64099);
            function isAnalysisRunning() {
                return s.F.progress > 0 && s.F.progress < 1
            }
        },
        7984: function(e, t, a) {
            "use strict";
            a.d(t, {
                _: function() {
                    return shouldRunFullAnalysis
                }
            });
            var s = a(39761)
              , n = a(1463)
              , o = a(67858)
              , r = a(93083)
              , i = a(12089);
            function shouldRunFullAnalysis() {
                return r.G.autorun || (0,
                n.m)() && (!Object.values(i.Y.Tabs).includes(r.G.tab) || r.G.tab === i.Y.Tabs.Review) && o.X.gameType !== s.Q.GameTypes.PGN
            }
        },
        64099: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return s
                }
            });
            const s = new (a(34604).S)
        },
        37067: function(e, t, a) {
            "use strict";
            function formatAnalyzeGameProperties(e) {
                return {
                    analysisDepth: e.analysisDepth,
                    annotatedPgn: e.annotatedPgn,
                    arc: e.arc,
                    arcPlayerScenarios: e.arcPlayerScenarios,
                    averageDifference: e.avgDifference,
                    book: e.book,
                    bookPly: e.bookPly,
                    CAPS: e.CAPS,
                    gamePhases: e.gamePhases,
                    pieceMoves: e.pieceMoves,
                    playMayContinue: e.playMayContinue,
                    prediction: e.prediction,
                    startingFen: e.startingFen,
                    tallies: e.tallies,
                    themes: e.themes,
                    time: e.time
                }
            }
            a.d(t, {
                H: function() {
                    return formatAnalyzeGameProperties
                }
            })
        },
        25077: function(e, t, a) {
            "use strict";
            a.d(t, {
                M: function() {
                    return formatEval
                }
            });
            var s = a(3527)
              , n = a.n(s);
            function formatEval({fen: e, pv: t=[], pvSan: a=[]}) {
                if (function isPvString(e) {
                    return "string" == typeof e[0]
                }(t)) {
                    const a = n().createGame({
                        fen: e,
                        moves: t.join(" ")
                    });
                    if (a)
                        return {
                            pv: t,
                            pvSan: a.history()
                        }
                }
                return function isPvObject(e) {
                    return "object" == typeof e[0]
                }(t) ? t.reduce(((e,t)=>({
                    pv: [...e.pv, t.moveLan],
                    pvSan: [...e.pvSan, t.moveSan]
                })), {
                    pv: [],
                    pvSan: []
                }) : {
                    pv: t,
                    pvSan: a
                }
            }
        },
        84881: function(e, t, a) {
            "use strict";
            a.d(t, {
                D: function() {
                    return formatPosition
                }
            });
            var s = a(67104)
              , n = a(87307)
              , o = a(26908)
              , r = a(43153)
              , i = a(99293)
              , l = a(91353)
              , c = a(32614);
            function getSpeech(e, t) {
                return e.speech ? (0,
                l.FR)("analysis_speech_from_cee_v2") ? e.speech : c.S.userColor && t === (0,
                s.RS)(c.S.userColor) ? e.speech.personal : e.speech.impersonal : ""
            }
            var u = a(64099);
            var d = a(923)
              , h = a(37921)
              , p = a(84300)
              , m = a(51878)
              , b = a(57542)
              , g = a(76554)
              , f = Object.defineProperty
              , v = Object.defineProperties
              , w = Object.getOwnPropertyDescriptors
              , y = Object.getOwnPropertySymbols
              , k = Object.prototype.hasOwnProperty
              , _ = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? f(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    k.call(t, a) && __defNormalProp(e, a, t[a]);
                if (y)
                    for (var a of y(t))
                        _.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>v(e, w(t));
            function formatPosition({data: e={}, next: t, node: a, position: l}) {
                var c, f, v, w, y, k, _;
                if (!a || (0,
                r.S)(a) !== (null == (c = l.playedMove) ? void 0 : c.moveLan))
                    return;
                const C = function getClassification() {
                    const e = (0,
                    n.J)(l).key;
                    if (u.F.isBasicAnalysis && [o.x.Classifications.Types.GreatFind, o.x.Classifications.Types.Brilliant].includes(e))
                        return o.x.Classifications.Types.BestMove;
                    return e
                }()
                  , T = a.ply === u.F.bookPly
                  , S = function getPlayedMoveLine() {
                    var e;
                    const {fen: s} = a;
                    if (l.playedMove.eval) {
                        const t = l.playedMove;
                        return (null == (e = t.eval) ? void 0 : e.pv[0]) === l.playedMove.moveLan && t.eval.pv.splice(0, 1),
                        (0,
                        p.D)({
                            fen: s,
                            line: t
                        })
                    }
                    if (t)
                        return (0,
                        p.D)({
                            fen: s,
                            line: t.suggestedMove
                        });
                    return
                }()
                  , x = null != (v = (0,
                g.Q)({
                    classification: C,
                    position: l,
                    userColor: null != (f = (0,
                    m.D)()) ? f : null
                })) ? v : "";
                return __spreadValues({
                    analysisType: x,
                    beforeFen: null != (w = a.beforeFen) ? w : null,
                    ceacAnalysisTypes: l.analysisTypes,
                    classification: C,
                    color: a.color,
                    criticality: l.criticality,
                    difference: l.difference,
                    fen: a.fen,
                    fromClient: !1,
                    id: (0,
                    i.g)(a),
                    ids: a.ids,
                    isKeyMove: function getIsKeyMove(e) {
                        if (u.F.isBasicAnalysis || !(0,
                        h.i)())
                            return !1;
                        return T || function isKeyMove({classification: e, node: t, position: a}) {
                            var s, n;
                            return Boolean(!(null == (s = a.scenarios) ? void 0 : s.book) && (null == (n = a.scenarios) ? void 0 : n.isKeyMoment) && t.beforeFen && (0 !== a.difference || e !== o.x.Classifications.Types.BestMove))
                        }({
                            classification: C,
                            node: e,
                            position: l
                        })
                    }(a),
                    isLastBookMove: T,
                    moveNumber: a.moveNumber,
                    playedMove: __spreadProps(__spreadValues({}, l.playedMove), {
                        eval: S,
                        speech: getSpeech(l.playedMove, l.color)
                    }),
                    ply: (0,
                    b.X)({
                        node: a,
                        turn: (0,
                        s.SH)(a.color),
                        startingMoveNumber: (0,
                        d.j)().getStartingMoveNumber()
                    }),
                    san: a.san,
                    scenarios: null != (y = l.scenarios) ? y : {},
                    suggestedMove: __spreadProps(__spreadValues({}, l.suggestedMove), {
                        speech: getSpeech(l.suggestedMove, l.color)
                    }),
                    symbol: null != (k = l.symbol) ? k : null,
                    time: null != (_ = l.time) ? _ : null,
                    wholeMoveNumber: a.wholeMoveNumber
                }, e)
            }
        },
        61438: function(e, t, a) {
            "use strict";
            a.d(t, {
                A: function() {
                    return truncateLine
                }
            });
            var s = a(3775);
            function truncateLine({mateIn: e, pv: t=[], pvCutoff: a, pvSan: n=[], softLimit: o=5}) {
                const r = window.chesscom.features.includes("analysis_cee_cutoff")
                  , i = r && (0,
                s.hj)(a) ? a : function getPvCount(t) {
                    var a;
                    if (e)
                        return null;
                    if (null == (a = n[t]) ? void 0 : a.includes("x"))
                        return getPvCount(t + 1);
                    return t
                }(o);
                return {
                    pv: formatValue(t),
                    pvSan: formatValue(n)
                };
                function formatValue(e) {
                    return i || r ? e.slice(0, null != i ? i : 0) : e
                }
            }
        },
        75109: function(e, t, a) {
            "use strict";
            a.d(t, {
                I: function() {
                    return runMaxAnalysis
                }
            });
            var s = a(34497)
              , n = a(43153)
              , o = a(54752)
              , r = a.n(o)
              , i = a(78291)
              , l = a(68635)
              , c = a(71221);
            const u = 3e5;
            var d = a(12885)
              , h = a(923)
              , p = a(32614)
              , m = a(31443)
              , b = a(27523);
            async function runMaxAnalysis() {
                const e = window.chesscom.features.includes("new_max_analysis_endpoint")
                  , t = window.chesscom.features.includes("staging_max_analysis_endpoint")
                  , a = r()()
                  , o = (0,
                d.Q)();
                let g;
                e ? (g = m.s.Urls.NewMax,
                b.L.close(g)) : t && (g = m.s.Urls.StagingMax,
                b.L.close(g)),
                i.V.activeId = a,
                o ? o.id = a : i.V.lines.add({
                    id: a,
                    node: p.S.ids
                }),
                i.V.hasReceivedFirstEval = !1;
                const f = await (0,
                c.h)(g);
                i.V.initiatedAt = Date.now();
                const v = (0,
                h.j)().getCurrentFullLine()
                  , w = v.length ? {
                    fen: v[0].beforeFen,
                    moves: v.map((e=>(0,
                    n.S)(e))).join(" ")
                } : {
                    fen: p.S.fen
                };
                try {
                    const t = {
                        action: l.J.Actions.MaxAnalysis,
                        id: i.V.activeId,
                        position: w,
                        options: {
                            depth: 99,
                            engineType: i.V.engine,
                            maxDuration: 1e5,
                            noPersist: !0,
                            source: {
                                client: "web",
                                token: f.token
                            }
                        }
                    };
                    if (f.send(JSON.stringify(t)),
                    e)
                        return void (f.onclose = ()=>{}
                        );
                    !async function keepMaxAnalysisAlive(e) {
                        const t = await (0,
                        c.h)();
                        try {
                            i.V.keepAliveTimer = setInterval((function sendKeepAliveRequest() {
                                var a;
                                const s = Date.now() - (null != (a = i.V.initiatedAt) ? a : 0);
                                i.V.hasReceivedFirstEval && s < u && t.send(JSON.stringify({
                                    id: Math.floor(1e4 * Math.random()),
                                    executeForRequestId: e,
                                    action: l.J.Actions.KeepMaxAnalysis
                                }))
                            }
                            ), 2e3)
                        } catch (a) {
                            (0,
                            s.T)(a)
                        }
                    }(a)
                } catch (y) {
                    (0,
                    s.T)(y)
                }
            }
        },
        81763: function(e, t, a) {
            "use strict";
            a.d(t, {
                l: function() {
                    return stopMaxAnalysis
                }
            });
            var s = a(78291)
              , n = a(71221)
              , o = a(31443);
            function stopMaxAnalysis() {
                var e;
                s.V.activeId = void 0,
                s.V.hasReceivedFirstEval = !1,
                s.V.keepAliveTimer && (clearInterval(s.V.keepAliveTimer),
                s.V.keepAliveTimer = void 0),
                window.chesscom.features.includes("new_max_analysis_endpoint") && (null == (e = (0,
                n.h)(o.s.Urls.NewMax)) || e.then((e=>e.close())))
            }
        },
        50250: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                A: function() {
                    return s
                }
            }),
            (e=>{
                let t, a;
                (e=>{
                    let t;
                    var a;
                    (a = t = e.Options || (e.Options = {})).Latest = "latest",
                    a.Komodo13 = "komodo-13.1-linux",
                    a.KomodoMCTS = "komodo-mcts-2367",
                    a.StockfishNNUE = "stockfish12",
                    a.KomodoDragon = "komodo",
                    e.Default = "stockfish12"
                }
                )(t = e.Engine || (e.Engine = {})),
                (a = e.Events || (e.Events = {})).EngineChanged = "EngineChanged"
            }
            )(s || (s = {}))
        },
        28279: function(e, t, a) {
            "use strict";
            a.d(t, {
                y: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        12885: function(e, t, a) {
            "use strict";
            a.d(t, {
                Q: function() {
                    return getCurrentLine
                }
            });
            var s = a(78291)
              , n = a(32614);
            function getCurrentLine() {
                return s.V.lines.find((e=>e.node.line === n.S.ids.line && e.node.move === n.S.ids.move))
            }
        },
        64536: function(e, t, a) {
            "use strict";
            a.d(t, {
                L: function() {
                    return isMaxAnalysisRunning
                }
            });
            var s = a(78291);
            function isMaxAnalysisRunning() {
                return Boolean(s.V.activeId)
            }
        },
        78291: function(e, t, a) {
            "use strict";
            a.d(t, {
                V: function() {
                    return n
                }
            });
            var s = a(54713);
            class MaxAnalysisLineModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.depth = 0,
                    this.id = "",
                    this.node = {
                        line: -1,
                        move: -1
                    },
                    this.eval = {
                        pv: []
                    },
                    this.engineType = void 0
                }
            }
            const n = {
                activeId: void 0,
                cachedDepth: void 0,
                engine: a(60326).Ko.maxAnalysisEngine,
                hasReceivedFirstEval: !1,
                initiatedAt: void 0,
                lines: (0,
                s.BL)(MaxAnalysisLineModel, {
                    key: "id"
                })
            }
        },
        67988: function(e, t, a) {
            "use strict";
            a.d(t, {
                i: function() {
                    return attemptToLoadSavedAnalysis
                }
            });
            var s = a(57367)
              , n = a(63754)
              , o = a(54713)
              , r = a(75536)
              , i = a(70962)
              , l = a(72212)
              , c = a(64099)
              , u = a(37067)
              , d = a(32614)
              , h = Object.defineProperty
              , p = Object.defineProperties
              , m = Object.getOwnPropertyDescriptors
              , b = Object.getOwnPropertySymbols
              , g = Object.prototype.hasOwnProperty
              , f = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? h(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function updateAnalysisFromSaved(e) {
                var t;
                (0,
                o.Uc)(c.F, (t = ((e,t)=>{
                    for (var a in t || (t = {}))
                        g.call(t, a) && __defNormalProp(e, a, t[a]);
                    if (b)
                        for (var a of b(t))
                            f.call(t, a) && __defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, (0,
                u.H)(e)),
                p(t, m({
                    fromSaved: !0,
                    progress: 1
                })))),
                e.positions.forEach(((t,a)=>(0,
                r.F)({
                    next: e.positions[a + 1],
                    node: d.S.nodes[a - 1],
                    position: t
                }))),
                l.y.emit(i.A.Events.AnalysisComplete)
            }
            var v = a(76088)
              , w = a(94202)
              , y = a(923)
              , k = a(39761)
              , _ = a(67858)
              , C = a(12585)
              , T = a(93083)
              , S = a(24050)
              , x = a(12089)
              , E = a(3527)
              , O = a.n(E);
            function createPgnWithMergedTcn({headers: e, pgn: t, tcn: a}) {
                const s = O().createGame({
                    analysis: !0
                });
                if (s)
                    return s.loadPgn(t),
                    s.loadMoves(a, {
                        method: "promote"
                    }),
                    e && s.header(e),
                    s.pgn({})
            }
            async function attemptToLoadSavedAnalysis(e) {
                try {
                    const t = await (_.X.gameType === k.Q.GameTypes.Library ? async function fetchLibraryAnalysis() {
                        const {data: e} = await s.Z.get(n.Z.generate("web_analysis_game_callback_view", {
                            uuid: v.h.id
                        }));
                        return e
                    }() : async function fetchGameAnalysis() {
                        const {data: e} = await s.Z.get(n.Z.generate("web_analysis_game_callback_view_all", {
                            gameId: _.X.gameId,
                            type: _.X.gameType
                        }));
                        return e
                    }())
                      , {analysisLogExists: a, data: o, selfAnalysis: r} = t;
                    (a || (null == o ? void 0 : o.analysis)) && (C.d.uiLocked = !1),
                    function updateSelfAnalysis(e) {
                        var t;
                        if (!e)
                            return;
                        const a = null == (t = e.selfAnalysis) ? void 0 : t.pgn;
                        if (!a)
                            return;
                        v.h.selfAnalysis.pgn = a,
                        _.X.initialPgn = a,
                        a !== d.S.pgn && (0,
                        w.w)({
                            pgn: createPgnWithMergedTcn({
                                headers: d.S.headers,
                                pgn: a,
                                tcn: (0,
                                y.j)().getTCN()
                            })
                        }, {
                            selectOriginalNode: !0
                        })
                    }(r),
                    function updateFullAnalysis(t) {
                        if (!t)
                            return;
                        t.analysis && (!e || e <= t.analysis.analysisDepth) && (updateAnalysisFromSaved(t.analysis),
                        T.G.tab === x.Y.Tabs.Review && (0,
                        S.K)(x.Y.Tabs.Review))
                    }(o)
                } catch (t) {
                    console.error(t)
                }
            }
        },
        73972: function(e, t, a) {
            "use strict";
            a.d(t, {
                K: function() {
                    return saveSelfAnalysis
                }
            });
            var s = a(34497)
              , n = a(57308);
            var o = a(91353)
              , r = a(57367)
              , i = a(64647);
            const l = {
                success: (0,
                a(32305).dW)("Saved! This analysis can be shared using the updated URL in your browser.")
            };
            var c = a(76088)
              , u = a(923)
              , d = a(19107)
              , h = a(1463)
              , p = a(68517)
              , m = a(67858)
              , b = a(5080);
            async function saveSelfAnalysis() {
                const e = Boolean(c.h.selfAnalysis.url)
                  , t = (0,
                u.j)().getPGN();
                c.h.selfAnalysis.pgn = t,
                c.h.isSaving = !0;
                const a = (0,
                p.i)() ? i._.saveLibraryGameSelfAnalysis() : i._.saveSelfAnalysis();
                try {
                    (0,
                    d.G)();
                    const s = await async function postSelfAnalysis() {
                        const {data: e} = await r.Z.post(a, {
                            gameId: m.X.gameId,
                            pgn: t,
                            type: m.X.gameType,
                            url: c.h.selfAnalysis.url
                        });
                        return e
                    }();
                    c.h.selfAnalysis.url = s.url,
                    c.h.isSaving = !1,
                    function updateRoute({faUrl: t, id: a, type: s, url: n}) {
                        const r = (0,
                        h.m)();
                        let i = !1;
                        (0,
                        o.FR)("analysis_copy_game_pgn") && (i = r && a !== m.X.gameId);
                        !r && !(0,
                        p.i)() && a && s && (m.X.gameId = a,
                        m.X.gameType = s);
                        r && !i || e || (0,
                        p.i)() || (window.history.pushState({
                            page: n
                        }, "", t),
                        window.history.pushState({
                            path: window.location.pathname
                        }, "", `${window.location.pathname}?tab=${b.B.selectedTab}`))
                    }(s),
                    function showSuccess(e) {
                        (0,
                        n.w)({
                            duration: 1e4,
                            theme: "success",
                            content: e
                        })
                    }(l.success)
                } catch (g) {
                    return c.h.isSaving = !1,
                    (0,
                    s.T)(g)
                }
            }
        },
        49059: function(e, t, a) {
            "use strict";
            a.d(t, {
                K: function() {
                    return hasPgnChanged
                }
            });
            var s = a(76088)
              , n = a(32614);
            function hasPgnChanged() {
                return n.S.pgn !== s.h.selfAnalysis.pgn
            }
        },
        76088: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return o
                }
            });
            const {savedAnalysisId: s, url: n} = window.chesscom.analysis
              , o = {
                id: s,
                isSaving: !1,
                selfAnalysis: {
                    pgn: void 0,
                    url: n
                }
            }
        },
        94202: function(e, t, a) {
            "use strict";
            a.d(t, {
                w: function() {
                    return loadGame
                }
            });
            var s = a(99208)
              , n = a(3527)
              , o = a.n(n);
            var r = a(32305)
              , i = a(76088)
              , l = a(20063)
              , c = a(143)
              , u = a(923)
              , d = a(8488)
              , h = a(1463)
              , p = a(68517)
              , m = a(32614)
              , b = a(51247);
            function loadGame(e, {allowMultiplePgns: t=!0, selectOriginalNode: a=!1}={}) {
                try {
                    const s = m.S.ids;
                    if (!(0,
                    b.I)(e))
                        throw new Error((0,
                        r.dW)("Cannot load position because it is invalid. Every position must have exactly one king of each color, and the side to move must not be able to capture the enemy king."));
                    const n = (0,
                    u.j)();
                    if (e.pgn && t) {
                        const t = function splitPgns(e) {
                            const t = e.split(/\n\n/g);
                            return t.reduce(((e,a,s)=>(isHeader(a) || (isHeader(t[s - 1]) ? e.push(`${t[s - 1]}${a}`) : e.push(a)),
                            e)), []);
                            function isHeader(e) {
                                if (!e)
                                    return !1;
                                const {headers: t, moves: a} = o().pgnToJson(e, 0);
                                return t && !a.length
                            }
                        }(e.pgn);
                        if (t.length > 1)
                            return (0,
                            l.y)(t.map((e=>({
                                pgn: e
                            }))))
                    }
                    n.load(e),
                    a && n.selectNode(s.line, s.move),
                    ((0,
                    h.m)() || (0,
                    p.i)()) && (i.h.selfAnalysis.pgn = n.getPGN()),
                    (0,
                    c.W)(!0)
                } catch (n) {
                    (0,
                    s.x)(n.message),
                    (0,
                    d.C)()
                }
            }
        },
        20063: function(e, t, a) {
            "use strict";
            a.d(t, {
                y: function() {
                    return loadMultipleGames
                }
            });
            var s = a(3527)
              , n = a.n(s)
              , o = a(56022)
              , r = a(99208)
              , i = a(32305)
              , l = a(39655)
              , c = a(45157)
              , u = a(80018);
            function loadMultipleGames(e) {
                const t = [];
                e.forEach((e=>{
                    var a;
                    try {
                        if (!(null == e ? void 0 : e.pgn))
                            return;
                        const s = n().pgnToJson(e.pgn, 0);
                        if (!(null == s ? void 0 : s.headers))
                            return void t.push(e);
                        c.p.analyses.add({
                            id: null != (a = e.id) ? a : (0,
                            o.g)(),
                            title: (0,
                            u.h)(s.headers),
                            pgn: e.pgn,
                            url: e.url
                        })
                    } catch (s) {
                        t.push(e)
                    }
                }
                )),
                t.length && (0,
                r.x)((0,
                i.dW)("Please note that %number% of the PGNs failed to load.", {
                    "%number%": t.length
                })),
                c.p.analyses[0] && (0,
                l.Y)(c.p.analyses[0].id)
            }
        },
        39655: function(e, t, a) {
            "use strict";
            a.d(t, {
                Y: function() {
                    return loadSelfAnalysis
                }
            });
            var s = a(34604)
              , n = a(64099)
              , o = a(94202)
              , r = a(45157);
            function loadSelfAnalysis(e) {
                const t = r.p.analyses.find(e);
                t && (t.isLibraryCollection() ? window.location.href = t.url : (r.p.selectedSelfAnalysis = t.id,
                Object.assign(n.F, new s.S),
                (0,
                o.w)({
                    pgn: t.pgn
                })))
            }
        },
        93705: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return s
                }
            });
            var s, n = a(39761);
            (e=>{
                let t;
                let a;
                (t = e.Cache || (e.Cache = {})).Key = "self_analysis_pgn",
                (e=>{
                    let t;
                    var a;
                    let s;
                    var n;
                    (a = t = e.Castling || (e.Castling = {})).K = "K",
                    a.Q = "Q",
                    a.k = "k",
                    a.q = "q",
                    (n = s = e.Tabs || (e.Tabs = {})).LoadFromArchive = "LoadFromArchive",
                    n.LoadFromCache = "LoadFromCache",
                    n.LoadFromFEN = "LoadFromFEN",
                    n.LoadFromLibrary = "LoadFromLibrary",
                    n.LoadFromPGN = "LoadFromPGN",
                    n.SetupPosition = "SetupPosition"
                }
                )(a = e.Setup || (e.Setup = {})),
                e.FetchedSavedGameOnLoadGameTypes = [n.Q.GameTypes.Library, n.Q.GameTypes.PGN]
            }
            )(s || (s = {}))
        },
        143: function(e, t, a) {
            "use strict";
            a.d(t, {
                W: function() {
                    return setLoaded
                }
            });
            var s = a(45157);
            function setLoaded(e) {
                s.p.isLoaded = e
            }
        },
        45157: function(e, t, a) {
            "use strict";
            a.d(t, {
                p: function() {
                    return n
                }
            });
            var s = a(54713);
            class SelfAnalysisModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.id = "",
                    this.pgn = null,
                    this.title = "",
                    this.url = null
                }
                isLibraryCollection() {
                    return Boolean(this.url)
                }
            }
            const n = {
                analyses: (0,
                s.BL)(SelfAnalysisModel, {
                    key: "id"
                }),
                isLoaded: !1,
                selectedSelfAnalysis: void 0,
                selectedSetupTab: void 0
            }
        },
        80018: function(e, t, a) {
            "use strict";
            function buildTitle(e) {
                return `${e.White} - ${e.Black} (${e.Result})`
            }
            a.d(t, {
                h: function() {
                    return buildTitle
                }
            })
        },
        81057: function(e, t, a) {
            "use strict";
            a.d(t, {
                x: function() {
                    return getBoardState
                }
            });
            var s = a(54173)
              , n = a(594);
            function getActiveChessboardWithState() {
                const e = s.f.getActiveChessboardId();
                if (!e)
                    throw new Error("No active chessboard");
                return function getChessboardWithState(e) {
                    return n.q.chessboards[`${e}`]
                }(e)
            }
            function getBoardState() {
                return getActiveChessboardWithState().state
            }
        },
        923: function(e, t, a) {
            "use strict";
            a.d(t, {
                j: function() {
                    return getGameAPI
                }
            });
            var s = a(63641);
            function getGameAPI() {
                return (0,
                s.g)().game
            }
        },
        19107: function(e, t, a) {
            "use strict";
            a.d(t, {
                G: function() {
                    return setAnalysisMode
                }
            });
            var s = a(6454)
              , n = a(923)
              , o = a(39761)
              , r = a(1463)
              , i = a(68517)
              , l = a(67858);
            function canModifyExistingMovesOnMainLine() {
                return (0,
                i.i)() || function isPGNGame() {
                    return l.X.gameType === o.Q.GameTypes.PGN
                }() || !(0,
                r.m)()
            }
            function setAnalysisMode() {
                const e = (0,
                n.j)();
                e.setMode(s.W);
                const t = e.getMode();
                t.setOption("canAddMovesToMainLine", function canAddMovesToMainLine() {
                    return !(0,
                    r.m)() && !(0,
                    i.i)() || [o.Q.GameTypes.Library, o.Q.GameTypes.PGN].includes(l.X.gameType)
                }()),
                t.setOption("canModifyExistingMovesOnMainLine", canModifyExistingMovesOnMainLine())
            }
        },
        88847: function(e, t, a) {
            "use strict";
            a.d(t, {
                j: function() {
                    return s
                }
            });
            const s = {
                isGamePreviewActive: !1,
                isInitialized: !1
            }
        },
        70994: function(e, t, a) {
            "use strict";
            a.d(t, {
                D: function() {
                    return createCache
                }
            });
            var s = a(61681);
            function createCache(e, t, a) {
                var n;
                const o = Object.keys(null != a ? a : t)
                  , r = null != (n = s.Z.get(e)) ? n : {}
                  , i = o.reduce(((e,a)=>{
                    var s;
                    const n = null != (s = r[a]) ? s : t[a];
                    return e[a] = n,
                    t[a] = n,
                    e
                }
                ), {})
                  , l = new Proxy(t,{
                    get: (e,t)=>e[t],
                    set(t, n, r) {
                        var l;
                        return o.includes(n) && (i[n] = r),
                        a && !(null == (l = a[n]) ? void 0 : l.call(a, r, i)) || function updateCache() {
                            s.Z.set(e, i)
                        }(),
                        Reflect.set(t, n, r)
                    }
                });
                return {
                    getAll: function getAll() {
                        return l
                    },
                    getCached: function getCached() {
                        return s.Z.get(e)
                    }
                }
            }
        },
        6194: function(e, t, a) {
            "use strict";
            a.d(t, {
                B: function() {
                    return analyze
                }
            });
            var s = a(54713)
              , n = a(34497)
              , o = a(91353)
              , r = a(57367)
              , i = a(64099)
              , l = a(76088)
              , c = a(68635)
              , u = a(67858)
              , d = a(49815)
              , h = a(51878)
              , p = a(60326)
              , m = a(71221)
              , b = Object.defineProperty
              , g = Object.getOwnPropertySymbols
              , f = Object.prototype.hasOwnProperty
              , v = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? b(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    f.call(t, a) && __defNormalProp(e, a, t[a]);
                if (g)
                    for (var a of g(t))
                        v.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            ;
            async function analyze({depth: e=p.Ko.fullAnalysisDepth, options: t={}, pgn: a}) {
                const b = await (0,
                m.h)();
                try {
                    const n = {
                        action: c.J.Actions.AnalyzeGame,
                        game: {
                            pgn: a
                        },
                        options: __spreadValues({
                            caps2: !0,
                            depth: Number(e),
                            engineType: (0,
                            o.FR)("analysis_ceac_stockfish_15") ? d.Y.Engine.FullAnalysisOptions.Stockfish15 : d.Y.Engine.FullAnalysisOptions.Stockfish12,
                            source: {
                                gameId: u.X.gameId,
                                gameType: u.X.gameType,
                                url: l.h.selfAnalysis.url,
                                token: b.token,
                                client: "web"
                            },
                            tep: {
                                ceeDebug: (0,
                                o.FR)("analysis_cee_debug"),
                                classificationv2: !0
                            }
                        }, t)
                    };
                    if ((0,
                    o.FR)("ceac_ceem_lang_option")) {
                        const e = window.chesscom.analysis.ceeSupportedLocales.includes(window.context.i18n.locale) ? window.context.i18n.locale : "en_US";
                        n.options.tep = Object.assign(n.options.tep || {}, {
                            lang: "pt_BR" === window.context.i18n.locale ? "pt_PT" : e
                        })
                    }
                    (0,
                    o.FR)("cee_experimental") && (n.options.tep = Object.assign(n.options.tep || {}, {
                        ceemPreproduction: !0
                    })),
                    (0,
                    o.FR)("analysis_speech_from_cee_v2") && (n.options.tep = Object.assign(n.options.tep || {}, {
                        speechv2: !0,
                        userColor: (0,
                        h.D)()
                    })),
                    (0,
                    o.FR)("analysis_staging_shadow_request") && r.Z.post(c.J.ShadowPostUrl, n),
                    window.chesscom.features.includes("analysis_miss_classification") && (n.options.tep = Object.assign(n.options.tep || {}, {
                        classificationv3: !0
                    }),
                    delete n.options.tep.classificationv2);
                    try {
                        n.options.source.userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone
                    } catch (g) {}
                    n.options.depth >= 30 && (n.options.priority = "low"),
                    (0,
                    s.Uc)(i.F, {
                        analysisDepth: e
                    }),
                    b.send(JSON.stringify(n))
                } catch (f) {
                    (0,
                    n.T)(f)
                }
            }
        },
        651: function(e, t, a) {
            "use strict";
            a.d(t, {
                R: function() {
                    return o
                }
            });
            var s = a(32305)
              , n = a(68635);
            const o = {
                [n.J.ErrorTypes.AtLimit]: {
                    key: n.J.ErrorTypes.AtLimit,
                    message: (0,
                    s.dW)("You have reached the limit of concurrent analyses. Please wait for your other request to finish before starting new ones."),
                    type: "At Limit"
                },
                [n.J.ErrorTypes.BadGame]: {
                    key: n.J.ErrorTypes.BadGame,
                    message: (0,
                    s.dW)("Unacceptable game."),
                    type: "Unacceptable Game"
                },
                [n.J.ErrorTypes.Engine]: {
                    key: n.J.ErrorTypes.Engine,
                    message: (0,
                    s.dW)("Engine error. Please try again later."),
                    type: "Engine errored"
                },
                [n.J.ErrorTypes.Network]: {
                    key: n.J.ErrorTypes.Network,
                    message: (0,
                    s.dW)("We are having some trouble connecting to the server right now... Try again when you have a better connection."),
                    type: "Network Error"
                },
                [n.J.ErrorTypes.NoMoves]: {
                    key: n.J.ErrorTypes.NoMoves,
                    message: (0,
                    s.dW)("Sorry, you can't analyze a game that does not have any moves."),
                    type: "Missing moves"
                },
                [n.J.ErrorTypes.Upgrade]: {
                    key: n.J.ErrorTypes.Upgrade,
                    message: (0,
                    s.dW)("Sorry, you must upgrade your account before running this analysis."),
                    type: "Must Upgrade"
                },
                [n.J.ErrorTypes.UnsupportedVariant]: {
                    key: n.J.ErrorTypes.UnsupportedVariant,
                    message: (0,
                    s.dW)("This game variant is not supported for analysis."),
                    type: "Unsupported Variant"
                }
            }
        },
        68635: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                J: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                let s;
                var n;
                let o;
                var r;
                let i;
                var l;
                let c, u;
                var d;
                e.Name = "ceac",
                e.ShadowPostUrl = "https://analysis-staging.chess.com",
                (a = t = e.Actions || (e.Actions = {})).AnalyzeGame = "gameAnalysis",
                a.Caps = "caps",
                a.KeepMaxAnalysis = "keepMaxAnalysis",
                a.MaxAnalysis = "maxAnalysis",
                (n = s = e.Authenication || (e.Authenication = {})).Realm = "service",
                n.Codename = "analysis",
                (r = o = e.Events || (e.Events = {})).AnalysisStream = "AnalysisStream",
                r.CAPSStream = "CAPSStream",
                (l = i = e.ErrorTypes || (e.ErrorTypes = {})).AtLimit = "AtLimit",
                l.BadGame = "BadGame",
                l.Engine = "Engine",
                l.Network = "Network",
                l.NoMoves = "NoMoves",
                l.Upgrade = "Upgrade",
                l.UnsupportedVariant = "UnsupportedVariant",
                (e=>{
                    let t;
                    var a;
                    let s, n;
                    var o;
                    let r;
                    var i;
                    (a = t = e.ArcPlayerScenarios || (e.ArcPlayerScenarios = {})).DrawEven = "drawEven",
                    a.DrawLosing = "drawLosing",
                    a.DrawWinning = "drawWinning",
                    a.LossLosing = "lossLosing",
                    a.LossWinningFlag = "lossWinningFlag",
                    a.WinLosingFlag = "winLosingFlag",
                    a.WinWinning = "winWinning",
                    (e=>{
                        let t;
                        var a;
                        let s;
                        var n;
                        let o;
                        var r;
                        (a = t = e.Categories || (e.Categories = {})).Bad = "bad",
                        a.Good = "good",
                        (n = s = e.Phrases || (e.Phrases = {})).Impersonal = "impersonal",
                        n.Personal = "personal",
                        (r = o = e.ResponseTypes || (e.ResponseTypes = {})).Best = "best",
                        r.Played = "played"
                    }
                    )(s = e.AnalysisTypes || (e.AnalysisTypes = {})),
                    (o = n = e.PieceKeys || (e.PieceKeys = {})).King = "K",
                    o.Queen = "Q",
                    o.Rook = "R",
                    o.Bishop = "B",
                    o.Knight = "N",
                    o.Pawn = "P",
                    (i = r = e.GameArcs || (e.GameArcs = {})).Balanced = "balanced",
                    i.Rough = "rough",
                    i.Sharp = "sharp",
                    i.Smooth = "smooth",
                    i.Sudden = "sudden",
                    i.ThrowAway = "throwAway",
                    i.Wild = "wild"
                }
                )(c = e.Response || (e.Response = {})),
                (d = u = e.StreamTypes || (e.StreamTypes = {})).Analyze = "analyzeGame",
                d.Done = "done",
                d.Error = "error",
                d.MaxAnalysisEval = "eval",
                d.MissingMoves = "Missing moves",
                d.Progress = "progress",
                d.Reanalyzing = "reanalyzing",
                d.Limit = "limit reached",
                d.BadGame = "Unacceptable game",
                d.UnsupportedVariant = "Unsupported variant"
            }
            )(s || (s = {}))
        },
        67866: function(e, t, a) {
            "use strict";
            a.d(t, {
                z: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        10268: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                G: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                let s;
                var n;
                let o;
                let r;
                var i;
                let l;
                var c;
                e.ColumnWidth = 12,
                e.Mount = "charts-component",
                e.Height = 162,
                e.MinimumPositions = 60,
                (a = t = e.Events || (e.Events = {})).ClickNode = "click-node",
                a.ChangeActiveTab = "change-active-tab",
                a.ToggleCharts = "toggle-charts",
                (n = s = e.Limits || (e.Limits = {}))[n.BestMove = 3] = "BestMove",
                n[n.Criticality = 400] = "Criticality",
                n[n.GameArc = 5.75] = "GameArc",
                n[n.Score = 5] = "Score",
                n[n.Time = 200] = "Time",
                (o = e.BestMove || (e.BestMove = {})).Offset = 55,
                (i = r = e.Themes || (e.Themes = {})).RowHeight = 25,
                i.ClassName = "highcharts-themes",
                (c = l = e.Types || (e.Types = {})).BestMove = "best-move",
                c.Criticality = "criticality",
                c.Score = "score",
                c.Time = "time",
                c.Themes = "themes"
            }
            )(s || (s = {}))
        },
        45156: function(e, t, a) {
            "use strict";
            a.d(t, {
                e: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        8488: function(e, t, a) {
            "use strict";
            a.d(t, {
                C: function() {
                    return resetAnalysis
                }
            });
            var s = a(6454)
              , n = a(64099)
              , o = a(45157)
              , r = a(923)
              , i = a(88847)
              , l = a(85571);
            function resetAnalysis() {
                const e = (0,
                r.j)();
                i.j.isGamePreviewActive = !0,
                e.setMode(s.W),
                e.resetGame(),
                i.j.isGamePreviewActive = !1,
                o.p.isLoaded = !1,
                o.p.selectedSetupTab = void 0,
                l.v.engineEnabled = !0,
                n.F.progress = 0
            }
        },
        39761: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                Q: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                let s;
                var n;
                let o;
                (a = t = e.AnalysisModes || (e.AnalysisModes = {})).Full = "full",
                a.Self = "self",
                (n = s = e.GameTypes || (e.GameTypes = {})).Daily = "daily",
                n.Library = "library",
                n.Live = "live",
                n.Master = "master",
                n.PGN = "pgn",
                n.OTB = "otb",
                n.VsComputer = "computer",
                (o = e.Events || (e.Events = {})).SetAnalysisMode = "setAnalysisMode"
            }
            )(s || (s = {}))
        },
        72922: function(e, t, a) {
            "use strict";
            a.d(t, {
                s: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        1463: function(e, t, a) {
            "use strict";
            a.d(t, {
                m: function() {
                    return hasGameRecord
                }
            });
            var s = a(67858);
            function hasGameRecord() {
                return Boolean(s.X.gameId && s.X.gameType)
            }
        },
        15350: function(e, t, a) {
            "use strict";
            a.d(t, {
                B: function() {
                    return hasUsers
                }
            });
            var s = a(39761)
              , n = a(67858);
            function hasUsers() {
                return [s.Q.GameTypes.Daily, s.Q.GameTypes.Live].includes(n.X.gameType)
            }
        },
        68517: function(e, t, a) {
            "use strict";
            a.d(t, {
                i: function() {
                    return isLibraryGame
                }
            });
            var s = a(39761)
              , n = a(67858);
            function isLibraryGame() {
                return n.X.gameType === s.Q.GameTypes.Library
            }
        },
        79321: function(e, t, a) {
            "use strict";
            a.d(t, {
                G: function() {
                    return setAnalysisMode
                }
            });
            var s = a(39761)
              , n = a(72922)
              , o = a(67858);
            function setAnalysisMode(e) {
                o.X.analysisMode !== e && (o.X.analysisMode = e,
                n.s.emit(s.Q.Events.SetAnalysisMode, e))
            }
        },
        67858: function(e, t, a) {
            "use strict";
            a.d(t, {
                X: function() {
                    return h
                }
            });
            var s, n, o, r, i, l = a(39761);
            const {analysis: c} = window.chesscom
              , {noPersist: u, timeControl: d} = null != (s = c.extraGameData) ? s : {}
              , h = {
                analysisMode: l.Q.AnalysisModes.Self,
                gameId: null != (n = c.gameId) ? n : void 0,
                gameType: null != (o = c.gameType) ? o : l.Q.GameTypes.OTB,
                initialFen: null != (r = c.fen) ? r : void 0,
                initialPgn: null != (i = c.pgn) ? i : void 0,
                noPersist: null != u && u,
                timeControl: null != d && d
            }
        },
        57634: function(e, t, a) {
            "use strict";
            a.d(t, {
                B: function() {
                    return enableEngine
                }
            });
            var s = a(42203)
              , n = a(54713)
              , o = a(62205)
              , r = a(86833);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            var i = a(85571);
            function enableEngine(e) {
                i.v.engineEnabled !== e && (i.v.engineEnabled = e,
                e ? async function startEvaluation() {
                    await (0,
                    n.tL)((()=>a.e(813).then(a.bind(a, 75813)))),
                    (0,
                    o.xi)({
                        chessboard: r.a.getActiveChessboard()
                    })
                }() : (!function stopEvaluation() {
                    (0,
                    o.HA)()
                }(),
                s.H.emit("evaluation.update")))
            }
        },
        87481: function(e, t, a) {
            "use strict";
            a.d(t, {
                h$: function() {
                    return w
                }
            });
            var s = a(3527)
              , n = a.n(s)
              , o = a(32305)
              , r = a(49815)
              , i = Object.defineProperty
              , l = Object.defineProperties
              , c = Object.getOwnPropertyDescriptors
              , u = Object.getOwnPropertySymbols
              , d = Object.prototype.hasOwnProperty
              , h = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? i(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    d.call(t, a) && __defNormalProp(e, a, t[a]);
                if (u)
                    for (var a of u(t))
                        h.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>l(e, c(t));
            const {pathToNonWasmKomodo: p, threadedEnginePaths: m, pathToExplanationEngineWorker: b, pathToWasmExplanationEngine: g, pathToBookSmall: f} = window.Config
              , v = {
                name: n().supportsMultithreading() ? "Stockfish 15" : "Stockfish 11",
                description: n().supportsMultithreading() ? (0,
                o.dW)("faster") : "",
                paths: {
                    engines: {
                        multiThreaded: {
                            loader: m.stockfish.multiThreaded.loader,
                            engine: m.stockfish.multiThreaded.engine
                        },
                        singleThreaded: {
                            loader: m.stockfish.singleThreaded.loader,
                            engine: m.stockfish.singleThreaded.engine
                        },
                        asm: m.stockfish.asm
                    },
                    pathToBook: f
                }
            }
              , w = {
                [r.Y.Engine.Keys.Stockfish]: __spreadValues({}, v),
                [r.Y.Engine.Keys.StockfishNNUE]: __spreadProps(__spreadValues({}, v), {
                    name: "Stockfish 15 NNUE",
                    description: (0,
                    o.dW)("stronger, %filesize%", {
                        "%filesize%": "45MB"
                    }),
                    paths: __spreadProps(__spreadValues({}, v.paths), {
                        settings: {
                            EvalFile: m.stockfish.multiThreaded.nnue,
                            Threads: (navigator.hardwareConcurrency / 2).toString(),
                            [r.Y.Settings.UseNNUE]: "true"
                        }
                    }),
                    multithreadingRequired: !0
                }),
                [r.Y.Engine.Keys.Komodo]: {
                    name: "Komodo 2706",
                    paths: {
                        pathToEngineWorker: b,
                        pathToWasmEngine: g,
                        pathToNonWasmEngine: p
                    }
                },
                [r.Y.Engine.Keys.Off]: {
                    name: (0,
                    o.dW)("Engine Off")
                }
            };
            r.Y.Engine.FullAnalysisOptions.Latest,
            r.Y.Engine.FullAnalysisOptions.Latest,
            r.Y.Engine.FullAnalysisOptions.Stockfish12,
            r.Y.Engine.FullAnalysisOptions.Stockfish12
        },
        49815: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                Y: function() {
                    return s
                }
            }),
            (e=>{
                let t, a;
                e.MaxLines = 5,
                (e=>{
                    let t;
                    var a;
                    let s;
                    var n;
                    (a = t = e.Keys || (e.Keys = {})).Komodo = "KOMODO",
                    a.Stockfish = "STOCKFISH",
                    a.StockfishNNUE = "STOCKFISH (NNUE)",
                    a.Off = "OFF",
                    e.Default = "STOCKFISH",
                    (n = s = e.FullAnalysisOptions || (e.FullAnalysisOptions = {})).Latest = "latest",
                    n.Stockfish12 = "stockfish12",
                    n.Stockfish15 = "stockfish15"
                }
                )(t = e.Engine || (e.Engine = {})),
                (a = e.Settings || (e.Settings = {})).UseNNUE = "Use NNUE"
            }
            )(s || (s = {}))
        },
        85571: function(e, t, a) {
            "use strict";
            a.d(t, {
                v: function() {
                    return s
                }
            });
            const s = {
                activeFens: [],
                engineEnabled: void 0,
                engineName: "",
                evaluation: (0,
                a(22643).y0)()
            }
        },
        37921: function(e, t, a) {
            "use strict";
            a.d(t, {
                i: function() {
                    return canViewCompleteAnalysis
                }
            });
            var s = a(64099)
              , n = a(12585);
            function canViewCompleteAnalysis() {
                return !s.F.isBasicAnalysis || n.d.canViewCompleteBasicAnalysis
            }
        },
        98482: function(e, t, a) {
            "use strict";
            a.d(t, {
                p: function() {
                    return isLocked
                }
            });
            var s = a(12585);
            function isLocked() {
                return !s.d.canCreate && s.d.uiLocked
            }
        },
        96257: function(e, t, a) {
            "use strict";
            a.d(t, {
                q: function() {
                    return userCanSave
                }
            });
            var s = a(53418);
            function userCanSave() {
                return s.E.checkMembershipStatus("isPremium")
            }
        },
        12585: function(e, t, a) {
            "use strict";
            a.d(t, {
                d: function() {
                    return n
                }
            });
            const {analysis: s} = window.chesscom
              , n = {
                canAddToLibrary: Boolean(s.canBookmark),
                canSaveLibraryGames: Boolean(!s.libraryLocked),
                canConfigure: Boolean(s.canConfigure),
                canCreate: Boolean(s.canCreate),
                canViewCoachCommentary: Boolean(s.canViewCoachCommentary),
                canViewCompleteBasicAnalysis: Boolean(s.canViewCompleteBasicAnalysis),
                uiLocked: Boolean(s.locked)
            }
        },
        20318: function(e, t, a) {
            "use strict";
            a.d(t, {
                x: function() {
                    return s
                }
            });
            var s, n, o = a(26908);
            (n = s || (s = {})).NodeLimit = 8,
            n.IgnoreBestMoveClassifications = [o.x.Classifications.Types.Book, o.x.Classifications.Types.Brilliant, o.x.Classifications.Types.GreatFind, o.x.Classifications.Types.Forced]
        },
        23624: function(e, t, a) {
            "use strict";
            a.d(t, {
                u: function() {
                    return formatSuggestedMoveAsCeacPosition
                }
            });
            var s = a(67104)
              , n = a(26908)
              , o = a(91353)
              , r = a(84300)
              , i = Object.defineProperty
              , l = Object.defineProperties
              , c = Object.getOwnPropertyDescriptors
              , u = Object.getOwnPropertySymbols
              , d = Object.prototype.hasOwnProperty
              , h = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? i(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    d.call(t, a) && __defNormalProp(e, a, t[a]);
                if (u)
                    for (var a of u(t))
                        h.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>l(e, c(t));
            function formatSuggestedMoveAsCeacPosition({position: e, node: t}) {
                var a;
                const i = (0,
                o.FR)("analysis_speech_from_cee_v2") ? e.suggestedMove.speech : {
                    personal: e.suggestedMove.speech,
                    impersonal: e.suggestedMove.speech
                };
                return {
                    analysisTypes: e.ceacAnalysisTypes,
                    classificationName: n.x.Classifications.CeacTypes.Best,
                    color: (0,
                    s.RS)(t.color),
                    difference: 0,
                    playedMove: __spreadProps(__spreadValues({}, e.suggestedMove), {
                        eval: (0,
                        r.D)({
                            fen: t.fen,
                            line: __spreadProps(__spreadValues({}, e.suggestedMove), {
                                eval: {
                                    pv: e.suggestedMove.eval.pv.slice(1),
                                    pvCutoff: null != (a = e.suggestedMove.eval.pvCutoff) ? a : 0
                                }
                            })
                        }),
                        speech: i
                    }),
                    scenarios: {},
                    suggestedMove: __spreadProps(__spreadValues({}, e.suggestedMove), {
                        speech: i
                    })
                }
            }
        },
        50653: function(e, t, a) {
            "use strict";
            a.d(t, {
                X: function() {
                    return getBestMoveFenAndSan
                }
            });
            var s = a(3527)
              , n = a.n(s);
            function getBestMoveFenAndSan({beforeFen: e, moveLan: t}) {
                const {fen: a, history: s} = n().createGame({
                    fen: e,
                    moves: [t]
                });
                return {
                    fen: a(),
                    san: s()[0]
                }
            }
        },
        84300: function(e, t, a) {
            "use strict";
            a.d(t, {
                D: function() {
                    return getEval
                }
            });
            var s = a(25077)
              , n = a(61438)
              , o = Object.defineProperty
              , r = Object.defineProperties
              , i = Object.getOwnPropertyDescriptors
              , l = Object.getOwnPropertySymbols
              , c = Object.prototype.hasOwnProperty
              , u = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? o(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    c.call(t, a) && __defNormalProp(e, a, t[a]);
                if (l)
                    for (var a of l(t))
                        u.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
            ;
            function getEval({fen: e, line: t, nodeLimit: a}) {
                var o;
                const {mateIn: l, eval: c} = t
                  , {pv: u=[], pvCutoff: d} = c
                  , h = (0,
                n.A)((p = __spreadValues({}, (0,
                s.M)({
                    fen: e,
                    pv: u
                })),
                r(p, i({
                    mateIn: l,
                    pvCutoff: d,
                    softLimit: a
                }))));
                var p;
                return __spreadValues(__spreadValues({}, null != (o = t.eval) ? o : {}), h)
            }
        },
        58714: function(e, t, a) {
            "use strict";
            a.d(t, {
                X: function() {
                    return b
                },
                Z: function() {
                    return m
                }
            });
            var s = a(32305)
              , n = a(70962)
              , o = a(32614);
            var r, i = a(58819), l = a(37620), c = a(64099), u = a(45157), d = a(1463), h = a(85571), p = a(12585);
            (e=>{
                let t;
                (e=>{
                    let t;
                    var a;
                    let s;
                    var n;
                    (a = t = e.Types || (e.Types = {})).FlipBoard = "FlipBoard",
                    a.GameReview = "GameReview",
                    a.NewAnalysis = "NewAnalysis",
                    a.OpenShare = "OpenShare",
                    a.Practice = "Practice",
                    a.SetUpPosition = "SetUpPosition",
                    a.ToggleCharts = "ToggleCharts",
                    a.ToggleLibrary = "ToggleLibrary",
                    (n = s = e.Regions || (e.Regions = {})).Left = "left",
                    n.Right = "right"
                }
                )(t = e.Secondary || (e.Secondary = {}))
            }
            )(r || (r = {}));
            const m = {
                [r.Secondary.Types.ToggleCharts]: {
                    event: "toggle-charts",
                    icon: "graphs",
                    tooltip: (0,
                    s.dW)("Toggle Charts"),
                    show: ()=>(0,
                    i.u)() && !c.F.isBasicAnalysis
                },
                [r.Secondary.Types.FlipBoard]: {
                    event: "flip-board",
                    icon: "repeat",
                    tooltip: (0,
                    s.dW)("Flip Board"),
                    show: ()=>!0
                },
                [r.Secondary.Types.SetUpPosition]: {
                    event: "set-up-position",
                    icon: "chess-pawn-rook",
                    tooltip: (0,
                    s.dW)("Set Up Position"),
                    show: ()=>u.p.isLoaded && !(0,
                    d.m)()
                },
                [r.Secondary.Types.NewAnalysis]: {
                    event: "new-analysis",
                    icon: "plus",
                    tooltip: (0,
                    s.dW)("New Analysis"),
                    show: ()=>!0
                },
                [r.Secondary.Types.GameReview]: {
                    event: "game-review",
                    icon: "perfect",
                    tooltip: (0,
                    s.dW)("Game Review"),
                    show: ()=>!(0,
                    l.r)() && !(0,
                    i.u)() && function canRunFullAnalysis() {
                        return o.S.nodes.length >= n.A.MinimumMovesToRunAnalysis
                    }()
                },
                [r.Secondary.Types.ToggleLibrary]: {
                    event: "toggle-library",
                    icon: "library-add",
                    tooltip: (0,
                    s.dW)("Add to Library"),
                    show: ()=>p.d.canAddToLibrary && u.p.isLoaded
                },
                [r.Secondary.Types.Practice]: {
                    event: "practice",
                    icon: "practice",
                    tooltip: (0,
                    s.dW)("Practice vs Computer"),
                    show: ()=>Boolean(o.S.hasLegalMoves && h.v.engineEnabled)
                },
                [r.Secondary.Types.OpenShare]: {
                    event: "open-share",
                    icon: "share",
                    tooltip: (0,
                    s.dW)("Share"),
                    show: ()=>!0
                }
            }
              , b = {
                left: [m[r.Secondary.Types.ToggleCharts], m[r.Secondary.Types.FlipBoard], m[r.Secondary.Types.SetUpPosition], m[r.Secondary.Types.NewAnalysis]],
                right: [m[r.Secondary.Types.GameReview], m[r.Secondary.Types.ToggleLibrary], m[r.Secondary.Types.Practice], m[r.Secondary.Types.OpenShare]]
            }
        },
        57178: function(e, t, a) {
            "use strict";
            a.d(t, {
                y: function() {
                    return goToSummary
                }
            });
            var s = a(79405)
              , n = a(28287)
              , o = a(22964)
              , r = a(32614);
            function goToSummary() {
                const e = r.S.nodes.length - 1;
                if (r.S.ids.move === e)
                    return (0,
                    s.k)({
                        el: document.querySelector(`.${o.b.Elements.Summary}`),
                        offset: 175
                    });
                (0,
                n.g)(e, !0)
            }
        },
        79405: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return scrollToElement
                }
            });
            var s = a(22964)
              , n = a(27111);
            function scrollToElement({container: e, el: t, immediate: a=!1, offset: o}) {
                if (!t)
                    return;
                const r = null != e ? e : (0,
                n.J)();
                if (!r)
                    return void console.warn(`Attempted to scroll to ${r} but could not find it.`);
                const i = r.scrollTop + t.getBoundingClientRect().top - function getOffset() {
                    if (o)
                        return o;
                    if (window.innerWidth < 960)
                        return r.getBoundingClientRect().top + 5;
                    if (window.innerHeight < s.b.SmallSidebarHeight)
                        return 200;
                    return 260
                }();
                a ? r.scrollTop = i : r.scrollTo({
                    top: i,
                    behavior: "smooth"
                })
            }
        },
        63193: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return scrollToSelectedNode
                }
            });
            var s = a(79405)
              , n = a(27111);
            var o = a(48894)
              , r = a(22964);
            function getNodeElement(e) {
                const t = document.querySelector(`.${r.b.Elements.MoveList}`);
                if (t)
                    return -1 === e ? t : t.querySelector(`[data-move-number="${e}"]`)
            }
            function scrollToSelectedNode() {
                const e = o.j.selectedMoveNumber;
                if (e < 0)
                    return function scrollToTop() {
                        const e = (0,
                        n.J)();
                        e && e.scrollTo({
                            top: 0
                        })
                    }();
                if (0 !== e)
                    return function scroll(e) {
                        setTimeout((()=>(0,
                        s.k)({
                            el: getNodeElement(e)
                        })), 100)
                    }(e)
            }
        },
        40784: function(e, t, a) {
            "use strict";
            a.d(t, {
                O: function() {
                    return selectColor
                }
            });
            var s = a(67104)
              , n = a(32937)
              , o = a(81057)
              , r = a(48894);
            function selectColor(e) {
                if (e === r.j.selectedColor)
                    return;
                r.j.selectedColor = e;
                const t = (0,
                o.x)().isFlipped
                  , a = r.j.selectedColor === s.lA.ColorsAsWords.Black;
                (t && !a || !t && a) && (0,
                n.v)()
            }
        },
        3350: function(e, t, a) {
            "use strict";
            a.d(t, {
                s: function() {
                    return selectFirstKeyMove
                }
            });
            var s = a(28287)
              , n = a(48120);
            function selectFirstKeyMove(e) {
                const t = (0,
                n.K)()[0];
                void 0 !== t && (0,
                s.g)(t, e)
            }
        },
        54578: function(e, t, a) {
            "use strict";
            a.d(t, {
                D: function() {
                    return selectNextKeyMove
                }
            });
            var s = a(28287)
              , n = a(48120)
              , o = a(48894);
            function selectNextKeyMove(e) {
                const t = (0,
                n.K)().find((e=>e > o.j.selectedMoveNumber));
                t && (0,
                s.g)(t, e)
            }
        },
        28287: function(e, t, a) {
            "use strict";
            a.d(t, {
                g: function() {
                    return selectReviewPosition
                }
            });
            var s = a(54987)
              , n = a(74338)
              , o = a(26888)
              , r = a(23344);
            var i = a(923)
              , l = a(34104)
              , c = a(48894);
            function animateToPosition(e) {
                if (e >= (0,
                l.N)().length || !Number.isInteger(e))
                    c.j.animateToPosition.active = !1;
                else {
                    if (c.j.selectedMoveNumber === e)
                        return c.j.animateToPosition.active = !1,
                        void selectReviewPosition(e);
                    c.j.animateToPosition.active = !0,
                    selectReviewPosition(c.j.selectedMoveNumber + 1),
                    c.j.animateToPosition.timeout = setTimeout((()=>animateToPosition(e)), 200)
                }
            }
            var u = a(63193);
            function selectReviewPosition(e, t) {
                if ((0,
                n.q)() && (0,
                s.f)(),
                function clearLines() {
                    (0,
                    o.h)(),
                    r.I.openLines.reset()
                }(),
                t)
                    return animateToPosition(e);
                const a = (0,
                i.j)();
                a.selectNode(0, e),
                c.j.selectedMoveNumber = a.getNodeIds().move,
                (0,
                u.Z)()
            }
        },
        50330: function(e, t, a) {
            "use strict";
            a.d(t, {
                T: function() {
                    return i
                }
            });
            var s = a(54713);
            class TypeFeedbackModel extends s.Hn {
                constructor() {
                    super(...arguments),
                    this.id = "",
                    this.voteType = null
                }
            }
            var n = a(70994)
              , o = a(22964)
              , r = a(71350);
            const i = (0,
            n.D)("game_review_cache", {
                animateToPosition: {
                    active: !1,
                    timeout: void 0
                },
                openingStats: void 0,
                keyMoves: {
                    black: [],
                    white: []
                },
                selectedColor: o.b.Colors.Both,
                selectedMoveNumber: -1,
                showBestMoveMode: !1,
                suggestedLeavingBookMoves: void 0,
                typesFeedbackVotes: (0,
                s.BL)(TypeFeedbackModel, {
                    key: "id"
                })
            }, {
                showBestMoveMode: ()=>!0,
                selectedColor: (e,t)=>!!(0,
                r.x)() && (t.selectedColor = e === o.b.Colors.Both ? o.b.Colors.Both : void 0,
                !0)
            })
        },
        3366: function(e, t, a) {
            "use strict";
            a.d(t, {
                E: function() {
                    return z
                },
                i: function() {
                    return getButton
                }
            });
            var s = a(45570)
              , n = a(15100)
              , o = a(81786)
              , r = a(26888)
              , i = a(80510)
              , l = a(75700)
              , c = a(32305)
              , u = a(64647)
              , d = a(49458)
              , h = a(923)
              , p = a(57178)
              , m = a(71919)
              , b = a(90632)
              , g = a(64099)
              , f = a(67858)
              , v = a(22964)
              , w = a(93225)
              , y = a(48894)
              , k = a(53418);
            function getReviewImageUrl() {
                const e = (0,
                w.C)()
                  , t = e.classification.toLowerCase();
                if ("library" !== f.X.gameType && !f.X.gameId || !v.b.ShareableClassifications.includes(e.classification))
                    return;
                const a = k.E.get("username");
                return `${window.location.origin}/share/move/${t}/${f.X.gameType}/${a}/${function getGameUrl() {
                    return window.location.pathname.split("/").pop()
                }()}/${y.j.selectedMoveNumber}`
            }
            a(67783);
            a(54810);
            a(36577);
            var _ = a(44829);
            var C = a(12089);
            function getReviewShareUrl() {
                const e = (0,
                w.C)()
                  , t = (0,
                _.O)();
                if (!v.b.ShareableClassifications.includes(e.classification))
                    return t;
                const a = t.replace(/&move=\d+|&tab=\w+/g, "")
                  , s = e.classification.toLowerCase();
                return `${a}${a.includes("?") ? "&" : "?"}move=${y.j.selectedMoveNumber}&tab=${C.Y.Tabs.Review}&classification=${s}&autorun=true`
            }
            var T = a(3350)
              , S = a(54578)
              , x = a(63754);
            var E = Object.defineProperty
              , O = Object.defineProperties
              , A = Object.getOwnPropertyDescriptors
              , M = Object.getOwnPropertySymbols
              , P = Object.prototype.hasOwnProperty
              , j = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? E(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const z = {
                Best: {
                    dataCy: "game-review-best-btn",
                    icon: "perfect",
                    label: (0,
                    c.dW)("Best"),
                    onClick: ()=>{
                        (0,
                        h.j)().markings.removeAll(),
                        (0,
                        r.h)(),
                        (0,
                        o.k)(y.j.selectedMoveNumber, (0,
                        w.C)().suggestedMove.moveLan),
                        (0,
                        l.K)(d.Y.Events.ShowBest)
                    }
                },
                Hint: {
                    dataCy: "game-review-hint-btn",
                    icon: "lightbulb",
                    label: (0,
                    c.dW)("Hint"),
                    onClick: ()=>{
                        (0,
                        n.F)((0,
                        w.C)().suggestedMove.moveLan),
                        (0,
                        l.K)(d.Y.Events.ShowHint)
                    }
                },
                GoToKeyMoves: {
                    dataCy: "game-review-go-to-key-moves-btn",
                    icon: "key",
                    label: (0,
                    c.dW)("Key Moves"),
                    onClick: ()=>(0,
                    T.s)(!0),
                    theme: i.l.Primary
                },
                NewGame: {
                    dataCy: "game-review-new-game-btn",
                    icon: "lightning",
                    label: (0,
                    c.dW)("New Game"),
                    onClick: function startNewGame() {
                        window.open(x.Z.generate("web_play_new"))
                    }
                },
                Next: {
                    dataCy: "game-review-next-btn",
                    icon: "key",
                    label: (0,
                    c.dW)("Next"),
                    onClick: ()=>(0,
                    S.D)(!0)
                },
                NextAlternate: {
                    dataCy: "game-review-next-alt-btn",
                    icon: "key",
                    label: (0,
                    c.dW)("Next Key Move"),
                    onClick: ()=>(0,
                    S.D)(!0),
                    theme: i.l.Primary
                },
                Retry: {
                    dataCy: "game-review-retry-btn",
                    icon: "undo",
                    label: (0,
                    c.dW)("Retry"),
                    onClick: ()=>{
                        (0,
                        h.j)().markings.removeAll(),
                        (0,
                        r.h)(),
                        (0,
                        s.F)(y.j.selectedMoveNumber),
                        (0,
                        l.K)(d.Y.Events.Retry)
                    }
                },
                Share: {
                    dataCy: "game-review-share-btn",
                    icon: "share",
                    label: (0,
                    c.dW)("Share"),
                    onClick: async function openShareMenu() {
                        (0,
                        m.T)({
                            analyzedPgn: g.F.annotatedPgn,
                            shareUrl: getReviewShareUrl(),
                            imageSize: {
                                height: 236,
                                width: 450
                            },
                            imageUrl: getReviewImageUrl(),
                            initialTab: b.z.Image
                        }),
                        (0,
                        l.K)(d.Y.Events.Shared)
                    }
                },
                Start: {
                    dataCy: "game-review-start-review-btn",
                    icon: "best",
                    label: (0,
                    c.dW)("Start Review"),
                    onClick: ()=>(0,
                    T.s)(!0),
                    theme: i.l.Primary
                },
                Summary: {
                    dataCy: "game-review-summary-btn",
                    icon: "comp-analysis",
                    label: (0,
                    c.dW)("Summary"),
                    onClick: p.y
                },
                Upgrade: {
                    dataCy: "game-review-upgrade-btn",
                    icon: "display-slider",
                    label: k.E.eligibleFirstTrial() ? (0,
                    c.dW)("Try Diamond Free") : (0,
                    c.dW)("Go Diamond"),
                    onClick: ()=>{
                        window.open(u._.upgradeMembership())
                    }
                    ,
                    theme: i.l.Secondary
                }
            };
            function getButton(e, t) {
                var a, s, n;
                return s = ((e,t)=>{
                    for (var a in t || (t = {}))
                        P.call(t, a) && __defNormalProp(e, a, t[a]);
                    if (M)
                        for (var a of M(t))
                            j.call(t, a) && __defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, e),
                n = {
                    theme: null != (a = null != t ? t : e.theme) ? a : i.l.Basic
                },
                O(s, A(n))
            }
        },
        8002: function(e, t, a) {
            "use strict";
            a.d(t, {
                v: function() {
                    return h
                }
            });
            var s = a(32305)
              , n = a(58819)
              , o = a(58714)
              , r = a(923);
            var i = a(54578)
              , l = a(28287)
              , c = a(48120)
              , u = a(48894);
            var d = a(32614);
            const h = {
                props: {
                    hideMainControls: !0,
                    secondaryControls: {
                        left: [{
                            event: "first-move",
                            icon: "chevron-previous",
                            show: ()=>(0,
                            n.u)() && d.S.ids.move > 0,
                            tooltip: (0,
                            s.dW)("First Move")
                        }, {
                            event: "previous-key-move",
                            icon: "double-chevron-left",
                            show: ()=>(0,
                            n.u)() && d.S.ids.move > (0,
                            c.K)()[0],
                            tooltip: (0,
                            s.dW)("Previous Key Move")
                        }, {
                            event: "previous-move",
                            icon: "chevron-left",
                            show: ()=>(0,
                            n.u)() && d.S.ids.move >= 0,
                            tooltip: (0,
                            s.dW)("Previous Move")
                        }, {
                            event: "next-move",
                            icon: "chevron-right",
                            show: ()=>(0,
                            n.u)() && d.S.ids.move < d.S.nodes[d.S.nodes.length - 1].ids.move,
                            tooltip: (0,
                            s.dW)("Next Move")
                        }, {
                            event: "next-key-move",
                            icon: "double-chevron-right",
                            show: ()=>{
                                const e = (0,
                                c.K)();
                                return (0,
                                n.u)() && d.S.ids.move < e[e.length - 1]
                            }
                            ,
                            tooltip: (0,
                            s.dW)("Next Key Move")
                        }, {
                            event: "last-move",
                            icon: "chevron-next",
                            show: ()=>(0,
                            n.u)() && d.S.ids.move < d.S.nodes[d.S.nodes.length - 1].ids.move,
                            tooltip: (0,
                            s.dW)("Last Move")
                        }],
                        right: [o.Z.ToggleCharts, o.Z.FlipBoard, o.Z.OpenShare, o.Z.Practice, o.Z.ToggleLibrary]
                    }
                },
                events: {
                    "first-move": function onFirstMove() {
                        (0,
                        r.j)().selectLineStart()
                    },
                    "previous-move": function onPreviousMove() {
                        (0,
                        r.j)().moveBackward()
                    },
                    "previous-key-move": function selectPreviousKeyMove(e) {
                        const t = (0,
                        c.K)().slice().reverse().find((e=>e < u.j.selectedMoveNumber));
                        t && (0,
                        l.g)(t, e)
                    },
                    "next-move": function onNextMove() {
                        (0,
                        r.j)().moveForward()
                    },
                    "next-key-move": i.D,
                    "last-move": function onLastMove() {
                        (0,
                        r.j)().selectLineEnd()
                    }
                }
            }
        },
        22964: function(e, t, a) {
            "use strict";
            a.d(t, {
                b: function() {
                    return s
                }
            });
            var s, n = a(26908), o = a(32305);
            (e=>{
                let t;
                let a;
                let s;
                var r;
                let i, l;
                (t = e.Colors || (e.Colors = {})).Both = "both",
                (a = e.ChessboardPlugins || (e.ChessboardPlugins = {})).ReviewControls = "ReviewControls",
                e.ShareableClassifications = [n.x.Classifications.Types.GreatFind, n.x.Classifications.Types.Brilliant],
                (r = s = e.Elements || (e.Elements = {})).MoveList = "review-move-list",
                r.ScrollContainer = "review-scroll-container",
                r.Summary = "review-summary",
                (e=>{
                    let t;
                    var a;
                    (a = t = e.VoteTypes || (e.VoteTypes = {})).Positive = "positive",
                    a.Negative = "negative"
                }
                )(i = e.TypesFeedback || (e.TypesFeedback = {})),
                (l = e.Events || (e.Events = {})).ToggleShowBestMoveMode = "ToggleShowBestMoveMode",
                e.ArrowColor = "rgba(255, 170, 0, 0.8)",
                e.SmallSidebarHeight = 733,
                e.DefaultErrorMessage = (0,
                o.dW)("Your Game Review could not load due to an error on our end. We apologize for the inconvenience.")
            }
            )(s || (s = {}))
        },
        12601: function(e, t, a) {
            "use strict";
            a.d(t, {
                e: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        21308: function(e, t, a) {
            "use strict";
            a.d(t, {
                m: function() {
                    return getEvalBarScore
                }
            });
            var s = a(74338)
              , n = a(93225)
              , o = a(91862)
              , r = a(32614)
              , i = a(12089)
              , l = a(5080);
            function getEvalBarScore() {
                return l.B.selectedTab === i.Y.Tabs.Review ? function getReviewScore() {
                    var e;
                    const t = (0,
                    n.C)();
                    if (!t)
                        return null;
                    if ((0,
                    s.q)())
                        return formatPosition(t);
                    const a = (0,
                    o.u)();
                    if ((null == a ? void 0 : a.playedMove.score) && (null == (e = a.ids) ? void 0 : e.line) === r.S.ids.line)
                        return formatPosition(a);
                    return formatPosition(t)
                }() : null;
                function formatPosition(e) {
                    return e ? {
                        score: e.playedMove.score,
                        mateIn: e.playedMove.mateIn
                    } : null
                }
            }
        },
        25292: function(e, t, a) {
            "use strict";
            a.d(t, {
                E: function() {
                    return getExplorerLink
                }
            });
            var s = a(67104)
              , n = a(2056)
              , o = a(64647)
              , r = a(81057)
              , i = a(923)
              , l = a(32614);
            function getExplorerLink(e={}) {
                var t, a;
                return decodeURIComponent(o._.explorer({
                    color: (0,
                    r.x)().isFlipped ? s.lA.ColorsAsWords.Black : s.lA.ColorsAsWords.White,
                    gameSource: e.useMasterGames ? n.O.Explorer.GameSource.Master : n.O.Explorer.GameSource.Own,
                    gameType: n.O.Explorer.GameType.All,
                    moveList: null != (t = e.moveList) ? t : (0,
                    i.j)().getHistorySANs().join("+"),
                    ne: 1,
                    ply: null != (a = e.ply) ? a : l.S.selectedPly + 1
                }))
            }
        },
        24392: function(e, t, a) {
            "use strict";
            a.d(t, {
                p: function() {
                    return getFlowButtons
                }
            });
            var s = a(74338)
              , n = a(80510)
              , o = a(98482)
              , r = a(3366)
              , i = a(48120);
            function getLastKeyMove() {
                var e;
                const t = (0,
                i.K)();
                return null != (e = t[t.length - 1]) ? e : 0
            }
            var l = a(75762)
              , c = a(93225)
              , u = a(4843);
            function isLastKeyMove(e) {
                return e === getLastKeyMove()
            }
            var d = a(66391)
              , h = a(48894)
              , p = a(26908);
            function isMoveBad(e) {
                return [p.x.Classifications.Types.Mistake, p.x.Classifications.Types.Blunder, p.x.Classifications.Types.MissedWin, p.x.Classifications.Types.Inaccuracy].includes(e)
            }
            function isMoveBest(e) {
                return 0 === e.difference
            }
            function isMoveBrilliantOrGreatFind(e) {
                return [p.x.Classifications.Types.Brilliant, p.x.Classifications.Types.GreatFind].includes(e)
            }
            var m = a(32614);
            function getFlowButtons() {
                const e = (0,
                c.C)()
                  , t = h.j.selectedMoveNumber
                  , a = (0,
                l.e)()
                  , b = wasRetryCorrect();
                if (h.j.animateToPosition.active || !e || (0,
                o.p)())
                    return [];
                if ((0,
                d.k)())
                    return function getShowBestButtons() {
                        if (-1 === t)
                            return [(0,
                            r.i)(r.E.Start)];
                        if (function isGameOver() {
                            return m.S.isOver
                        }())
                            return [];
                        if (t >= getLastKeyMove())
                            return [(0,
                            r.i)(r.E.Summary, n.l.Primary)];
                        return [(0,
                        r.i)(r.E.NextAlternate, n.l.Primary)]
                    }();
                if ((0,
                s.q)())
                    return [(0,
                    r.i)(r.E.Hint), (0,
                    r.i)(r.E.Next)];
                if (isMoveBrilliantOrGreatFind(e.classification))
                    return function getBrilliantOrGreatFindButtons() {
                        const e = t > getLastKeyMove() || isLastKeyMove(t) ? r.E.Summary : r.E.Next;
                        if (a && !isMoveBrilliantOrGreatFind(a.classification)) {
                            if (wasRetryCorrect())
                                return [(0,
                                r.i)(r.E.Retry, n.l.Basic), (0,
                                r.i)(e, n.l.Primary)];
                            const t = isMoveBad(a.classification);
                            return [(0,
                            r.i)(r.E.Retry, t ? n.l.Tertiary : n.l.Basic), (0,
                            r.i)(r.E.Best, n.l.Basic), (0,
                            r.i)(e, t ? n.l.Basic : n.l.Primary)]
                        }
                        return [(0,
                        r.i)(r.E.Retry, n.l.Basic), (0,
                        r.i)(r.E.Share, n.l.Primary), (0,
                        r.i)(e)]
                    }();
                if ("Book" === e.classification)
                    return [isLastKeyMove(t) ? (0,
                    r.i)(r.E.Summary, n.l.Primary) : (0,
                    r.i)(r.E.NextAlternate)];
                if (t > getLastKeyMove() || isLastKeyMove(t) && (isMoveBest(e) || b)) {
                    const t = isMoveBest(e) || b ? [] : [(0,
                    r.i)(r.E.Best, n.l.Basic)];
                    return [(0,
                    r.i)(r.E.Retry, n.l.Basic), ...t, (0,
                    r.i)(r.E.Summary, n.l.Primary)]
                }
                if (isMoveBest(e))
                    return [(0,
                    r.i)(r.E.Retry, n.l.Basic), (0,
                    r.i)(r.E.NextAlternate)];
                if (function isMoveForced(e) {
                    return p.x.Classifications.Types.Forced === e
                }(e.classification))
                    return [isLastKeyMove(t) ? (0,
                    r.i)(r.E.Summary) : (0,
                    r.i)(r.E.Next)];
                if (a) {
                    if (isLastKeyMove(t))
                        return [(0,
                        r.i)(r.E.Retry, b ? n.l.Basic : n.l.Tertiary), (0,
                        r.i)(r.E.Best, n.l.Basic), (0,
                        r.i)(r.E.Summary)];
                    const e = [(0,
                    r.i)(r.E.Retry, b ? n.l.Basic : n.l.Tertiary), (0,
                    r.i)(r.E.Next, b ? n.l.Primary : n.l.Basic)];
                    return b || e.splice(1, 0, (0,
                    r.i)(r.E.Best, n.l.Basic)),
                    e
                }
                return isLastKeyMove(t) ? isMoveBad(e.classification) ? [(0,
                r.i)(r.E.Retry, n.l.Tertiary), (0,
                r.i)(r.E.Best, n.l.Basic), (0,
                r.i)(r.E.Summary)] : [(0,
                u.i)(e.color) ? (0,
                r.i)(r.E.Retry, n.l.Tertiary) : (0,
                r.i)(r.E.Best, n.l.Primary), (0,
                r.i)(r.E.Summary)] : function isKeyMove(e) {
                    return (0,
                    i.K)().includes(e) && e >= 2
                }(t) || isMoveBad(e.classification) ? getRetryButtons() : function isMoveGood(e) {
                    return [p.x.Classifications.Types.Excellent, p.x.Classifications.Types.Good].includes(e)
                }(e.classification) ? getRetryButtons(!0) : [(0,
                r.i)(r.E.NextAlternate)];
                function getRetryButtons(t) {
                    const a = t || !(0,
                    u.i)(null == e ? void 0 : e.color);
                    return [(0,
                    r.i)(r.E.Retry, a ? n.l.Basic : n.l.Tertiary), (0,
                    r.i)(r.E.Best, n.l.Basic), (0,
                    r.i)(r.E.Next, a ? n.l.Primary : n.l.Basic)]
                }
                function wasRetryCorrect() {
                    return 0 === (null == a ? void 0 : a.difference)
                }
            }
        },
        48120: function(e, t, a) {
            "use strict";
            a.d(t, {
                K: function() {
                    return getKeyMoves
                }
            });
            var s = a(89188)
              , n = a(22964)
              , o = a(48894);
            function getKeyMoves() {
                var e;
                if (o.j.selectedColor === n.b.Colors.Both)
                    return [...o.j.keyMoves.white, ...o.j.keyMoves.black].sort(((e,t)=>e - t));
                const t = o.j.keyMoves[o.j.selectedColor]
                  , a = null == (e = (0,
                s.j)()) ? void 0 : e.ids.move;
                return a && !t.includes(a) ? [a, ...t] : t
            }
        },
        75762: function(e, t, a) {
            "use strict";
            a.d(t, {
                e: function() {
                    return getRetryPosition
                }
            });
            var s = a(71001)
              , n = a(26525)
              , o = a(93225)
              , r = Object.defineProperty
              , i = Object.defineProperties
              , l = Object.getOwnPropertyDescriptors
              , c = Object.getOwnPropertySymbols
              , u = Object.prototype.hasOwnProperty
              , d = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? r(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            function getRetryPosition() {
                const e = (0,
                o.C)()
                  , t = s.D.collection.find((t=>t.parentMoveKey === (null == e ? void 0 : e.id)));
                if (!t)
                    return;
                const a = (0,
                n.b)(t.attemptMoveKey);
                return a || (r = ((e,t)=>{
                    for (var a in t || (t = {}))
                        u.call(t, a) && __defNormalProp(e, a, t[a]);
                    if (c)
                        for (var a of c(t))
                            d.call(t, a) && __defNormalProp(e, a, t[a]);
                    return e
                }
                )({}, t),
                i(r, l({
                    playedMove: {},
                    scenarios: {},
                    loading: !0
                })));
                var r
            }
        },
        93225: function(e, t, a) {
            "use strict";
            a.d(t, {
                C: function() {
                    return getReviewPosition
                }
            });
            var s = a(34104)
              , n = a(48894);
            function getReviewPosition() {
                if (!(n.j.selectedMoveNumber < 0))
                    return (0,
                    s.N)()[n.j.selectedMoveNumber]
            }
        },
        27111: function(e, t, a) {
            "use strict";
            a.d(t, {
                J: function() {
                    return getScrollContainer
                }
            });
            var s = a(22964);
            function getScrollContainer() {
                return document.querySelector(`.${s.b.Elements.ScrollContainer}`)
            }
        },
        91862: function(e, t, a) {
            "use strict";
            a.d(t, {
                u: function() {
                    return getSecondaryPosition
                }
            });
            var s = a(75762)
              , n = a(99293)
              , o = a(64099)
              , r = a(84881)
              , i = a(20318)
              , l = a(23624)
              , c = a(50653)
              , u = a(93225)
              , d = a(66391);
            function getSecondaryPosition() {
                return (0,
                d.k)() ? function getShowBestPosition() {
                    const e = (0,
                    u.C)();
                    if (!(0,
                    d.k)() || !e || e.playedMove.moveLan === e.suggestedMove.moveLan || i.x.IgnoreBestMoveClassifications.includes(e.classification))
                        return;
                    const {fen: t, san: a} = (0,
                    c.X)({
                        beforeFen: e.beforeFen,
                        moveLan: e.suggestedMove.moveLan
                    })
                      , s = o.F.positions.find({
                        id: (0,
                        n.g)({
                            fen: t,
                            san: a,
                            ids: e.ids
                        })
                    });
                    if (s)
                        return s;
                    const h = (0,
                    l.u)({
                        position: e,
                        node: {
                            color: e.color,
                            fen: t
                        }
                    });
                    return (0,
                    r.D)({
                        next: h,
                        node: {
                            color: e.color,
                            from: e.suggestedMove.moveLan.slice(0, 2),
                            to: e.suggestedMove.moveLan.slice(2, 4),
                            moveNumber: e.moveNumber,
                            ply: e.ply,
                            promotion: e.suggestedMove.moveLan[5],
                            fen: t,
                            san: a
                        },
                        position: h
                    })
                }() : (0,
                s.e)()
            }
        },
        4843: function(e, t, a) {
            "use strict";
            a.d(t, {
                i: function() {
                    return isColorSelected
                }
            });
            var s = a(67104)
              , n = a(22964)
              , o = a(48894);
            function isColorSelected(e) {
                if (!e)
                    return !1;
                const t = "number" == typeof e ? (0,
                s.RS)(e) : e;
                return o.j.selectedColor === n.b.Colors.Both || t === o.j.selectedColor
            }
        },
        66391: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return isShowBestMode
                }
            });
            var s = a(64099)
              , n = a(48894);
            function isShowBestMode() {
                return !s.F.isBasicAnalysis && n.j.showBestMoveMode
            }
        },
        48894: function(e, t, a) {
            "use strict";
            a.d(t, {
                j: function() {
                    return s
                }
            });
            const s = a(50330).T.getAll()
        },
        67438: function(e, t, a) {
            "use strict";
            a.d(t, {
                s: function() {
                    return insertNodes
                }
            });
            var s = a(923);
            function insertNodes({moves: e, score: t}) {
                const a = (0,
                s.j)();
                (a.isAtEndOfLine() || a.isGameOver()) && 0 === a.getNodeIds().line && a.createContinuation(),
                a.load({
                    moves: e
                }, {
                    atCurrent: !0,
                    method: "merge"
                }),
                a.updateNode(a.getNodeIds(), {
                    comment: String(t)
                })
            }
        },
        51e3: function(e, t, a) {
            "use strict";
            a.d(t, {
                n: function() {
                    return getMainLineParentMove
                }
            });
            var s = a(923)
              , n = a(32614);
            function getMainLineParentMove() {
                var e;
                const {line: t, move: a} = n.S.ids;
                if (0 === t)
                    return n.S.nodes[a];
                const o = (0,
                s.j)().getCurrentFullLine()
                  , r = o.findIndex((e=>0 !== e.ids.line))
                  , i = o[r];
                return n.S.nodes[r].san === i.san ? n.S.nodes[r] : null != (e = n.S.nodes[r - 1]) ? e : null
            }
        },
        51878: function(e, t, a) {
            "use strict";
            a.d(t, {
                D: function() {
                    return getUserColorAsWord
                }
            });
            var s = a(67104)
              , n = a(32614);
            function getUserColorAsWord() {
                if (n.S.userColor)
                    return (0,
                    s.RS)(n.S.userColor)
            }
        },
        71350: function(e, t, a) {
            "use strict";
            a.d(t, {
                x: function() {
                    return getUserColor
                }
            });
            var s = a(67104)
              , n = a(32614)
              , o = a(53418);
            function getUserColor() {
                const e = o.E.get("username")
                  , {Black: t, White: a} = n.S.headers;
                return t === e ? s.lA.ColorsAsNumbers.Black : a === e ? s.lA.ColorsAsNumbers.White : void 0
            }
        },
        32614: function(e, t, a) {
            "use strict";
            a.d(t, {
                S: function() {
                    return o
                }
            });
            var s = a(67104)
              , n = a(54713);
            class GameModel extends n.Hn {
                constructor() {
                    super(...arguments),
                    this.fen = "",
                    this.hasLegalMoves = !0,
                    this.headers = s.lA.EmptyPGNHeaders,
                    this.ids = {
                        line: 0,
                        move: -1
                    },
                    this.isOver = !1,
                    this.isPositionValid = !0,
                    this.pgn = "",
                    this.piecesLeft = 32,
                    this.mode = s.nl.Types.Analysis,
                    this.nodes = [],
                    this.selectedNode = null,
                    this.selectedPly = 1,
                    this.turn = s.lA.ColorsAsNumbers.White
                }
            }
            const o = new GameModel
        },
        57542: function(e, t, a) {
            "use strict";
            a.d(t, {
                X: function() {
                    return getPly
                }
            });
            var s = a(67104);
            function getPly({node: e, startingMoveNumber: t, turn: a}) {
                if (!(null == e ? void 0 : e.wholeMoveNumber)) {
                    const e = (0,
                    s.SH)(a);
                    return get(e === s.lA.ColorsAsNumbers.White ? t : t - 1, e)
                }
                return get(e.wholeMoveNumber, e.color);
                function get(e, t) {
                    return 2 * e - (t === s.lA.ColorsAsNumbers.White ? 1 : 0)
                }
            }
        },
        91322: function(e, t, a) {
            "use strict";
            a.d(t, {
                W: function() {
                    return toggleSettingsModal
                }
            });
            var s = a(54713);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            var n = a(60326);
            async function toggleSettingsModal() {
                !async function initSettingsController() {
                    (0,
                    s.tL)(a.e(191).then(a.bind(a, 1032)))
                }(),
                n.BU.modalIsVisible = !n.BU.modalIsVisible
            }
        },
        92333: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return openModal
                }
            });
            var s = a(54713)
              , n = a(57878)
              , o = a(41733);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            function openModal(e) {
                e === n.n.Types.Openings ? (0,
                s.tL)(a.e(65).then(a.bind(a, 23985))) : e === n.n.Types.Upgrade && (0,
                s.tL)(a.e(732).then(a.bind(a, 28549))),
                o.B.visibleModal = e
            }
        },
        57878: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                n: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                let s;
                (a = t = e.Types || (e.Types = {})).Openings = "Openings",
                a.Upgrade = "Upgrade",
                (s = e.UpgradeTypes || (e.UpgradeTypes = {})).Review = "Review"
            }
            )(s || (s = {}))
        },
        41733: function(e, t, a) {
            "use strict";
            a.d(t, {
                B: function() {
                    return s
                }
            });
            const s = {
                visibleModal: void 0
            }
        },
        93083: function(e, t, a) {
            "use strict";
            a.d(t, {
                G: function() {
                    return r
                }
            });
            var s, n = a(42898);
            function has(e) {
                return "true" === String(e) || 1 === Number(e)
            }
            (e=>{
                let t;
                var a;
                (a = t = e.Keys || (e.Keys = {})).Autorun = "autorun",
                a.DiagramId = "diagram_id",
                a.Flip = "flip",
                a.HideEvalBar = "hide",
                a.Move = "move",
                a.NoEngine = "ne",
                a.Referrer = "referrer",
                a.ReferrerId = "ref_id",
                a.Tab = "tab"
            }
            )(s || (s = {}));
            const o = (0,
            n.c)(window.location.search)
              , r = {
                autorun: has(o[s.Keys.Autorun]),
                diagramId: o[s.Keys.DiagramId],
                flip: "true" === o[s.Keys.Flip],
                hideEvalBar: has(o[s.Keys.HideEvalBar]),
                move: o[s.Keys.Move] && Number(o[s.Keys.Move]),
                noEngine: has(o[s.Keys.NoEngine]) || has(o[s.Keys.HideEvalBar]),
                referrer: o[s.Keys.Referrer],
                referrerId: o[s.Keys.ReferrerId],
                tab: o[s.Keys.Tab]
            }
        },
        59775: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return r
                }
            });
            var s = a(67104)
              , n = a(75285);
            const {userDetails: o} = window.chesscom.analysis
              , r = {
                black: new n.S(s.lA.ColorsAsNumbers.Black,o.black),
                white: new n.S(s.lA.ColorsAsNumbers.White,o.white)
            }
        },
        99106: function(e, t, a) {
            "use strict";
            a.d(t, {
                V: function() {
                    return updateSettings
                }
            });
            var s = a(73167)
              , n = a(44014)
              , o = a(642)
              , r = a(50250)
              , i = a(28279)
              , l = a(67489)
              , c = a(59752)
              , u = a(60326);
            function updateSettings(e) {
                Object.assign(u.Ko, e),
                c.E.emit(l.Z.Events.SettingsChanged, e),
                (0,
                s.l$)(e, "threatsEnabled") && n.h.emit(o._.ActiveStateChanged),
                (0,
                s.l$)(e, "maxAnalysisEngine") && i.y.emit(r.A.Events.EngineChanged)
            }
        },
        60456: function(e, t, a) {
            "use strict";
            a.d(t, {
                C: function() {
                    return r
                },
                U: function() {
                    return i
                }
            });
            var s = a(26908)
              , n = a(32305)
              , o = a(67489);
            const r = {
                [s.x.Classifications.Types.Brilliant]: !1,
                [s.x.Classifications.Types.GreatFind]: !1,
                [s.x.Classifications.Types.BestMove]: !1,
                [s.x.Classifications.Types.Excellent]: !1,
                [s.x.Classifications.Types.Good]: !1,
                [s.x.Classifications.Types.Book]: !1,
                [s.x.Classifications.Types.Inaccuracy]: !0,
                [s.x.Classifications.Types.Mistake]: !0,
                [s.x.Classifications.Types.Miss]: !0,
                [s.x.Classifications.Types.Blunder]: !0,
                [s.x.Classifications.Types.MissedWin]: !0
            }
              , i = {
                [o.Z.MoveListColors.Categories.Opponent]: {
                    classifications: r,
                    enabled: !1,
                    key: o.Z.MoveListColors.Categories.Opponent,
                    label: (0,
                    n.dW)("Opponent")
                },
                [o.Z.MoveListColors.Categories.Self]: {
                    classifications: r,
                    enabled: !0,
                    key: o.Z.MoveListColors.Categories.Self,
                    label: (0,
                    n.dW)("Self")
                },
                [o.Z.MoveListColors.Categories.Both]: {
                    classifications: r,
                    enabled: !0,
                    key: o.Z.MoveListColors.Categories.Both,
                    label: (0,
                    n.dW)("Classifications")
                }
            }
        },
        67489: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                Z: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                let a;
                var s;
                let n, o, r;
                (t = e.Cache || (e.Cache = {})).Key = "analysis_modal_settings",
                (s = a = e.Events || (e.Events = {})).MoveListColorSettingsChanged = "MoveListColorSettingsChanged",
                s.SettingsChanged = "SettingsChanged",
                (e=>{
                    let t;
                    var a;
                    (a = t = e.Categories || (e.Categories = {})).Both = "Both",
                    a.Opponent = "Opponent",
                    a.Self = "Self"
                }
                )(n = e.MoveListColors || (e.MoveListColors = {})),
                (e=>{
                    let t;
                    var a;
                    (a = t = e.Tabs || (e.Tabs = {})).Analysis = "Analysis",
                    a.Board = "Board",
                    a.UI = "UI"
                }
                )(o = e.Component || (e.Component = {})),
                (r = e.Depth || (e.Depth = {})).DefaultValues = {
                    Basic: 10,
                    Full: 18
                }
            }
            )(s || (s = {}))
        },
        59752: function(e, t, a) {
            "use strict";
            a.d(t, {
                E: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        60326: function(e, t, a) {
            "use strict";
            a.d(t, {
                oX: function() {
                    return g
                },
                BU: function() {
                    return v
                },
                Ko: function() {
                    return f
                }
            });
            var s = a(50250)
              , n = a(70994)
              , o = a(49815)
              , r = a(67489)
              , i = a(61681)
              , l = a(60456)
              , c = Object.defineProperty
              , u = Object.defineProperties
              , d = Object.getOwnPropertyDescriptors
              , h = Object.getOwnPropertySymbols
              , p = Object.prototype.hasOwnProperty
              , m = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? c(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    p.call(t, a) && __defNormalProp(e, a, t[a]);
                if (h)
                    for (var a of h(t))
                        m.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>u(e, d(t));
            const b = (0,
            n.D)(r.Z.Cache.Key, {
                boardFeedbackEnabled: !0,
                chartsEnabled: !1,
                colorsEnabled: !0,
                evalBarEnabled: !0,
                evalBarModesEnabled: !1,
                isTablebaseBarEnabled: !1,
                isWdlBarEnabled: !1,
                feedbackEnabled: !0,
                threatsEnabled: !1,
                fullAnalysisDepth: r.Z.Depth.DefaultValues.Full,
                fullAnalysisLinesEnabled: !1,
                fullAnalysisEngine: o.Y.Engine.FullAnalysisOptions.Latest,
                maxAnalysisEngine: s.A.Engine.Default,
                moveListColors: function getInitialMoveListColors() {
                    const e = i.Z.get(r.Z.Cache.Key);
                    if (!e)
                        return l.U;
                    const {moveListColors: t, coloredClassifications: a} = e;
                    return t && function fixCache() {
                        if (!t)
                            return;
                        (t.Both.value || t.Opponent.value || t.Self.value) && i.Z.set(r.Z.Cache.Key, __spreadProps(__spreadValues({}, e), {
                            moveListColors: {
                                [r.Z.MoveListColors.Categories.Both]: __spreadProps(__spreadValues({}, t.Both), {
                                    key: r.Z.MoveListColors.Categories.Both
                                }),
                                [r.Z.MoveListColors.Categories.Opponent]: __spreadProps(__spreadValues({}, t.Opponent), {
                                    key: r.Z.MoveListColors.Categories.Opponent
                                }),
                                [r.Z.MoveListColors.Categories.Self]: __spreadProps(__spreadValues({}, t.Self), {
                                    key: r.Z.MoveListColors.Categories.Self
                                })
                            }
                        }))
                    }(),
                    !t && a ? {
                        [r.Z.MoveListColors.Categories.Both]: __spreadProps(__spreadValues({}, a.both), {
                            key: r.Z.MoveListColors.Categories.Both
                        }),
                        [r.Z.MoveListColors.Categories.Opponent]: __spreadProps(__spreadValues({}, a.opponent), {
                            key: r.Z.MoveListColors.Categories.Opponent
                        }),
                        [r.Z.MoveListColors.Categories.Self]: __spreadProps(__spreadValues({}, a.self), {
                            key: r.Z.MoveListColors.Categories.Self
                        })
                    } : l.U
                }(),
                selfAnalysisLinesEnabled: !0,
                suggestedMoveArrows: !1
            })
              , g = []
              , f = b.getAll()
              , v = {
                modalIsVisible: !1
            }
        },
        24050: function(e, t, a) {
            "use strict";
            a.d(t, {
                K: function() {
                    return setSelectedTab
                }
            });
            var s = a(12089)
              , n = a(1122)
              , o = a(5080);
            function setSelectedTab(e) {
                const t = o.B.selectedTab;
                o.B.selectedTab = e,
                window.history.pushState({
                    path: window.location.pathname
                }, "", `${window.location.pathname}?tab=${e}`),
                n.r.emit(s.Y.Events.SelectTab, {
                    previousTab: t,
                    nextTab: e
                })
            }
        },
        12089: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                Y: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                var a;
                let s;
                (a = t = e.Tabs || (e.Tabs = {})).Analysis = "analysis",
                a.Details = "details-tab",
                a.Openings = "openings",
                a.Review = "review",
                a.Tablebase = "tablebase",
                (s = e.Events || (e.Events = {})).SelectTab = "SelectTab"
            }
            )(s || (s = {}))
        },
        1122: function(e, t, a) {
            "use strict";
            a.d(t, {
                r: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        5080: function(e, t, a) {
            "use strict";
            a.d(t, {
                B: function() {
                    return r
                }
            });
            var s = a(7984)
              , n = a(93083)
              , o = a(12089);
            const r = {
                selectedTab: function getInitialTab() {
                    return Object.values(o.Y.Tabs).includes(n.G.tab) ? n.G.tab : (0,
                    s._)() ? o.Y.Tabs.Review : o.Y.Tabs.Analysis
                }()
            }
        },
        71221: function(e, t, a) {
            "use strict";
            a.d(t, {
                h: function() {
                    return getSocket
                }
            });
            var s = a(91353)
              , n = a(31443);
            var o = a(27523);
            async function getSocket(e) {
                const t = null != e ? e : n.s.Urls[function getServer() {
                    return (0,
                    s.FR)("analysis_staging_server") ? n.s.Types.StagingServer : (0,
                    s.FR)("analysis_cloud_server") ? n.s.Types.CeacCloudServer : n.s.Types.Base
                }()];
                let a = o.L.getConnection(t);
                return a && a.readyState === WebSocket.OPEN || (a = await o.L.connect(t)),
                a
            }
        },
        31443: function(e, t, a) {
            "use strict";
            var s;
            a.d(t, {
                s: function() {
                    return s
                }
            }),
            (e=>{
                let t;
                let a;
                let s;
                var n;
                e.Name = "socket",
                (t = e.Events || (e.Events = {})).MessageReceived = "MessageReceived",
                e.DefaultReconnectInterval = 2e3,
                (a = e.StreamTypes || (e.StreamTypes = {})).Reconnect = "reconnect",
                (n = s = e.Types || (e.Types = {})).Base = "Base",
                n.Max = "Max",
                n.NewMax = "NewMax",
                n.StagingMax = "StagingMax",
                n.Local = "Local",
                n.StagingServer = "StagingServer",
                n.CeacCloudServer = "CeacCloudServer",
                e.Urls = {
                    Base: "wss://analysis.chess.com:443",
                    Max: "wss://autochess.gcp-sandbox.chess.com:443/max",
                    NewMax: "wss://max-analysis.prod.chess-platform.com:443",
                    StagingMax: "wss://max-analysis.staging.chess-platform.com:443",
                    Local: "ws://localhost:4356",
                    StagingServer: "wss://analysis-staging.chess.com:443",
                    CeacCloudServer: "wss://analysis-va.chess.com:443"
                }
            }
            )(s || (s = {}))
        },
        27523: function(e, t, a) {
            "use strict";
            a.d(t, {
                L: function() {
                    return p
                }
            });
            var s = a(35174)
              , n = a(57367)
              , o = a(63754)
              , r = a(68635);
            const routes_authenticate = (e,t)=>o.Z.generate("web_simple_delegated_authentication", {
                codeName: r.J.Authenication.Codename,
                game_id: t,
                game_type: e,
                realm: r.J.Authenication.Realm
            });
            var i = a(67858);
            async function getToken() {
                const {data: e} = await n.Z.get(routes_authenticate(i.X.gameType, i.X.gameId));
                return e.token
            }
            var l = a(31443)
              , c = Object.defineProperty
              , u = Object.getOwnPropertySymbols
              , d = Object.prototype.hasOwnProperty
              , h = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? c(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const p = function createSocketService() {
                const e = {}
                  , t = {
                    shouldReconnect: !1
                }
                  , a = (0,
                s.I)();
                return ((e,t)=>{
                    for (var a in t || (t = {}))
                        d.call(t, a) && __defNormalProp(e, a, t[a]);
                    if (u)
                        for (var a of u(t))
                            h.call(t, a) && __defNormalProp(e, a, t[a]);
                    return e
                }
                )({
                    close: function close(e) {
                        const t = getConnection(e);
                        if (!t)
                            return;
                        t.onclose = ()=>{}
                        ,
                        t.close()
                    },
                    connect: connect,
                    getConnection: getConnection
                }, a);
                function getConnection(t) {
                    return e[t]
                }
                function onWebSocketMessage(e, s) {
                    const n = JSON.parse(e.data);
                    if (n.action === l.s.StreamTypes.Reconnect && (t.shouldReconnect = !0,
                    !s.isStreaming || Boolean(n.force)))
                        return function restart(e) {
                            t.shouldReconnect && (e.close(),
                            t.shouldReconnect = !1,
                            console.log("Restarting socket."))
                        }(s);
                    a.emit(l.s.Events.MessageReceived, n)
                }
                async function connect(t) {
                    return new Promise(((a,s)=>{
                        const n = e[t];
                        n && n.readyState === n.OPEN ? a(e[t]) : getToken().then((function assignSocket(n) {
                            const o = new WebSocket(t);
                            o.id = t,
                            o.isStreaming = !1,
                            o.reconnectInterval = l.s.DefaultReconnectInterval,
                            o.token = n,
                            e[t] = o,
                            o.onopen = ()=>{
                                a(o)
                            }
                            ,
                            o.onmessage = e=>onWebSocketMessage(e, o),
                            o.onclose = e=>function onWebSocketClose(e, t) {
                                console.log(`Socket is closed. Reconnect will be attempted in ${t.reconnectInterval / 1e3} seconds. ${e.reason}`),
                                setTimeout((()=>connect(t.id)), t.reconnectInterval),
                                t.reconnectInterval *= 2
                            }(e, o),
                            o.onerror = e=>{
                                console.error(e),
                                o.close(),
                                s()
                            }
                        }
                        ))
                    }
                    ))
                }
            }()
        },
        1074: function(e, t, a) {
            "use strict";
            a.d(t, {
                $: function() {
                    return s
                }
            });
            const s = {
                fen: "",
                name: "",
                isLoading: !1,
                playedMoves: [],
                suggestedMoves: [],
                lastSanMove: "",
                stats: void 0
            }
        },
        40458: function(e, t, a) {
            "use strict";
            a.d(t, {
                $: function() {
                    return d
                }
            });
            var s = a(57367)
              , n = a(63754);
            var o = Object.defineProperty
              , r = Object.defineProperties
              , i = Object.getOwnPropertyDescriptors
              , l = Object.getOwnPropertySymbols
              , c = Object.prototype.hasOwnProperty
              , u = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? o(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    c.call(t, a) && __defNormalProp(e, a, t[a]);
                if (l)
                    for (var a of l(t))
                        u.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>r(e, i(t));
            const d = function createTablebaseService() {
                const e = {}
                  , t = {};
                return {
                    getAll: function getAll() {
                        return {
                            lines: t,
                            summaries: e
                        }
                    },
                    getLine: function getLine(e) {
                        return t[e]
                    },
                    getSummary: function getSummary(t) {
                        return e[t]
                    },
                    fetchLine: async function fetchLine(e, a) {
                        const {data: o} = await s.Z.get(n.Z.generate("web_tablebase_line", {
                            fen: e
                        }))
                          , r = [a, ...(i = o.results.pv,
                        i.replace(/\d+\.{1,3}\s/g, "").split(" "))];
                        var i;
                        return t[e] = r,
                        r
                    },
                    fetchSummary: async function fetchSummary(t) {
                        const {data: a} = await s.Z.get(n.Z.generate("web_tablebase_summary", {
                            fen: t
                        }));
                        return e[t] = __spreadProps(__spreadValues({}, a.results), {
                            fen: t
                        }),
                        e[t]
                    }
                }
            }()
        },
        82013: function(e, t, a) {
            "use strict";
            a.d(t, {
                H: function() {
                    return n
                }
            });
            var s = a(32305);
            const n = {
                "absolute pin": {
                    label: (0,
                    s.dW)("Absolute Pin"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "pins"
                    },
                    puzzles: [21],
                    insights: {
                        label: (0,
                        s.dW)("Pins"),
                        url: "pins"
                    }
                },
                backrank: {
                    label: (0,
                    s.dW)("Backrank"),
                    lesson: {
                        course: "finding-checkmate",
                        url: "back-rank-checkmates"
                    },
                    puzzles: [3],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                "bad bishop": {
                    label: (0,
                    s.dW)("Bad Bishop"),
                    lesson: {
                        course: "make-the-most-of-your-pieces",
                        url: "using-your-bishops"
                    }
                },
                battery: {
                    label: (0,
                    s.dW)("Battery"),
                    lesson: {
                        course: "make-the-most-of-your-pieces",
                        url: "using-your-rooks"
                    },
                    puzzles: [44]
                },
                "bishop fork": {
                    label: (0,
                    s.dW)("Bishop Fork"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "forks"
                    },
                    puzzles: [11],
                    insights: {
                        label: (0,
                        s.dW)("Bishop Fork"),
                        url: "forks"
                    }
                },
                "bishop pair": {
                    label: (0,
                    s.dW)("Bishop Pair"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "using-the-bishop-pair"
                    },
                    puzzles: [48],
                    insights: {
                        label: (0,
                        s.dW)("Bishop Moves"),
                        url: "pieces"
                    }
                },
                castling: {
                    label: (0,
                    s.dW)("Castling"),
                    lesson: {
                        course: "playing-the-game",
                        url: "castling"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Castling"),
                        url: "castling"
                    }
                },
                "direct opposition": {
                    label: (0,
                    s.dW)("Direct Opposition"),
                    lesson: {
                        course: "advanced-endgames",
                        url: "king-opposition"
                    },
                    puzzles: [39],
                    insights: {
                        label: (0,
                        s.dW)("King Moves"),
                        url: "pieces"
                    }
                },
                "discover check": {
                    label: (0,
                    s.dW)("Discovered Check"),
                    lesson: {
                        course: "winning-with-tactics",
                        url: "discovered-attack"
                    },
                    puzzles: [8]
                },
                "distant opposition": {
                    label: (0,
                    s.dW)("Distant Opposition"),
                    lesson: {
                        course: "endgame-patterns",
                        url: "distant-opposition"
                    },
                    puzzles: [39],
                    insights: {
                        label: (0,
                        s.dW)("King Moves"),
                        url: "pieces"
                    }
                },
                "double check": {
                    label: (0,
                    s.dW)("Double Check"),
                    lesson: {
                        course: "winning-with-tactics",
                        url: "double-check"
                    },
                    puzzles: [38]
                },
                "doubled rook": {
                    label: (0,
                    s.dW)("Doubled Rooks"),
                    lesson: {
                        course: "winning-the-game",
                        url: "checkmate-with-two-rooks"
                    },
                    puzzles: [46],
                    insights: {
                        label: (0,
                        s.dW)("Rook Accuracy"),
                        url: "pieces"
                    }
                },
                "en passant": {
                    label: (0,
                    s.dW)("En Passant"),
                    lesson: {
                        course: "playing-the-game",
                        url: "en-passant"
                    },
                    puzzles: [37],
                    insights: {
                        label: (0,
                        s.dW)("Pawn Moves"),
                        url: "pieces"
                    }
                },
                fool: {
                    label: (0,
                    s.dW)("Fool"),
                    lesson: {
                        course: "playing-the-game",
                        url: "fastest-checkmate"
                    },
                    puzzles: [62],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                "hanging pawns": {
                    label: (0,
                    s.dW)("Hanging Pawns"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "isolated-and-hanging-pawns"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Pawn Accuracy"),
                        url: "pieces"
                    }
                },
                "insufficient material": {
                    label: (0,
                    s.dW)("Insufficient Material"),
                    lesson: {
                        course: "playing-the-game",
                        url: "other-draws"
                    }
                },
                "isolated D pawn": {
                    label: (0,
                    s.dW)("Isolated D Pawn"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "isolated-and-hanging-pawns"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Pawn Accuracy"),
                        url: "pieces"
                    }
                },
                "isolated pawn": {
                    label: (0,
                    s.dW)("Isolated Pawn"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "isolated-and-hanging-pawns"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Pawn Accuracy"),
                        url: "pieces"
                    }
                },
                "king in center": {
                    label: (0,
                    s.dW)("King in Center"),
                    lesson: {
                        course: "finding-checkmate",
                        url: "king-safety"
                    },
                    puzzles: [31]
                },
                "knight and bishop": {
                    label: (0,
                    s.dW)("Knight and Bishop"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "bishops-vs-knights"
                    }
                },
                "knight fork": {
                    label: (0,
                    s.dW)("Knight Fork"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "forks"
                    },
                    puzzles: [11],
                    insights: {
                        label: (0,
                        s.dW)("Knight Fork"),
                        url: "forks"
                    }
                },
                "knight outpost": {
                    label: (0,
                    s.dW)("Knight Outpost"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "outposts"
                    },
                    puzzles: [42],
                    insights: {
                        label: (0,
                        s.dW)("Knight Accuracy"),
                        url: "pieces"
                    }
                },
                "mate-in-2": {
                    label: (0,
                    s.dW)("Mate in 2"),
                    lesson: {
                        course: "finding-checkmate",
                        url: "checkmate-in-2-moves"
                    },
                    puzzles: [15],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                "mate-in-3+": {
                    label: (0,
                    s.dW)("Mate in 3+"),
                    lesson: {
                        course: "forcing-moves",
                        url: "checkmate-in-3-moves"
                    },
                    puzzles: [16],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                "opposite colored bishops": {
                    label: (0,
                    s.dW)("Opposite Colored Bishops"),
                    lesson: {
                        course: "advanced-endgames",
                        url: "opposite-colored-bishops-endgames"
                    },
                    puzzles: [54],
                    insights: {
                        label: (0,
                        s.dW)("Bishop Accuracy"),
                        url: "pieces"
                    }
                },
                "outside passed pawns": {
                    label: (0,
                    s.dW)("Outside Passed Pawns"),
                    lesson: {
                        course: "understanding-endgames",
                        url: "passed-pawns"
                    },
                    puzzles: [56],
                    insights: {
                        label: (0,
                        s.dW)("Pawn Accuracy"),
                        url: "pieces"
                    }
                },
                "passed pawns": {
                    label: (0,
                    s.dW)("Passed Pawns"),
                    lesson: {
                        course: "understanding-endgames",
                        url: "passed-pawns"
                    },
                    puzzles: [56],
                    insights: {
                        label: (0,
                        s.dW)("Pawn Moves"),
                        url: "pieces"
                    }
                },
                "pawn fork": {
                    label: (0,
                    s.dW)("Pawn Fork"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "forks"
                    },
                    puzzles: [11],
                    insights: {
                        label: (0,
                        s.dW)("Pawn Forks"),
                        url: "forks"
                    }
                },
                "pawn island": {
                    label: (0,
                    s.dW)("Pawn Island"),
                    lesson: {
                        course: "reading-the-board",
                        url: "pawn-structures"
                    }
                },
                promotion: {
                    label: (0,
                    s.dW)("Promotion"),
                    lesson: {
                        course: "how-to-move-the-pieces",
                        url: "pawn-promotion"
                    },
                    puzzles: [19],
                    insights: {
                        label: (0,
                        s.dW)("Pawn Moves"),
                        url: "pieces"
                    }
                },
                "queen fork": {
                    label: (0,
                    s.dW)("Queen Fork"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "forks"
                    },
                    puzzles: [11],
                    insights: {
                        label: (0,
                        s.dW)("Queen Forks"),
                        url: "forks"
                    }
                },
                "relative pin": {
                    label: (0,
                    s.dW)("Relative Pin"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "pins"
                    },
                    puzzles: [21],
                    insights: {
                        label: (0,
                        s.dW)("Pins"),
                        url: "pins"
                    }
                },
                "rook and bishop": {
                    label: (0,
                    s.dW)("Rook and Bishop"),
                    lesson: {
                        course: "advanced-endgames",
                        url: "common-rook-endgames"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Endgames"),
                        url: "phases"
                    }
                },
                "rook and knight": {
                    label: (0,
                    s.dW)("Rook and Knight"),
                    lesson: {
                        course: "advanced-endgames",
                        url: "common-rook-endgames"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Endgames"),
                        url: "phases"
                    }
                },
                "rook and minors": {
                    label: (0,
                    s.dW)("Rook and Minors"),
                    lesson: {
                        course: "advanced-endgames",
                        url: "common-rook-endgames"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Endgames"),
                        url: "phases"
                    }
                },
                "rook fork": {
                    label: (0,
                    s.dW)("Rook Fork"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "forks"
                    },
                    puzzles: [11],
                    insights: {
                        label: (0,
                        s.dW)("Rook Forks"),
                        url: "forks"
                    }
                },
                scholar: {
                    label: (0,
                    s.dW)("Scholar"),
                    lesson: {
                        course: "winning-the-game",
                        url: "the-4-move-checkmate"
                    },
                    puzzles: [1],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                skewer: {
                    label: (0,
                    s.dW)("Skewer"),
                    lesson: {
                        course: "capturing-pieces",
                        url: "skewers"
                    },
                    puzzles: [26]
                },
                "smothered mate": {
                    label: (0,
                    s.dW)("Smothered Mate"),
                    lesson: {
                        course: "winning-with-tactics",
                        url: "smothered-mate"
                    },
                    puzzles: [27],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                stalemate: {
                    label: (0,
                    s.dW)("Stalemate"),
                    lesson: {
                        course: "playing-the-game",
                        url: "stalemate"
                    },
                    puzzles: [28]
                },
                "threefold repitition": {
                    label: (0,
                    s.dW)("Threefold Repetition"),
                    lesson: {
                        course: "playing-the-game",
                        url: "other-draws"
                    },
                    puzzles: [20]
                },
                "two rooks": {
                    label: (0,
                    s.dW)("Two Rooks"),
                    lesson: {
                        course: "winning-the-game",
                        url: "checkmate-with-two-rooks"
                    },
                    puzzles: [66],
                    insights: {
                        label: (0,
                        s.dW)("Rook Moves"),
                        url: "pieces"
                    }
                },
                "under promotion": {
                    label: (0,
                    s.dW)("Underpromotion"),
                    lesson: {
                        course: "advanced-tactics",
                        url: "underpromotion"
                    },
                    puzzles: [30]
                },
                "diagonal opposition": {
                    label: (0,
                    s.dW)("Diagonal Opposition"),
                    lesson: {
                        course: "advanced-endgames",
                        url: "king-opposition"
                    },
                    puzzles: [39],
                    insights: {
                        label: (0,
                        s.dW)("King Moves"),
                        url: "pieces"
                    }
                },
                "rooks on seventh": {
                    label: (0,
                    s.dW)("Rooks on Seventh"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "pigs-on-the-7th-rank"
                    },
                    puzzles: [50],
                    insights: {
                        label: (0,
                        s.dW)("Rook Accuracy"),
                        url: "pieces"
                    }
                },
                "two bishops": {
                    label: (0,
                    s.dW)("Two Bishops"),
                    lesson: {
                        course: "endgame-patterns",
                        url: "two-bishop-checkmate"
                    },
                    puzzles: [64],
                    insights: {
                        label: (0,
                        s.dW)("Bishop Accuracy"),
                        url: "pieces"
                    }
                },
                "Alekhines gun": {
                    label: (0,
                    s.dW)("Alekhine's Gun", {}, "dynamic"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "batteries"
                    },
                    puzzles: [44, 58]
                },
                "connected passed pawn": {
                    label: (0,
                    s.dW)("Connected Passed Pawns"),
                    lesson: {
                        course: "understanding-endgames",
                        url: "passed-pawns"
                    },
                    puzzles: [56],
                    insights: {
                        label: (0,
                        s.dW)("Pawn Moves"),
                        url: "pieces"
                    }
                },
                anastasia: {
                    label: (0,
                    s.dW)("Anastasia"),
                    lesson: {
                        course: "attacking-the-king-1",
                        url: "advanced-checkmate-patterns"
                    },
                    puzzles: [60],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                arabian: {
                    label: (0,
                    s.dW)("Arabian"),
                    lesson: {
                        course: "attacking-the-king-1",
                        url: "advanced-checkmate-patterns"
                    },
                    puzzles: [60],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                boden: {
                    label: (0,
                    s.dW)("Boden"),
                    lesson: {
                        course: "attacking-the-king-1",
                        url: "advanced-checkmate-patterns"
                    },
                    puzzles: [60],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                "backward pawn": {
                    label: (0,
                    s.dW)("Backward Pawns"),
                    lesson: {
                        course: "reading-the-board",
                        url: "pawn-structures"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Pawn Accuracy"),
                        url: "pieces"
                    }
                },
                "doubled pawn": {
                    label: (0,
                    s.dW)("Doubled Pawns"),
                    lesson: {
                        course: "reading-the-board",
                        url: "pawn-structures"
                    },
                    insights: {
                        label: (0,
                        s.dW)("Pawn Accuracy"),
                        url: "pieces"
                    }
                },
                fianchetto: {
                    label: (0,
                    s.dW)("Fianchetto"),
                    lesson: {
                        course: "make-the-most-of-your-pieces",
                        url: "using-your-bishops"
                    },
                    puzzles: [40],
                    insights: {
                        label: (0,
                        s.dW)("Bishop Moves"),
                        url: "pieces"
                    }
                },
                "mate-in-1": {
                    label: (0,
                    s.dW)("Mate in 1"),
                    lesson: {
                        course: "playing-the-game",
                        url: "checkmate"
                    },
                    puzzles: [14],
                    insights: {
                        label: (0,
                        s.dW)("Checkmate"),
                        url: "mates"
                    }
                },
                windmill: {
                    label: (0,
                    s.dW)("Windmill"),
                    lesson: {
                        course: "activating-your-pieces",
                        url: "windmill"
                    },
                    puzzles: [32]
                },
                "trapped piece": {
                    label: (0,
                    s.dW)("Trapped Piece"),
                    lesson: {
                        course: "winning-with-tactics",
                        url: "trapped-piece"
                    },
                    puzzles: [29],
                    insights: {
                        label: (0,
                        s.dW)("Hanging Pieces"),
                        url: "hanging"
                    }
                }
            }
        },
        46018: function(e, t, a) {
            "use strict";
            a.d(t, {
                z: function() {
                    return s
                }
            });
            const s = {
                collection: {
                    insights: [],
                    lessons: [],
                    puzzles: []
                }
            }
        },
        53418: function(e, t, a) {
            "use strict";
            a.d(t, {
                E: function() {
                    return u
                }
            });
            var s = a(87692)
              , n = a(30722)
              , o = a(78719)
              , r = a(57367)
              , i = a(63754)
              , l = a(31352)
              , c = a(15788);
            const u = (0,
            l.J)({
                cache: n.F,
                callbacks: s.ZC,
                CSRF: c.Z,
                getCurrentUser: o.x,
                http: r.Z,
                includeBoardOptions: !0,
                Router: i.Z,
                routes: s._j
            })
        },
        76554: function(e, t, a) {
            "use strict";
            a.d(t, {
                Q: function() {
                    return getAnalysisType
                }
            });
            var s = a(26908)
              , n = a(68635)
              , o = a(32305);
            const r = {
                [s.x.Classifications.Types.Book]: {
                    impersonal: [],
                    personal: []
                },
                [s.x.Classifications.Types.Brilliant]: {
                    impersonal: [(0,
                    o.dW)("That's the kind of move a champion makes."), (0,
                    o.dW)("That's an amazing move."), (0,
                    o.dW)("This hard-to-find move is the best by far.")],
                    personal: [(0,
                    o.dW)("Wow - what an incredible find."), (0,
                    o.dW)("I did not see that coming. Fantastic move!")]
                },
                [s.x.Classifications.Types.BestMove]: {
                    impersonal: [(0,
                    o.dW)("This is the strongest option."), (0,
                    o.dW)("Very precise!"), (0,
                    o.dW)("Right on target.")],
                    personal: [(0,
                    o.dW)("Good job! That's what I would have played too."), (0,
                    o.dW)("Nice! Definitely the right move."), (0,
                    o.dW)("Yes! This is the way.")]
                },
                [s.x.Classifications.Types.Excellent]: {
                    impersonal: [(0,
                    o.dW)("One of the best moves."), (0,
                    o.dW)("A very strong play."), (0,
                    o.dW)("A solid choice.")],
                    personal: [(0,
                    o.dW)("This is a fine move!"), (0,
                    o.dW)("Well done. An excellent move!"), (0,
                    o.dW)("Very good choice!")]
                },
                [s.x.Classifications.Types.Good]: {
                    impersonal: [(0,
                    o.dW)("That's not a mistake, but it's not the best move either."), (0,
                    o.dW)("That's fine."), (0,
                    o.dW)("This is a fair move.")],
                    personal: [(0,
                    o.dW)("Not the best move, but not bad either."), (0,
                    o.dW)("You had a better option - but this is not bad!"), (0,
                    o.dW)("This move is ok - but not what I would have played.")]
                },
                [s.x.Classifications.Types.Inaccuracy]: {
                    impersonal: [(0,
                    o.dW)("This is not the right idea."), (0,
                    o.dW)("There were worse moves, but also something much better."), (0,
                    o.dW)("This is not the best.")],
                    personal: [(0,
                    o.dW)("This move doesn't hurt much, but it doesn't help either."), (0,
                    o.dW)("This isn't a mistake, but there is something better."), (0,
                    o.dW)("Want to retry this one and find a better move?")]
                },
                [s.x.Classifications.Types.Mistake]: {
                    impersonal: [(0,
                    o.dW)("That's an unfortunate error."), (0,
                    o.dW)("This misses a much better move.")],
                    personal: [(0,
                    o.dW)("This move might cause trouble."), (0,
                    o.dW)("Hmm... this seems like a mistake to me."), (0,
                    o.dW)("This move hurts your chances. Want to try finding a better move?")]
                },
                [s.x.Classifications.Types.Blunder]: {
                    impersonal: [(0,
                    o.dW)("This is a serious mistake."), (0,
                    o.dW)("That's the kind of move you want to take back.")],
                    personal: [(0,
                    o.dW)("Uh oh! This move gives your opponent big chances."), (0,
                    o.dW)("Oh no! This makes things much easier for your opponent.")]
                },
                [s.x.Classifications.Types.MissedWin]: {
                    impersonal: [(0,
                    o.dW)("There is a different move here that is winning!"), (0,
                    o.dW)("This misses a winning move.")],
                    personal: [(0,
                    o.dW)("Oh no! You had a winning move!"), (0,
                    o.dW)("Can you find a different move that gives you a winning position?"), (0,
                    o.dW)("Don't get upset, but you missed a crushing move!")]
                }
            }
              , i = {
                "GreatFind(Checkmate)": {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to force checkmate."), (0,
                    o.dW)("This misses a chance to force checkmate.")],
                    personal: [(0,
                    o.dW)("Oh no! You missed an opportunity to force checkmate."), (0,
                    o.dW)("Stay sharp! You overlooked a chance to force checkmate.")]
                },
                "GreatFind(FreePiece)": {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to capture an undefended piece."), (0,
                    o.dW)("This ignores a chance to capture a free piece.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You overlooked an opportunity to capture an undefended piece."), (0,
                    o.dW)("Oh no! You missed a chance to capture a free piece.")]
                },
                "GreatFind(Pin)": {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to pin a piece to the enemy king."), (0,
                    o.dW)("This overlooks a chance to pin a piece to the enemy king.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to pin a piece to the enemy king."), (0,
                    o.dW)("You overlooked a chance to pin a piece to the enemy king.")]
                },
                "GreatFind(Fork)": {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to fork pieces."), (0,
                    o.dW)("This misses a chance to attack multiple pieces at once.")],
                    personal: [(0,
                    o.dW)("Unfortunately, you overlooked an opportunity to fork pieces."), (0,
                    o.dW)("Unfortunately, you missed a chance to attack multiple pieces at once.")]
                },
                "GreatFind(WinsMaterial)": {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to win material."), (0,
                    o.dW)("This ignores a chance to win material.")],
                    personal: [(0,
                    o.dW)("Oh no! You overlooked an opportunity to win material."), (0,
                    o.dW)("Stay sharp! You missed a chance to win material.")]
                },
                FreePiece: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to capture an undefended piece."), (0,
                    o.dW)("This overlooks a chance to capture an undefended piece.")],
                    personal: [(0,
                    o.dW)("Unfortunately, you overlooked an opportunity to capture an undefended piece."), (0,
                    o.dW)("Stay sharp! You missed a chance to capture an undefended piece.")]
                },
                Pin: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to pin a piece to the enemy king."), (0,
                    o.dW)("This misses a chance to pin a piece to the enemy king.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to pin a piece to the enemy king."), (0,
                    o.dW)("You overlooked a chance to pin a piece to the enemy king.")]
                },
                Fork: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to fork pieces."), (0,
                    o.dW)("This ignores a chance to attack multiple pieces at once.")],
                    personal: [(0,
                    o.dW)("Unfortunately, you overlooked an opportunity to fork pieces."), (0,
                    o.dW)("Oh no! You missed a chance to attack multiple pieces at once.")]
                },
                WinsMaterial: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to win material."), (0,
                    o.dW)("This overlooks a chance to win material.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You missed an opportunity to win material."), (0,
                    o.dW)("Oh no! You overlooked a chance to win material.")]
                },
                CaptureThreat: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to threaten winning material."), (0,
                    o.dW)("This misses a chance to threaten winning a piece.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to threaten winning material."), (0,
                    o.dW)("You missed a chance to threaten winning a piece.")]
                },
                DefendsPiece: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to defend an unprotected piece."), (0,
                    o.dW)("This ignores a chance to defend a hanging piece.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You missed an opportunity to defend an unprotected piece."), (0,
                    o.dW)("Unfortunately, you overlooked a chance to defend a hanging piece.")]
                },
                ProtectsPiece: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to protect an underdefended piece."), (0,
                    o.dW)("This overlooks a chance to add defense to a vulnerable piece.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to protect an underdefended piece."), (0,
                    o.dW)("You missed a chance to add defense to a vulnerable piece.")]
                },
                MakesPassedPawn: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to make a passed pawn."), (0,
                    o.dW)("This misses a chance to create a passed pawn.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to make a passed pawn."), (0,
                    o.dW)("You overlooked a chance to create a passed pawn.")]
                },
                TakesOutpost: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to take an outpost."), (0,
                    o.dW)("This ignores a chance to occupy an outpost.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to take an outpost."), (0,
                    o.dW)("You missed a chance to occupy an outpost.")]
                },
                TakesOpenFile: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to take an open file."), (0,
                    o.dW)("This overlooks a chance to take an open file.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to take an open file."), (0,
                    o.dW)("You overlooked a chance to take an open file.")]
                },
                Kicks: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to kick an enemy piece."), (0,
                    o.dW)("This misses a chance to kick a piece from its square.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to kick an enemy piece."), (0,
                    o.dW)("You missed a chance to kick a piece from its square.")]
                },
                ConnectsRooks: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to connect rooks."), (0,
                    o.dW)("This ignores a chance to connect your rooks.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to connect rooks."), (0,
                    o.dW)("You overlooked a chance to connect your rooks.")]
                },
                DoublesRooks: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to double rooks."), (0,
                    o.dW)("This overlooks a chance to double rooks.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to double rooks."), (0,
                    o.dW)("You missed a chance to double rooks.")]
                },
                PushesPassedPawn: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to push a passed pawn."), (0,
                    o.dW)("This misses a chance to advance a passed pawn towards promotion.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to push a passed pawn."), (0,
                    o.dW)("You overlooked a chance to advance a passed pawn towards promotion.")]
                },
                Develops: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to develop a piece."), (0,
                    o.dW)("This ignores a chance to get a piece off of its starting square.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to develop a piece."), (0,
                    o.dW)("You missed a chance to get a piece off of its starting square.")]
                },
                EqualTrade: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to trade pieces."), (0,
                    o.dW)("This overlooks a chance to favorably exchange pieces.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to trade pieces."), (0,
                    o.dW)("You overlooked a chance to favorably exchange pieces.")]
                },
                DelayedRecapture: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to recapture material."), (0,
                    o.dW)("This misses a chance to take back material.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to recapture material."), (0,
                    o.dW)("You missed a chance to take back material.")]
                },
                ImmediateRecapture: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to recapture material."), (0,
                    o.dW)("This ignores a chance to take back material.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to recapture material."), (0,
                    o.dW)("You overlooked a chance to take back material.")]
                },
                Retreat: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to move away from an attack."), (0,
                    o.dW)("This overlooks a chance to move to safety.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to move away from an attack."), (0,
                    o.dW)("You missed a chance to move to safety.")]
                },
                "Obvious(Recapture)": {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to recapture material."), (0,
                    o.dW)("This misses a chance to take back material.")],
                    personal: [(0,
                    o.dW)("Oh no! You missed an opportunity to recapture material."), (0,
                    o.dW)("You overlooked a chance to take back material.")]
                },
                "Obvious(Retreat)": {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to retreat from an attack."), (0,
                    o.dW)("This ignores a chance to move to safety.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to retreat from an attack."), (0,
                    o.dW)("You missed a chance to move to safety.")]
                },
                Checkmate: {
                    impersonal: [(0,
                    o.dW)("This misses mate-in-one!"), (0,
                    o.dW)("This overlooks checkmate!")],
                    personal: [(0,
                    o.dW)("Oh no! You missed mate-in-one!"), (0,
                    o.dW)("Stay sharp! You overlooked checkmate!")]
                },
                MateThreat: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to threaten checkmate."), (0,
                    o.dW)("This misses a chance to threaten checkmate.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to threaten checkmate."), (0,
                    o.dW)("You missed a chance to threaten checkmate.")]
                },
                RemovesAttacker: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to remove an attacker of a vulnerable piece."), (0,
                    o.dW)("This ignores a chance to remove an attacker of a vulnerable piece.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to remove an attacker of a vulnerable piece."), (0,
                    o.dW)("You overlooked a chance to remove an attacker of a vulnerable piece.")]
                },
                UnpinsDefender: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to unpin a critical defender of another piece."), (0,
                    o.dW)("This overlooks a chance to unpin a critical defender of another piece.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to unpin a critical defender of another piece."), (0,
                    o.dW)("You missed a chance to unpin a critical defender of another piece.")]
                },
                BlocksAttacker: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to block an attack on a vulnerable piece."), (0,
                    o.dW)("This misses a chance to block an attack on a vulnerable piece.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to block an attack on a vulnerable piece."), (0,
                    o.dW)("You overlooked a chance to block an attack on a vulnerable piece.")]
                },
                RelativePin: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to pin material."), (0,
                    o.dW)("This ignores a chance to pin material.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to pin material."), (0,
                    o.dW)("You missed a chance to pin material.")]
                },
                StillMate: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to continue the checkmate threat."), (0,
                    o.dW)("This misses a chance to continue down the road to checkmate.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to continue the checkmate threat."), (0,
                    o.dW)("You missed a chance to continue down the road to checkmate.")]
                },
                DiscoveredCheck: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to reveal a check."), (0,
                    o.dW)("This ignores a chance to reveal a check against the opponent's king.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to reveal a check."), (0,
                    o.dW)("You overlooked a chance to reveal a check against the opponent's king.")]
                },
                AttacksTrappedPiece: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to attack a piece that cannot escape."), (0,
                    o.dW)("This overlooks a chance to threaten to capture a trapped piece.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to attack a piece that cannot escape."), (0,
                    o.dW)("You overlooked a chance to threaten to capture a trapped piece.")]
                },
                Fianchetto: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to develop a bishop to a long diagonal."), (0,
                    o.dW)("This misses a chance to place a bishop on a powerful diagonal.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to develop your bishop to a long diagonal."), (0,
                    o.dW)("You missed a chance to develop your bishop to a powerful diagonal.")]
                },
                RookOnSeventh: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to place a rook on the seventh rank."), (0,
                    o.dW)("This ignores a chance to activate a rook by getting it to the seventh rank.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to place a rook on the seventh rank."), (0,
                    o.dW)("You overlooked a chance to activate a rook by getting it to the seventh rank.")]
                },
                DirectOpposition: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to take the opposition with the king."), (0,
                    o.dW)("This overlooks a chance for the king to gain the opposition.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to take the opposition with your king."), (0,
                    o.dW)("You missed a chance for your king to gain the opposition.")]
                },
                Skewer: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to skewer the opponent's pieces."), (0,
                    o.dW)("This misses a chance to create an X-ray attack through two of the opponent's pieces.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You missed an opportunity to skewer your opponent's pieces."), (0,
                    o.dW)("Oh no! You missed a chance to create an X-ray attack through two of your opponent's pieces.")]
                },
                OffersTrade: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to offer a trade of pieces."), (0,
                    o.dW)("This ignores a chance to offer an exchange of pieces.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to offer a trade of equal pieces."), (0,
                    o.dW)("You missed a chance to offer an exchange of pieces.")]
                },
                WinsTempo: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to win a tempo by threatening a high-value piece."), (0,
                    o.dW)("This overlooks a chance to win time by threatening a high-value piece.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to win a tempo by threatening a high-value piece."), (0,
                    o.dW)("You overlooked a chance to win time by threatening a high-value piece.")]
                },
                DiscoveredAttack: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to reveal an attack on a piece."), (0,
                    o.dW)("This misses a chance to expose an attack on a piece.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to reveal an attack on a piece."), (0,
                    o.dW)("You missed a chance to expose an attack on a piece.")]
                },
                DiscoveredAttackCheck: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to simultaneously reveal an attack on a piece and check the king."), (0,
                    o.dW)("This ignores a chance to expose an attack on a piece while also checking the king.")],
                    personal: [(0,
                    o.dW)("Oh no! You missed an opportunity to simultaneously reveal an attack on a piece and check the king."), (0,
                    o.dW)("Stay sharp! You overlooked a chance to expose an attack on a piece while also checking the king.")]
                },
                RookBehindOwnPawn: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to place a rook behind a passed pawn, supporting its path to promotion."), (0,
                    o.dW)("This overlooks a chance to put a rook behind a passed pawn, helping the pawn advance towards promotion.")],
                    personal: [(0,
                    o.dW)("You missed a chance to place a rook behind your passed pawn, supporting its path to promotion."), (0,
                    o.dW)("You overlooked a chance to put your rook behind your passed pawn, helping the pawn advance towards promotion.")]
                },
                RookBehindOppPawn: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to place a rook behind the opponent's passed pawn, restricting its ability to advance towards promotion."), (0,
                    o.dW)("This misses a chance to place a rook behind the opponent's passed pawn, restricting its ability to advance towards promotion.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to place your rook behind your opponent's passed pawn, restricting its ability to advance towards promotion."), (0,
                    o.dW)("You missed a chance to place your rook behind your opponent's passed pawn, restricting its ability to advance towards promotion.")]
                },
                ForcesDoubledCastlePawns: {
                    impersonal: [(0,
                    o.dW)("This overlooks an opportunity to double the pawns in front of the opponent's king."), (0,
                    o.dW)("This ignores a chance to double the pawns in front of the opponent's king.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to double the pawns in front of your opponent's king."), (0,
                    o.dW)("You overlooked a chance to double the pawns in front of your opponent's king.")]
                },
                PinsAttacker: {
                    impersonal: [(0,
                    o.dW)("This misses an opportunity to pin an attacker of a vulnerable piece."), (0,
                    o.dW)("This overlooks a chance to pin an attacker of a vulnerable piece.")],
                    personal: [(0,
                    o.dW)("You overlooked an opportunity to pin an attacker of one of your vulnerable pieces."), (0,
                    o.dW)("You missed a chance to pin an attacker of one of your vulnerable pieces.")]
                },
                DoubleCheck: {
                    impersonal: [(0,
                    o.dW)("This ignores an opportunity to check the opposing king with two pieces at once."), (0,
                    o.dW)("This misses a chance to check the opposing king with two pieces at once.")],
                    personal: [(0,
                    o.dW)("You missed an opportunity to check your opponent's king with two pieces at once."), (0,
                    o.dW)("You overlooked a chance to check your opponent's king with two pieces at once.")]
                }
            }
              , l = {
                "Brilliant(Find)": {
                    impersonal: [(0,
                    o.dW)("That was a truly amazing move!"), (0,
                    o.dW)("That was a great move and very hard to find!")],
                    personal: [(0,
                    o.dW)("Amazing! That's not an easy move to find."), (0,
                    o.dW)("Great vision! That move is difficult to see.")]
                },
                "GreatFind(Checkmate)": {
                    impersonal: [(0,
                    o.dW)("This is a good way to force checkmate."), (0,
                    o.dW)("This is a great move, checkmate is now unavoidable.")],
                    personal: [(0,
                    o.dW)("Checkmate is coming up."), (0,
                    o.dW)("You found the road to checkmate!"), (0,
                    o.dW)("Great work! Checkmate is imminent.")]
                },
                "GreatFind(FreePiece)": {
                    impersonal: [(0,
                    o.dW)("This captures material for free."), (0,
                    o.dW)("The piece was free for the taking!")],
                    personal: [(0,
                    o.dW)("Good job. You found the free piece."), (0,
                    o.dW)("That piece was yours for the taking!")]
                },
                "GreatFind(Pin)": {
                    impersonal: [(0,
                    o.dW)("This is a strong pin."), (0,
                    o.dW)("This pins the piece to its king.")],
                    personal: [(0,
                    o.dW)("That's a useful pin you found."), (0,
                    o.dW)("Nice! You have pinned the opponent's piece to its king.")]
                },
                "GreatFind(Fork)": {
                    impersonal: [(0,
                    o.dW)("This is a good fork."), (0,
                    o.dW)("This is a nice move, forking multiple pieces.")],
                    personal: [(0,
                    o.dW)("Nice fork!"), (0,
                    o.dW)("Great job finding that fork!")]
                },
                "GreatFind(WinsMaterial)": {
                    impersonal: [(0,
                    o.dW)("This leads to winning material."), (0,
                    o.dW)("This is the way to win material.")],
                    personal: [(0,
                    o.dW)("Excellent! This is the way to win material."), (0,
                    o.dW)("Nice find! This wins material.")]
                },
                "Critical(Find)": {
                    impersonal: [(0,
                    o.dW)("This is the only good move!"), (0,
                    o.dW)("This is the only move that works!")],
                    personal: [(0,
                    o.dW)("There was only one good move and you found it!"), (0,
                    o.dW)("This is the only move that works - and you found it!")]
                },
                Interesting: {
                    impersonal: [(0,
                    o.dW)("An interesting move - although not technically the best."), (0,
                    o.dW)("This is not the best move, but an interesting alternative.")],
                    personal: [(0,
                    o.dW)("Interesting move. Not the best, but it has some good ideas."), (0,
                    o.dW)("Curious move! Maybe not exactly what the position demands - but an interesting idea.")]
                },
                FreePiece: {
                    impersonal: [(0,
                    o.dW)("That piece was free for the taking."), (0,
                    o.dW)("That was a free piece.")],
                    personal: [(0,
                    o.dW)("Good job! That wins a free piece."), (0,
                    o.dW)("That piece was yours for the taking!")]
                },
                Pin: {
                    impersonal: [(0,
                    o.dW)("This pins a piece to the king."), (0,
                    o.dW)("This immobilizes the opponent's piece by pinning it to the king.")],
                    personal: [(0,
                    o.dW)("That's a useful pin you found."), (0,
                    o.dW)("You have immobilized your opponent's piece by pinning it to the king.")]
                },
                Fork: {
                    impersonal: [(0,
                    o.dW)("This attacks multiple pieces at once."), (0,
                    o.dW)("This forks multiple pieces.")],
                    personal: [(0,
                    o.dW)("Nice fork!"), (0,
                    o.dW)("Great job finding that fork!")]
                },
                WinsMaterial: {
                    impersonal: [(0,
                    o.dW)("This wins material.")],
                    personal: [(0,
                    o.dW)("You should end up winning material after the right captures."), (0,
                    o.dW)("Excellent! This is the way to win material.")]
                },
                CaptureThreat: {
                    impersonal: [(0,
                    o.dW)("This threatens to win material."), (0,
                    o.dW)("This creates a threat to win material that cannot be ignored.")],
                    personal: [(0,
                    o.dW)("You are now threatening to win material.")]
                },
                DefendsPiece: {
                    impersonal: [(0,
                    o.dW)("This defends the attacked piece."), (0,
                    o.dW)("This defends a piece that was under attack and had no defenders.")],
                    personal: [(0,
                    o.dW)("Good job defending that piece."), (0,
                    o.dW)("Nice defensive move.")]
                },
                ProtectsPiece: {
                    impersonal: [(0,
                    o.dW)("This protects the attacked piece."), (0,
                    o.dW)("This protects an underdefended piece that is under attack.")],
                    personal: [(0,
                    o.dW)("The piece is now adequately defended."), (0,
                    o.dW)("Good job adding a support to your underdefended piece."), (0,
                    o.dW)("This adds support to your threatened piece.")]
                },
                MakesPassedPawn: {
                    impersonal: [(0,
                    o.dW)("This makes a passed pawn, meaning no opposing pawn can challenge it on its way to promotion."), (0,
                    o.dW)("The pawn can no longer be challenged by opposing pawns as it tries to promote.")],
                    personal: [(0,
                    o.dW)("Nice! You made a passed pawn, meaning no opposing pawn can challenge it on its way to promotion."), (0,
                    o.dW)("Good job! Passed pawns can be a great resource because their path to promotion is not restricted by opposing pawns.")]
                },
                TakesOutpost: {
                    impersonal: [(0,
                    o.dW)("This takes an outpost, an active square where the piece cannot be kicked out by a pawn."), (0,
                    o.dW)("The piece now occupies an outpost, a secure square in the opponent's territory.")],
                    personal: [(0,
                    o.dW)("Good idea to take the outpost, an active square where the piece cannot be kicked out by a pawn."), (0,
                    o.dW)("That square is an excellent outpost square for your piece, a secure spot in your opponent's territory.")]
                },
                TakesOpenFile: {
                    impersonal: [(0,
                    o.dW)("This takes an open file, a common method for activating a rook."), (0,
                    o.dW)("The rook is now on an open file, which helps control squares across the board.")],
                    personal: [(0,
                    o.dW)("Your rook takes an open file, a common method for activating a rook."), (0,
                    o.dW)("Your rook eyes the open file, which helps control critical squares across the board.")]
                },
                Kicks: {
                    impersonal: [(0,
                    o.dW)("This kicks an enemy piece."), (0,
                    o.dW)("The enemy piece must now move or be captured.")],
                    personal: [(0,
                    o.dW)("You attack the enemy piece, forcing it away.")]
                },
                ConnectsRooks: {
                    impersonal: [(0,
                    o.dW)("This connects the rooks, which helps them coordinate together in the future."), (0,
                    o.dW)("The rooks can see each other now, allowing them to provide mutual defense.")],
                    personal: [(0,
                    o.dW)("Your rooks are connected, which helps them coordinate together in the future."), (0,
                    o.dW)("Your rooks can see each other now, allowing them to provide mutual defense.")]
                },
                DoublesRooks: {
                    impersonal: [(0,
                    o.dW)("This doubles the rooks onto a single file, which allows them to team up to create threats."), (0,
                    o.dW)("The rooks are coordinated and powerfully arranged on the file.")],
                    personal: [(0,
                    o.dW)("You have now doubled your rooks, allowing them to team up to create threats.")]
                },
                PushesPassedPawn: {
                    impersonal: [(0,
                    o.dW)("This pushes a passed pawn."), (0,
                    o.dW)("The passed pawn moves towards its goal.")],
                    personal: [(0,
                    o.dW)("One step closer to promotion!")]
                },
                Develops: {
                    impersonal: [(0,
                    o.dW)("This activates a piece by developing it off of its starting square."), (0,
                    o.dW)("This develops a piece off its starting square, getting it into the action.")],
                    personal: [(0,
                    o.dW)("It's good to get your pieces off of their starting square and into the action."), (0,
                    o.dW)("Good! You activate your piece by moving it off of its starting square.")]
                },
                EqualTrade: {
                    impersonal: [(0,
                    o.dW)("This is an equal trade."), (0,
                    o.dW)("After all captures, this is an equal trade.")],
                    personal: [(0,
                    o.dW)("Maintains the balance in material with a good trade."), (0,
                    o.dW)("This is an equal trade of material.")]
                },
                DelayedRecapture: {
                    impersonal: [(0,
                    o.dW)("Recaptures, from a previous move.")],
                    personal: [(0,
                    o.dW)("You take back the material, at last.")]
                },
                ImmediateRecapture: {
                    impersonal: [(0,
                    o.dW)("Recaptures."), (0,
                    o.dW)("Takes back.")],
                    personal: [(0,
                    o.dW)("Good. You take back."), (0,
                    o.dW)("You can see more of the board this way.")]
                },
                Retreat: {
                    impersonal: [(0,
                    o.dW)("This moves to safety."), (0,
                    o.dW)("This move puts the piece on a safer square.")],
                    personal: [(0,
                    o.dW)("This is a good time to get out of trouble."), (0,
                    o.dW)("This is a good time for you to get out of trouble.")]
                },
                "Obvious(Recapture)": {
                    impersonal: [(0,
                    o.dW)("Recaptures in turn."), (0,
                    o.dW)("A straightforward recapture.")],
                    personal: [(0,
                    o.dW)("Good. You take back.")]
                },
                "Obvious(Retreat)": {
                    impersonal: [(0,
                    o.dW)("The correct move to safety."), (0,
                    o.dW)("The clearly correct move for a threatened piece.")],
                    personal: [(0,
                    o.dW)("This avoids clear danger."), (0,
                    o.dW)("Clearly you don't want to leave your piece in danger."), (0,
                    o.dW)("Correct, of course. Withdraw from danger!")]
                },
                "MissedWin(Win)": {
                    impersonal: [(0,
                    o.dW)("This misses a chance to take a big advantage."), (0,
                    o.dW)("There is a different move here that is winning.")],
                    personal: [(0,
                    o.dW)("This misses a winning move."), (0,
                    o.dW)("Here you missed a chance to achieve a winning position."), (0,
                    o.dW)("You missed a winning move here.")]
                },
                "MissedWin(ForcedMate)": {
                    impersonal: [(0,
                    o.dW)("This misses a forced checkmate."), (0,
                    o.dW)("There was a chance to force checkmate here, but it was missed.")],
                    personal: [(0,
                    o.dW)("You missed a chance to force checkmate!"), (0,
                    o.dW)("Stay sharp! This move misses a forced checkmate.")]
                },
                "MissedWin(FreePiece)": {
                    impersonal: [(0,
                    o.dW)("This misses capturing free material."), (0,
                    o.dW)("There was an undefended piece here that was not captured.")],
                    personal: [(0,
                    o.dW)("This move misses the chance to capture material!"), (0,
                    o.dW)("You missed a free piece!"), (0,
                    o.dW)("Look again. It would be better to capture some material here.")]
                },
                "MissedWin(Pin)": {
                    impersonal: [(0,
                    o.dW)("This misses a chance for a strong pin that would have given a winning advantage.")],
                    personal: [(0,
                    o.dW)("You missed a winning pin tactic here."), (0,
                    o.dW)("You missed a tactic here. Try treating the position like a puzzle.")]
                },
                "MissedWin(Fork)": {
                    impersonal: [(0,
                    o.dW)("This misses a chance to fork material and gain a winning position.")],
                    personal: [(0,
                    o.dW)("You missed a winning fork tactic here."), (0,
                    o.dW)("You missed a tactic here. Try treating the position like a puzzle.")]
                },
                "MissedDraw(Draw)": {
                    impersonal: [(0,
                    o.dW)("This misses the chance to get a more equal position."), (0,
                    o.dW)("Equality is within reach, but this move doesn't get there.")],
                    personal: [(0,
                    o.dW)("You had a chance to reach a more equal position here.")]
                },
                "Critical(Miss)": {
                    impersonal: [(0,
                    o.dW)("This misses the only good move."), (0,
                    o.dW)("Only one move works here - and this isn't the move.")],
                    personal: [(0,
                    o.dW)("You had only one clear best move."), (0,
                    o.dW)("Not quite. There's only one good move here.")]
                },
                HangsPiece: {
                    impersonal: [(0,
                    o.dW)("This gives away free material."), (0,
                    o.dW)("This leaves a piece without defenders.")],
                    personal: [(0,
                    o.dW)("This loses a piece!"), (0,
                    o.dW)("Oops - you gave up a piece."), (0,
                    o.dW)("Your piece is undefended, so this move loses material.")]
                },
                BadTrade: {
                    impersonal: [(0,
                    o.dW)("This leads to losing material."), (0,
                    o.dW)("This loses material.")],
                    personal: [(0,
                    o.dW)("You're going to end up losing material after all the trades are done."), (0,
                    o.dW)("You are losing material this way.")]
                },
                LosesMaterial: {
                    impersonal: [(0,
                    o.dW)("This leads to losing material."), (0,
                    o.dW)("This loses material.")],
                    personal: [(0,
                    o.dW)("You're going to end up losing material after all the trades are done."), (0,
                    o.dW)("You are losing material this way.")]
                },
                GettingMated: {
                    impersonal: [(0,
                    o.dW)("This allows a forced checkmate.")],
                    personal: [(0,
                    o.dW)("Looks like you can't stop checkmate now."), (0,
                    o.dW)("Uh oh! Now your opponent has a forced mate.")]
                },
                Checkmate: {
                    impersonal: [(0,
                    o.dW)("And the game is over.")],
                    personal: [(0,
                    o.dW)("Congrats on your win!"), (0,
                    o.dW)("Good job! Always feels nice to win.")]
                },
                MateThreat: {
                    impersonal: [(0,
                    o.dW)("This creates a checkmate threat."), (0,
                    o.dW)("This threatens an imminent checkmate.")],
                    personal: [(0,
                    o.dW)("This move threatens mate."), (0,
                    o.dW)("Good job creating a checkmate threat!"), (0,
                    o.dW)("Nice! When you threaten checkmate, you force your opponent to deal with it.")]
                },
                RemovesAttacker: {
                    impersonal: [(0,
                    o.dW)("This captures a piece and eliminates a threat."), (0,
                    o.dW)("This captures a piece that was threatening to win material.")],
                    personal: [(0,
                    o.dW)("This captures the attacker."), (0,
                    o.dW)("Smart! This removes an attacker that was threatening to capture one of your pieces.")]
                },
                UnpinsDefender: {
                    impersonal: [(0,
                    o.dW)("This frees a piece to adequately defend another piece."), (0,
                    o.dW)("This breaks a pin and enables adequate defense of a piece.")],
                    personal: [(0,
                    o.dW)("This frees a pinned piece, allowing it to provide defense."), (0,
                    o.dW)("Nice! You've broken a pin and freed your defender.")]
                },
                BlocksAttacker: {
                    impersonal: [(0,
                    o.dW)("This blocks an attack on a vulnerable piece."), (0,
                    o.dW)("This blocks the attack on a piece that could have been captured.")],
                    personal: [(0,
                    o.dW)("Good! This blocks an attack on one of your vulnerable pieces."), (0,
                    o.dW)("One piece jumps in to protect another!")]
                },
                "Missed(Brilliant)": {
                    impersonal: [(0,
                    o.dW)("This misses a great but hard to find move.")],
                    personal: [(0,
                    o.dW)("Unfortunate! You missed a really nice but hard to find move."), (0,
                    o.dW)("There's a better move - but it's a tricky one!")]
                },
                PermitsFork: {
                    impersonal: [(0,
                    o.dW)("This allows a fork."), (0,
                    o.dW)("This lets pieces get forked.")],
                    personal: [(0,
                    o.dW)("Oh no! This lets your opponent fork your pieces."), (0,
                    o.dW)("Unfortunately, this allows your pieces to get forked.")]
                },
                RelativePin: {
                    impersonal: [(0,
                    o.dW)("This pins a piece, which restricts its mobility."), (0,
                    o.dW)("This adds pressure by pinning a piece.")],
                    personal: [(0,
                    o.dW)("Nice! You've pinned your opponent's piece, which restricts its mobility."), (0,
                    o.dW)("Good job! Pins help build pressure on your opponent by restricting their pieces.")]
                },
                SlowerMate: {
                    impersonal: [(0,
                    o.dW)("This wins, but there is actually a faster checkmate."), (0,
                    o.dW)("This leads to checkmate, but another move gets there faster.")],
                    personal: [(0,
                    o.dW)("This leads to checkmate, but there was a faster route."), (0,
                    o.dW)("Nice! You are winning here, but you actually had a faster way to checkmate."), (0,
                    o.dW)("Good! You have a forced checkmate after this move, even though there was a faster way for you to win.")]
                },
                StillMate: {
                    impersonal: [(0,
                    o.dW)("This continues the checkmate threat."), (0,
                    o.dW)("This continues down the road to checkmate.")],
                    personal: [(0,
                    o.dW)("Good job! You continue the checkmate attack."), (0,
                    o.dW)("Great! You're continuing down the road to checkmate.")]
                },
                DiscoveredCheck: {
                    impersonal: [(0,
                    o.dW)("This reveals a check on the opponent's king."), (0,
                    o.dW)("This reveals a check.")],
                    personal: [(0,
                    o.dW)("Nice! You revealed a check against the opponent's king."), (0,
                    o.dW)("Good job! Discovered checks can be a powerful resource.")]
                },
                AttacksTrappedPiece: {
                    impersonal: [(0,
                    o.dW)("This attacks a piece that cannot escape."), (0,
                    o.dW)("This threatens to capture a trapped piece.")],
                    personal: [(0,
                    o.dW)("Nice! You've threatened to capture a trapped piece."), (0,
                    o.dW)("Good job! You've attacked a piece that cannot escape.")]
                },
                FoundWin: {
                    impersonal: [{
                        black: (0,
                        o.dW)("This took advantage of a mistake and black now has a winning advantage."),
                        white: (0,
                        o.dW)("This took advantage of a mistake and white now has a winning advantage.")
                    }, {
                        black: (0,
                        o.dW)("This was a game-changing move, giving black a winning position."),
                        white: (0,
                        o.dW)("This was a game-changing move, giving white a winning position.")
                    }],
                    personal: [(0,
                    o.dW)("You capitalized on your opponent's mistake and are now winning!"), (0,
                    o.dW)("This was a game-changing move, giving you a winning advantage!")]
                },
                FoundNotLosing: {
                    impersonal: [{
                        black: (0,
                        o.dW)("This took advantage of a bad move and black is no longer in a losing position."),
                        white: (0,
                        o.dW)("This took advantage of a bad move and white is no longer in a losing position.")
                    }, {
                        black: (0,
                        o.dW)("This was a game-changing move and black is no longer in a losing position."),
                        white: (0,
                        o.dW)("This was a game-changing move and white is no longer in a losing position.")
                    }],
                    personal: [(0,
                    o.dW)("You took advantage of your opponent's bad move, erasing their winning advantage!"), (0,
                    o.dW)("This was a game-changing move! You no longer have a losing position.")]
                },
                GoodFasterMate: {
                    impersonal: [(0,
                    o.dW)("This wins, but there was an imminent checkmate that was missed."), (0,
                    o.dW)("This is still winning, but a quick checkmate was missed.")],
                    personal: [(0,
                    o.dW)("You still have a winning position, but you missed a quick checkmate."), (0,
                    o.dW)("You are still winning, but missed an imminent checkmate.")]
                },
                BadFasterMate: {
                    impersonal: [(0,
                    o.dW)("This wins, but there was an imminent checkmate that was missed."), (0,
                    o.dW)("This is still winning, but a quick checkmate was missed.")],
                    personal: [(0,
                    o.dW)("You still have a winning position, but you missed a quick checkmate."), (0,
                    o.dW)("You are still winning, but missed an imminent checkmate.")]
                },
                Fianchetto: {
                    impersonal: [(0,
                    o.dW)("This develops the bishop and gives it scope on the long diagonal."), (0,
                    o.dW)("This fianchettos the bishop by placing it on a powerful diagonal.")],
                    personal: [(0,
                    o.dW)("Good! You develop your bishop and give it scope on the long diagonal."), (0,
                    o.dW)("You fianchetto your bishop, placing it on a powerful diagonal.")]
                },
                RookOnSeventh: {
                    impersonal: [(0,
                    o.dW)("This places a rook on the seventh rank, activating the rook and restricting the opponent's king."), (0,
                    o.dW)("This activates a rook by getting it to the seventh rank and also restricts the opponent's king.")],
                    personal: [(0,
                    o.dW)("Getting your rook to the seventh rank is a powerful resource - you activate your rook and restrict the opponent's king!"), (0,
                    o.dW)("Nice! By placing your rook on the seventh rank, you've simultaneously activated your rook and restricted your opponent's king.")]
                },
                DirectOpposition: {
                    impersonal: [(0,
                    o.dW)("This takes the opposition, which is critical to boxing out the opponent's king in the endgame."), (0,
                    o.dW)("By gaining the opposition, the opponent's king cannot make progress.")],
                    personal: [(0,
                    o.dW)("Your opponent's king cannot make progress because you took the opposition."), (0,
                    o.dW)("You gained the opposition, which is critical to boxing out your opponent's king in the endgame.")]
                },
                Skewer: {
                    impersonal: [(0,
                    o.dW)("This skewers the opponent's pieces."), (0,
                    o.dW)("This creates an X-ray attack through two of the opponent's pieces.")],
                    personal: [(0,
                    o.dW)("Good job! You skewered your opponent's pieces.")]
                },
                OffersTrade: {
                    impersonal: [(0,
                    o.dW)("This offers an equal trade of pieces."), (0,
                    o.dW)("This offers to exchange pieces of equal value.")],
                    personal: [(0,
                    o.dW)("You offered your opponent the chance to trade off equal material."), (0,
                    o.dW)("You offered your opponent an opportunity to exchange pieces of equal value.")]
                },
                WinsTempo: {
                    impersonal: [(0,
                    o.dW)("This attacks a high-value piece, winning a tempo when it retreats."), (0,
                    o.dW)("This wins time by threatening a high-value piece and forcing it to move away.")],
                    personal: [(0,
                    o.dW)("You attack a high-value piece, winning a tempo when it moves away."), (0,
                    o.dW)("You win time by threatening a high-value piece, forcing it to retreat.")]
                },
                DiscoveredAttack: {
                    impersonal: [(0,
                    o.dW)("This reveals an attack on a piece."), (0,
                    o.dW)("This exposes an attack, threatening to win material.")],
                    personal: [(0,
                    o.dW)("Nice! You revealed an attack on one of your opponent's pieces."), (0,
                    o.dW)("Good! You expose an attack, threatening to win material.")]
                },
                DiscoveredAttackCheck: {
                    impersonal: [(0,
                    o.dW)("This simultaneously reveals an attack on a piece and checks the king."), (0,
                    o.dW)("This exposes an attack on a piece while also checking the king.")],
                    personal: [(0,
                    o.dW)("Great! You simultaneously reveal an attack on your opponent's piece and check their king - a powerful combination."), (0,
                    o.dW)("Good job! You expose an attack while also checking your opponent's king.")]
                },
                RookBehindOwnPawn: {
                    impersonal: [(0,
                    o.dW)("This puts a rook behind a passed pawn, helping escort it to promotion."), (0,
                    o.dW)("Placing a rook behind a passed pawn helps keep the pawn protected as it tries to promote.")],
                    personal: [(0,
                    o.dW)("Good. Rooks belong behind passed pawns, providing important support as the pawn tries to promote."), (0,
                    o.dW)("Putting your rook behind your passed pawn is a powerful resource. The rook can help protect the pawn on its way to promotion.")]
                },
                RookBehindOppPawn: {
                    impersonal: [(0,
                    o.dW)("This puts the rook behind an opposing passed pawn, which helps counter the pawn's push to promotion."), (0,
                    o.dW)("Placing a rook behind an opponent's passed pawn can inhibit the pawn's ability to promote.")],
                    personal: [(0,
                    o.dW)("Placing your rook behind your opponent's passed pawn can be a helpful defensive resource because it makes it harder for the pawn to promote."), (0,
                    o.dW)("Very good! Putting your rook behind an opponent's passed pawn is an important idea because it impedes the pawn's ability to make progress towards promotion.")]
                },
                RookPassiveProtection: {
                    impersonal: [(0,
                    o.dW)("This places the rook in a passive defensive position. Often it is better to go for active counterplay with rooks in the endgame, even if it loses a pawn."), (0,
                    o.dW)("This defends a pawn, but puts the rook in a passive position. A better choice is often to activate rooks in the endgame, even at the cost of a pawn.")],
                    personal: [(0,
                    o.dW)("You defend a pawn in the short term, but at the cost of making your rook passive. Try activating your rook instead!"), (0,
                    o.dW)("In endgames, rook activity can be very important. You should activate your rook here, even if you lose a pawn.")]
                },
                CastlesOppositeSide: {
                    impersonal: [(0,
                    o.dW)("Castling gets the king to a safer square, out of the center of the board, while also developing a rook. Castling to the opposite side of the board as the opponent normally leads to a sharp, attacking game."), (0,
                    o.dW)("Castling develops a rook, while also getting the king to safety. By castling to the opposite side of the board as the opponent, the game will tend to be more double-edged.")],
                    personal: [(0,
                    o.dW)("Castling gets your king to a safer square, out of the center of the board, while also developing your rook. Castling to the opposite side of the board as your opponent normally leads to a sharp, attacking game."), (0,
                    o.dW)("Castling develops your rook, while also getting your king to safety. By castling to the opposite side of the board as your opponent, the game will tend to be more double-edged.")]
                },
                CastlesSameSide: {
                    impersonal: [(0,
                    o.dW)("Castling gets the king to a safer square, out of the center of the board, while also developing a rook. Castling to the same side of the board as the opponent avoids some of the attacking associated with opposite-side castling."), (0,
                    o.dW)("Castling develops a rook, while also moving the king to safety. Castling to the same side of the board as the opponent tends to lead to less sharp positions as compared with opposite-side castling.")],
                    personal: [(0,
                    o.dW)("Castling gets your king to a safer square, out of the center of the board, while also developing your rook. Castling to the same side of the board as your opponent avoids some of the attacking associated with opposite-side castling."), (0,
                    o.dW)("Castling develops your rook, while also moving your king to safety. Castling to the same side of the board as your opponent tends to lead to less sharp positions as compared with opposite-side castling.")]
                },
                CastlesKingSide: {
                    impersonal: [(0,
                    o.dW)("Castling gets the king to a safer square, out of the center of the board, while also developing a rook. Castling kingside tends to be safer because the king is further from the center.")],
                    personal: [(0,
                    o.dW)("Castling gets your king to a safer square, out of the center of the board, while also developing your rook. Castling kingside tends to be safer because your king is further from the center.")]
                },
                CastlesQueenSide: {
                    impersonal: [(0,
                    o.dW)("Castling gets the king to a safer square, out of the center of the board, while also developing a rook. Castling queenside tends to be more active because the rook is closer to the center.")],
                    personal: [(0,
                    o.dW)("Castling gets your king to a safer square, out of the center of the board, while also developing your rook. Castling queenside tends to be more active because your rook is closer to the center.")]
                },
                DoublesCastlePawns: {
                    impersonal: [(0,
                    o.dW)("This doubles the pawns in front of the king, decreasing its safety and harming the pawn structure.")],
                    personal: [(0,
                    o.dW)("This doubles the pawns in front of your king, decreasing its safety and harming your pawn structure.")]
                },
                ForcesDoubledCastlePawns: {
                    impersonal: [(0,
                    o.dW)("This forces doubled pawns in front of the opponent's king, decreasing its safety and harming the pawn structure.")],
                    personal: [(0,
                    o.dW)("This forces doubled pawns in front of your opponent's king, decreasing its safety and harming their pawn structure.")]
                },
                PinsAttacker: {
                    impersonal: [(0,
                    o.dW)("This defends a vulnerable piece by pinning one of its attackers.")],
                    personal: [(0,
                    o.dW)("Good! You defended a vulnerable piece by pinning one of its attackers.")]
                },
                DoubleCheck: {
                    impersonal: [(0,
                    o.dW)("This checks the opposing king with two pieces at once.")],
                    personal: [(0,
                    o.dW)("You revealed a double check on the opposing king, which can be a powerful tactical resource.")]
                }
            }
              , c = {
                "GreatFind(Checkmate)": {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to force checkmate.")],
                    personal: [(0,
                    o.dW)("Oh no! You missed a better way to force checkmate.")]
                },
                "GreatFind(FreePiece)": {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to capture an undefended piece.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You overlooked a better way to capture an undefended piece.")]
                },
                "GreatFind(Pin)": {
                    impersonal: [(0,
                    o.dW)("This misses a better way to pin a piece to the enemy king.")],
                    personal: [(0,
                    o.dW)("You missed a better way to pin a piece to the enemy king.")]
                },
                "GreatFind(Fork)": {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to fork pieces.")],
                    personal: [(0,
                    o.dW)("Unfortunately, you overlooked a better way to fork pieces.")]
                },
                "GreatFind(WinsMaterial)": {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to win material.")],
                    personal: [(0,
                    o.dW)("Oh no! You overlooked a better way to win material.")]
                },
                FreePiece: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to capture an undefended piece.")],
                    personal: [(0,
                    o.dW)("Unfortunately, you overlooked a better way to capture an undefended piece.")]
                },
                Pin: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to pin a piece to the enemy king.")],
                    personal: [(0,
                    o.dW)("You missed a better way to pin a piece to the enemy king.")]
                },
                Fork: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to fork pieces.")],
                    personal: [(0,
                    o.dW)("Unfortunately, you overlooked a better way to fork pieces.")]
                },
                WinsMaterial: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to win material.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You missed a better way to win material.")]
                },
                CaptureThreat: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to threaten winning a piece.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to threaten winning material.")]
                },
                DefendsPiece: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to defend an unprotected piece.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You missed a better way to defend an unprotected piece.")]
                },
                ProtectsPiece: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to protect an underdefended piece.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to protect an underdefended piece.")]
                },
                MakesPassedPawn: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to make a passed pawn.")],
                    personal: [(0,
                    o.dW)("You missed a better way to make a passed pawn.")]
                },
                TakesOutpost: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to take an outpost.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to take an outpost.")]
                },
                TakesOpenFile: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to take an open file.")],
                    personal: [(0,
                    o.dW)("You missed a better way to take an open file.")]
                },
                Kicks: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to kick an enemy piece.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to kick an enemy piece.")]
                },
                ConnectsRooks: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to connect rooks.")],
                    personal: [(0,
                    o.dW)("You missed a better way to connect rooks.")]
                },
                DoublesRooks: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to double rooks.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to double rooks.")]
                },
                PushesPassedPawn: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to push a passed pawn.")],
                    personal: [(0,
                    o.dW)("You missed a better way to push a passed pawn.")]
                },
                Develops: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to develop a piece.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to develop a piece.")]
                },
                EqualTrade: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to trade pieces.")],
                    personal: [(0,
                    o.dW)("You missed a better way to trade pieces.")]
                },
                DelayedRecapture: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to recapture material.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to recapture material.")]
                },
                ImmediateRecapture: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to recapture material.")],
                    personal: [(0,
                    o.dW)("You missed a better way to recapture material.")]
                },
                Retreat: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to move away from an attack.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to move away from an attack.")]
                },
                "Obvious(Recapture)": {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to recapture material.")],
                    personal: [(0,
                    o.dW)("You missed a better way to recapture material.")]
                },
                "Obvious(Retreat)": {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to retreat from an attack.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to retreat from an attack.")]
                },
                MateThreat: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to threaten checkmate.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to threaten checkmate.")]
                },
                RemovesAttacker: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to remove an attacker of a vulnerable piece.")],
                    personal: [(0,
                    o.dW)("You missed a better way to remove an attacker of a vulnerable piece.")]
                },
                UnpinsDefender: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to unpin a critical defender of another piece.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to unpin a critical defender of another piece.")]
                },
                BlocksAttacker: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to block an attack on a vulnerable piece.")],
                    personal: [(0,
                    o.dW)("You missed a better way to block an attack on a vulnerable piece.")]
                },
                RelativePin: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to pin material.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to pin material.")]
                },
                DiscoveredCheck: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to reveal a check.")],
                    personal: [(0,
                    o.dW)("You missed a better way to reveal a check against the opponent's king.")]
                },
                AttacksTrappedPiece: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to attack a trapped piece.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to attack a piece that cannot escape.")]
                },
                Fianchetto: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to develop a bishop to the long diagonal.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to develop your bishop to a long diagonal.")]
                },
                RookOnSeventh: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to place a rook on the seventh rank.")],
                    personal: [(0,
                    o.dW)("You missed a better way to place a rook on the seventh rank.")]
                },
                Skewer: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to skewer the opponent's pieces.")],
                    personal: [(0,
                    o.dW)("Stay sharp! You missed a better way to skewer your opponent's pieces.")]
                },
                OffersTrade: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to offer a trade of pieces.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to offer a trade of pieces.")]
                },
                WinsTempo: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to win a tempo by threatening a high-value piece.")],
                    personal: [(0,
                    o.dW)("You missed a better way to win a tempo by threatening a high-value piece.")]
                },
                DiscoveredAttack: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to reveal an attack on a piece.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to reveal an attack on a piece.")]
                },
                DiscoveredAttackCheck: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to simultaneously reveal an attack on a piece and check the king.")],
                    personal: [(0,
                    o.dW)("Oh no! You missed a better way to simultaneously reveal an attack on a piece and check the king.")]
                },
                RookBehindOwnPawn: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to put a rook behind a passed pawn.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to put a rook behind your passed pawn.")]
                },
                RookBehindOppPawn: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to put a rook behind the opponent's passed pawn.")],
                    personal: [(0,
                    o.dW)("You missed a better way to put a rook behind your opponent's passed pawn.")]
                },
                ForcesDoubledCastlePawns: {
                    impersonal: [(0,
                    o.dW)("This overlooks a better way to double the pawns in front of the opponent's castled king")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to double the pawns in front of your opponent's castled king.")]
                },
                PinsAttacker: {
                    impersonal: [(0,
                    o.dW)("This misses a better way to pin the attacker of a vulnerable piece.")],
                    personal: [(0,
                    o.dW)("You missed a better way to pin the attacker on one of your vulnerable pieces.")]
                },
                DoubleCheck: {
                    impersonal: [(0,
                    o.dW)("This ignores a better way to reveal a double check on the opponent's king.")],
                    personal: [(0,
                    o.dW)("You overlooked a better way to reveal a double check on your opponent's king.")]
                }
            };
            var u = a(84542)
              , d = a(67104);
            const h = {};
            function getAnalysisType({classification: e, hideFallback: t, isRetry: a, position: p, previousPosition: m, typeCategory: b, typePhrase: g, typeResponse: f, userColor: v}) {
                try {
                    const t = function getPhraseType(t) {
                        const s = null == t ? void 0 : t.find((e=>l[e]));
                        if (isBadMove(e) && !s && !a)
                            return function getMissedOpportunity() {
                                var e, t, a, s;
                                const n = (null == (t = p.analysisTypes) ? void 0 : t.played.good.includes(null == (e = p.analysisTypes) ? void 0 : e.best.good[0])) || (null == (s = p.analysisTypes) ? void 0 : s.best.good.includes(null == (a = p.analysisTypes) ? void 0 : a.played.good[0])) ? c : i
                                  , o = p.analysisTypes.best.good.find((e=>n[e]));
                                return o ? {
                                    key: o,
                                    value: n[o]
                                } : getCommentaryType()
                            }();
                        return s ? {
                            key: s,
                            value: l[s]
                        } : getCommentaryType()
                    }(getCategory(getResponse()));
                    if (!t)
                        return;
                    const o = function getPhraseKey() {
                        return null != g ? g : p.color === v ? n.J.Response.AnalysisTypes.Phrases.Personal : n.J.Response.AnalysisTypes.Phrases.Impersonal
                    }();
                    h[t.key] || (h[t.key] = {
                        personal: [],
                        impersonal: []
                    });
                    let r = t.value[o][h[t.key][o].length];
                    r || (h[t.key][o] = []);
                    const u = t.value[o][0];
                    if (r = "string" == typeof u ? u : u[p.color],
                    e === s.x.Classifications.Types.GreatFind) {
                        const e = ["FoundWin", "FoundNotLosing"];
                        "Critical(Find)" !== t.key && e.push("Critical(Find)");
                        const a = getCategory(getResponse()).find((t=>e.includes(t)));
                        if (a && !e.includes(t.key)) {
                            const e = l[a][o][0];
                            r += "string" == typeof e ? ` ${e}` : ` ${e[p.color]}`
                        }
                    }
                    return h[t.key][o].push(r),
                    r
                } catch (w) {
                    return
                }
                function getCategory(t) {
                    return t[null != b ? b : isBadMove(e) ? n.J.Response.AnalysisTypes.Categories.Bad : n.J.Response.AnalysisTypes.Categories.Good]
                }
                function getResponse() {
                    return p.analysisTypes[null != f ? f : p.suggestedMove.moveLan === p.playedMove.moveLan ? n.J.Response.AnalysisTypes.ResponseTypes.Best : n.J.Response.AnalysisTypes.ResponseTypes.Played]
                }
                function getCommentaryType() {
                    var a, i;
                    const l = null == (a = (0,
                    u.N)(m)) ? void 0 : a[p.color]
                      , c = null == (i = (0,
                    u.N)(p)) ? void 0 : i[p.color]
                      , h = function getGameStatusCommentary(e) {
                        const t = e.color === d.lA.ColorsAsWords.White ? (0,
                        o.dW)("White") : (0,
                        o.dW)("Black")
                          , a = e.color === d.lA.ColorsAsWords.White ? (0,
                        o.dW)("Black") : (0,
                        o.dW)("White");
                        return {
                            WinningBetter: {
                                impersonal: [(0,
                                o.dW)("%color% still has an advantage, but they no longer have a winning position.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("%color% still has the better position, but they lost their winning advantage.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("You still have an advantage, but you no longer have a winning position."), (0,
                                o.dW)("You still have the better position, but you lost your winning advantage.")]
                            },
                            WinningEqual: {
                                impersonal: [(0,
                                o.dW)("The game is still close to even, but %color% lost their winning advantage.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("%color% lost their winning advantage and now the game is close to equal.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("The game is still close to even, but you lost your winning advantage."), (0,
                                o.dW)("You lost your winning advantage and now the game is close to equal.")]
                            },
                            WinningWorse: {
                                impersonal: [(0,
                                o.dW)("%color% had a winning position, but now %opposingColor% has the advantage.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("%color% lost their winning advantage and now %opposingColor% has the better position.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("You had a winning position, but now your opponent has the advantage."), (0,
                                o.dW)("You lost your winning advantage and now your opponent has the better position.")]
                            },
                            WinningLosing: {
                                impersonal: [(0,
                                o.dW)("This move turned %color%'s winning advantage into a losing position.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("%color%'s position went from winning to losing after that move.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("Oh no! This move turned your winning position into a losing one."), (0,
                                o.dW)("Unfortunately, your position went from winning to losing after that move.")]
                            },
                            BetterEqual: {
                                impersonal: [(0,
                                o.dW)("%color% had an advantage, but now the game is close to equal.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("The game is still close to equal, but %color% lost their advantage.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("You had an advantage, but now the game is close to equal."), (0,
                                o.dW)("The game is still close to equal, but you lost your advantage.")]
                            },
                            BetterWorse: {
                                impersonal: [(0,
                                o.dW)("The advantage has swung from %color% to %opposingColor%.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("%color% had the advantage, but now %opposingColor% does.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("The advantage has swung from you to your opponent."), (0,
                                o.dW)("You had the advantage, but now your opponent does.")]
                            },
                            BetterLosing: {
                                impersonal: [(0,
                                o.dW)("%color% had the advantage, but is now in a losing position.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("%color% had the better position, but now %opposingColor% has a winning advantage.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("You had the advantage, but are now in a losing position."), (0,
                                o.dW)("You had the better position, but now your opponent has a winning advantage.")]
                            },
                            EqualWorse: {
                                impersonal: [(0,
                                o.dW)("The game was close to balanced, but now %color% is worse.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("The game was close to equal, but now %opposingColor% has the advantage.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("The game was close to balanced, but now you are worse."), (0,
                                o.dW)("The game was close to equal, but now your opponent has the advantage.")]
                            },
                            EqualLosing: {
                                impersonal: [(0,
                                o.dW)("The game was close to equal, but now %color% is in a losing position.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("The game was close to balanced, but now %opposingColor% has a winning position.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("The game was close to equal, but now you are in a tough position."), (0,
                                o.dW)("The game was close to balanced, but now your opponent has a winning position.")]
                            },
                            WorseLosing: {
                                impersonal: [(0,
                                o.dW)("%color% was worse off, but now they are in a losing position.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                }), (0,
                                o.dW)("%opposingColor% was better off, but now their position is winning.", {
                                    "%color%": t,
                                    "%opposingColor%": a
                                })],
                                personal: [(0,
                                o.dW)("Your opponent had an advantage, but now their position is winning."), (0,
                                o.dW)("Your opponent was better off, but now they have a winning advantage.")]
                            }
                        }
                    }(p)[`${l}${c}`];
                    if (!(l && c && m && l !== c && isBadMove(e) && h))
                        return function getFallback() {
                            if (t)
                                return;
                            const a = f === n.J.Response.AnalysisTypes.ResponseTypes.Best ? s.x.Classifications.Types.BestMove : e;
                            return {
                                key: a,
                                value: r[a]
                            }
                        }();
                    return {
                        key: f === n.J.Response.AnalysisTypes.ResponseTypes.Best ? s.x.Classifications.Types.BestMove : e,
                        value: h
                    }
                }
                function isBadMove(e) {
                    return [s.x.Classifications.Types.Mistake, s.x.Classifications.Types.Blunder, s.x.Classifications.Types.MissedWin, s.x.Classifications.Types.Inaccuracy].includes(e)
                }
            }
        },
        84542: function(e, t, a) {
            "use strict";
            a.d(t, {
                N: function() {
                    return getGameStatusClassification
                }
            });
            var s = a(67104)
              , n = a(32305);
            const o = {
                Winning: "Winning",
                Better: "Better",
                Equal: "Equal",
                Worse: "Worse",
                Losing: "Losing"
            }
              , r = {
                [o.Winning]: .2,
                [o.Better]: .4,
                [o.Equal]: .5,
                [o.Worse]: .65,
                [o.Losing]: .8
            }
              , i = {
                [o.Winning]: .8,
                [o.Better]: .65,
                [o.Equal]: .5,
                [o.Worse]: .4,
                [o.Losing]: .2
            };
            (0,
            n.dW)("winning"),
            (0,
            n.dW)("better"),
            (0,
            n.dW)("equal"),
            (0,
            n.dW)("worse"),
            (0,
            n.dW)("losing");
            var l = a(923);
            const c = 2e3;
            function getGameStatusValues(e) {
                var t;
                const {WhiteElo: a=c, BlackElo: n=c} = (0,
                l.j)().getHeaders()
                  , o = e === s.lA.ColorsAsWords.White ? r : i
                  , u = {}
                  , d = null != (t = Number(a) > Number(n) ? Number(a) : Number(n)) ? t : c;
                return Object.keys(o).forEach((e=>{
                    const t = Math.log(1 / o[e] - 1) / ((.0685 * d - 12) / 100 * .004) / 100;
                    u[e] = t
                }
                )),
                u
            }
            function getGameStatusClassification(e) {
                if (!e)
                    return null;
                const t = {
                    black: getGameStatusValues(s.lA.ColorsAsWords.Black),
                    white: getGameStatusValues(s.lA.ColorsAsWords.White)
                }
                  , a = {
                    white: "",
                    black: ""
                };
                return Object.keys(t[e.color]).forEach(((n,r,i)=>{
                    const l = t[e.color]
                      , c = e.playedMove.score
                      , u = e.color === s.lA.ColorsAsWords.White ? s.lA.ColorsAsWords.Black : s.lA.ColorsAsWords.White;
                    if (n === o.Winning && function isWinning({score: e, value: t, color: a}) {
                        return a === s.lA.ColorsAsWords.White ? Boolean(e > t) : Boolean(e < t)
                    }({
                        score: c,
                        value: l[n],
                        color: e.color
                    }))
                        return a[e.color] = n,
                        void (a[u] = o.Losing);
                    if (n === o.Losing && function isLosing({score: e, value: t, color: a}) {
                        return a === s.lA.ColorsAsWords.White ? Boolean(e < t) : Boolean(e > t)
                    }({
                        score: c,
                        value: l[n],
                        color: e.color
                    }))
                        return a[e.color] = n,
                        void (a[u] = o.Winning);
                    const d = e.color === s.lA.ColorsAsWords.White ? i[r + 1] : n
                      , h = e.color === s.lA.ColorsAsWords.White ? n : i[r + 1]
                      , p = l[d]
                      , m = l[h];
                    if (function isWithinRange({value: e, min: t, max: a}) {
                        return Number(e) >= t && e < a
                    }({
                        value: c,
                        min: p,
                        max: m
                    })) {
                        const s = Math.abs(c + p) < Math.abs(c + m) ? d : h
                          , n = i.indexOf(s);
                        a[e.color] = s,
                        a[u] = o[Object.keys(t[u]).reverse()[n]]
                    }
                }
                )),
                a
            }
        },
        51247: function(e, t, a) {
            "use strict";
            a.d(t, {
                I: function() {
                    return isPositionValid
                }
            });
            var s = a(3527)
              , n = a.n(s);
            function isPositionValid(e) {
                const t = n().createGame(e);
                return !!t && t.isPositionValid({})
            }
        },
        16989: function(e, t, a) {
            "use strict";
            a.d(t, {
                YE: function() {
                    return s.YE
                },
                XP: function() {
                    return s.XP
                }
            });
            var s = a(14723)
        },
        49790: function(e, t, a) {
            "use strict";
            a.d(t, {
                jC: function() {
                    return n
                },
                R0: function() {
                    return o
                },
                xL: function() {
                    return r
                },
                V5: function() {
                    return i
                }
            });
            var s = a(18160);
            const n = 7e3
              , o = {
                badRequest: s.Z.trans("Oops. Looks like there was an error. Sorry! Please refresh.")
            }
              , r = (s.Z.trans("Avatar uploaded"),
            s.Z.trans("Thank you for your comment."),
            s.Z.trans("Comment deleted."),
            s.Z.trans("You cannot send an empty comment"),
            s.Z.trans("Comment updated."),
            s.Z.trans("Comment link is copied to clipboard"),
            s.Z.trans("Copied to clipboard"),
            s.Z.trans("All forum topics have been marked as read"),
            s.Z.trans("Feature Set! It might take a minute or two to appear."),
            s.Z.trans("Please select the players for whom to send the invitation"),
            s.Z.trans("Your invitations were sent successfully"),
            s.Z.trans("PGN copied to buffer"),
            {
                ALERT_FLASH_CONTAINER: "widget-alert-flash",
                DISMISSING: "alert-banner-dismissing"
            })
              , i = {
                error: "error",
                info: "info",
                success: "success"
            };
            i.error,
            o.badRequest
        },
        26670: function(e, t, a) {
            "use strict";
            a.d(t, {
                el: function() {
                    return createAlert
                },
                OD: function() {
                    return dismissAlert
                },
                x2: function() {
                    return showError
                }
            });
            var s = a(49790);
            function dismissAlert(e) {
                const t = document.getElementById(`alert-${e}`);
                t && hideAlertElement(t)
            }
            function createAlertElement(e) {
                var t;
                e.type !== s.V5.success && function dismissAllButLast(e=2) {
                    var t;
                    const a = getContainer();
                    Array.from(null != (t = null == a ? void 0 : a.querySelectorAll(`.alerts-alert:not(:nth-last-child(-n + ${e}))`)) ? t : []).forEach(hideAlertElement)
                }(2),
                function loadLazyStyle(e) {
                    const t = document.querySelector(`link[data-href*="/${e}.client"]`);
                    t && (t.setAttribute("href", t.getAttribute("data-href")),
                    t.removeAttribute("data-href"))
                }("alerts");
                const a = document.createElement("div");
                a.classList.add("alerts-alert"),
                a.classList.add("alerts-enter"),
                a.classList.add(`alerts-${e.type}`),
                a.setAttribute("id", `alert-${e.id}`);
                const n = document.createElement("span");
                n.classList.add("alerts-message"),
                n.innerHTML = e.message;
                const o = document.createElement("button");
                o.classList.add("alerts-close"),
                o.setAttribute("type", "button"),
                o.innerHTML = '<span class="icon-font-chess x"></span>',
                a.appendChild(n),
                a.appendChild(o),
                null == (t = getContainer()) || t.appendChild(a),
                o.addEventListener("click", onClickClose),
                e.type === s.V5.success && setTimeout(hideAlertElement, s.jC, a)
            }
            function getContainer() {
                return document.getElementById(s.xL.ALERT_FLASH_CONTAINER)
            }
            function hideAlertElement(e) {
                e.classList.add("alerts-leave"),
                setTimeout(removeAlertElement, 200, e)
            }
            function removeAlertElement(e) {
                var t;
                try {
                    null == (t = getContainer()) || t.removeChild(e)
                } catch (a) {
                    !function clearAlerts() {
                        const e = getContainer();
                        e && (e.innerHTML = "")
                    }()
                }
            }
            function onClickClose(e) {
                var t, a;
                const s = null == (a = null == (t = e.target) ? void 0 : t.closest) ? void 0 : a.call(t, ".alerts-alert");
                s && hideAlertElement(s)
            }
            var n = a(54752)
              , o = a.n(n);
            function createAlert({message: e, type: t, id: a}) {
                createAlertElement({
                    id: null != a ? a : o()(),
                    type: t,
                    message: e
                })
            }
            function showError(e=s.R0.badRequest) {
                createAlert({
                    type: s.V5.error,
                    message: e
                })
            }
        },
        67783: function(e, t, a) {
            "use strict";
            a.d(t, {
                lu: function() {
                    return C
                }
            });
            var s = a(67104);
            const n = "icon-background"
              , o = "icon-component"
              , r = "icon-component-shadow"
              , i = "icon-shadow"
              , l = `\n  <path class="${i}" d="M9 .5a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" opacity=".3"/>\n  <path class="${n}" d="M9 0a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" fill="#95bb4a"/>\n  <path d="M9 3.72a.48.48 0 0 0-.44.3L7.24 7.46l-3.68.19a.48.48 0 0 0-.27.84l2.86 2.32-1 3.56a.47.47 0 0 0 .18.5.46.46 0 0 0 .27.09.5.5 0 0 0 .26-.08l3.09-2 3.09 2a.5.5 0 0 0 .26.08.46.46 0 0 0 .27-.09.47.47 0 0 0 .18-.5l-1-3.56 2.86-2.32a.48.48 0 0 0-.27-.84l-3.68-.19L9.44 4A.48.48 0 0 0 9 3.72z" opacity=".1"/>\n  <path d="M9 3.22a.48.48 0 0 0-.44.3L7.24 7l-3.68.19a.48.48 0 0 0-.27.81l2.86 2.32-1 3.56a.47.47 0 0 0 .18.5.46.46 0 0 0 .27.09.5.5 0 0 0 .26-.08l3.09-2 3.09 2a.5.5 0 0 0 .26.08.46.46 0 0 0 .27-.09.47.47 0 0 0 .18-.5l-1-3.56L14.71 8a.48.48 0 0 0-.27-.84L10.76 7 9.44 3.52a.48.48 0 0 0-.44-.3z" fill="#fff"/>\n`
              , c = `\n  <path class="${i}" opacity=".3" d="M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z"/>\n  <path class="${n}" fill="#a88865" d="M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z"/>\n  <path class="${r}" opacity=".3" d="M8.4,6c-1-.75-2.52-1.09-4.83-1.09H2.49v8.71H3.57A8.13,8.13,0,0,1,8.4,14.76Z"/>\n  <path class="${r}" opacity=".3" d="M9.49,14.76a8.14,8.14,0,0,1,4.84-1.17h1.08V4.88H14.33C12,4.88,10.52,5.22,9.49,6Z"/>\n  <path class="${o}" fill="#fff" d="M8.4,5.47c-1-.75-2.52-1.09-4.83-1.09H3v8.71h.58A8.13,8.13,0,0,1,8.4,14.26Z"/>\n  <path class="${o}" fill="#fff" d="M9.49,14.26a8.14,8.14,0,0,1,4.84-1.17h.58V4.38h-.58c-2.32,0-3.81.34-4.84,1.09Z"/>\n`
              , u = `\n  <path class="${i}" d="M9 .5a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" opacity=".3"/>\n  <path class="${n}" d="M9 0a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" fill="#c93430"/>\n  <g class="${r}" opacity=".2">\n    <path d="M14.68 5.48a2.77 2.77 0 0 0-.77-.92 3.81 3.81 0 0 0-1.1-.56 3.86 3.86 0 0 0-1.2-.19 3.68 3.68 0 0 0-1.19.19 5.72 5.72 0 0 0-.9.37l-.33.2a3.5 3.5 0 0 1 .43.63A3.26 3.26 0 0 1 10 6.66a.45.45 0 0 0 .19 0l.11-.09a1.13 1.13 0 0 1 .28-.18 2.54 2.54 0 0 1 .42-.23 1.61 1.61 0 0 1 .49-.07 1.13 1.13 0 0 1 .73.24.74.74 0 0 1 .3.6 1 1 0 0 1-.25.68c-.17.19-.39.4-.65.64s-.33.27-.49.42a3.08 3.08 0 0 0-.45.55 2.55 2.55 0 0 0-.33.66 2.43 2.43 0 0 0-.13.84v.35a.34.34 0 0 0 .32.32h1.72a.27.27 0 0 0 .22-.1.29.29 0 0 0 .09-.22v-.21a.93.93 0 0 1 .27-.7 6.62 6.62 0 0 1 .65-.64A4.62 4.62 0 0 0 14 9a5.58 5.58 0 0 0 .49-.6 2.92 2.92 0 0 0 .36-.73 3.08 3.08 0 0 0 .14-1 2.76 2.76 0 0 0-.31-1.19zM12.3 12.72h-1.89a.29.29 0 0 0-.22.09.33.33 0 0 0-.09.22v1.84a.31.31 0 0 0 .09.22.26.26 0 0 0 .22.1h1.89a.33.33 0 0 0 .23-.09.34.34 0 0 0 .1-.23V13a.34.34 0 0 0-.1-.22.33.33 0 0 0-.23-.06zM6.68 12.72H4.79a.29.29 0 0 0-.22.09.33.33 0 0 0-.09.22v1.84a.35.35 0 0 0 .08.22.28.28 0 0 0 .23.1h1.89a.35.35 0 0 0 .23-.09.34.34 0 0 0 .1-.23V13a.34.34 0 0 0-.1-.22.35.35 0 0 0-.23-.06zM8.28 4.56A3.63 3.63 0 0 0 7.19 4 3.86 3.86 0 0 0 6 3.81 3.78 3.78 0 0 0 4.79 4a6.65 6.65 0 0 0-.9.37 2.84 2.84 0 0 0-.55.38l-.21.19a.31.31 0 0 0 0 .41l1 1.21a.31.31 0 0 0 .21.13.54.54 0 0 0 .25-.06l.1-.09a1.46 1.46 0 0 1 .29-.18 2.2 2.2 0 0 1 .41-.18 1.57 1.57 0 0 1 .49-.07 1.13 1.13 0 0 1 .73.24.74.74 0 0 1 .3.6 1 1 0 0 1-.26.68c-.17.19-.38.4-.64.64a6.4 6.4 0 0 0-.49.42 2.7 2.7 0 0 0-.52.53 2.94 2.94 0 0 0-.34.66 2.7 2.7 0 0 0-.12.84v.35a.29.29 0 0 0 .09.22.28.28 0 0 0 .22.1h1.76a.26.26 0 0 0 .21-.1.29.29 0 0 0 .09-.22v-.21a1 1 0 0 1 .27-.7 8.22 8.22 0 0 1 .66-.64A5.68 5.68 0 0 0 8.36 9a7 7 0 0 0 .48-.6 3 3 0 0 0 .37-.73 3.1 3.1 0 0 0 .13-1 2.67 2.67 0 0 0-1.06-2.11z"/>\n  </g>\n  <path class="${o}" fill="#fff" d="M14.68 5a2.77 2.77 0 0 0-.77-.92 3.81 3.81 0 0 0-1.1-.56 3.86 3.86 0 0 0-1.2-.19 3.68 3.68 0 0 0-1.19.17 5.72 5.72 0 0 0-.9.37l-.33.2a3.5 3.5 0 0 1 .43.63A3.26 3.26 0 0 1 10 6.16a.45.45 0 0 0 .19 0l.09-.16a1.13 1.13 0 0 1 .28-.18 2.54 2.54 0 0 1 .44-.16 1.61 1.61 0 0 1 .49-.07 1.13 1.13 0 0 1 .73.24.74.74 0 0 1 .3.6 1 1 0 0 1-.25.68c-.17.19-.39.4-.65.64s-.33.27-.49.42a3.08 3.08 0 0 0-.45.55 2.55 2.55 0 0 0-.33.66 2.43 2.43 0 0 0-.13.84v.35a.34.34 0 0 0 .32.32h1.72a.27.27 0 0 0 .22-.1.29.29 0 0 0 .09-.22v-.21a.93.93 0 0 1 .27-.7 6.62 6.62 0 0 1 .62-.66 4.62 4.62 0 0 0 .54-.46 5.58 5.58 0 0 0 .49-.6 2.92 2.92 0 0 0 .36-.73 3.08 3.08 0 0 0 .14-1A2.76 2.76 0 0 0 14.68 5zM12.3 12.22h-1.89a.29.29 0 0 0-.22.09.33.33 0 0 0-.09.22v1.84a.31.31 0 0 0 .09.22.26.26 0 0 0 .22.1h1.89a.33.33 0 0 0 .23-.09.34.34 0 0 0 .1-.23v-1.84a.34.34 0 0 0-.1-.22.33.33 0 0 0-.23-.09zM6.68 12.22H4.79a.29.29 0 0 0-.22.09.33.33 0 0 0-.09.22v1.84a.35.35 0 0 0 .08.22.28.28 0 0 0 .23.1h1.89a.35.35 0 0 0 .23-.09.34.34 0 0 0 .1-.23v-1.84a.34.34 0 0 0-.1-.22.35.35 0 0 0-.23-.09zM8.28 4.06a3.63 3.63 0 0 0-1.09-.56A3.86 3.86 0 0 0 6 3.31a3.78 3.78 0 0 0-1.2.17 6.65 6.65 0 0 0-.9.37 2.84 2.84 0 0 0-.55.38l-.21.19a.31.31 0 0 0 0 .41L4.09 6a.31.31 0 0 0 .21.13.54.54 0 0 0 .25-.06l.1-.07a1.46 1.46 0 0 1 .29-.18 2.2 2.2 0 0 1 .41-.18 1.57 1.57 0 0 1 .49-.07 1.13 1.13 0 0 1 .73.24.74.74 0 0 1 .3.6 1 1 0 0 1-.26.68c-.17.19-.38.4-.64.64a6.4 6.4 0 0 0-.49.42 2.7 2.7 0 0 0-.48.57 2.94 2.94 0 0 0-.34.66 2.7 2.7 0 0 0-.12.84v.35a.29.29 0 0 0 .09.22.28.28 0 0 0 .22.1h1.76a.26.26 0 0 0 .21-.1.29.29 0 0 0 .09-.22v-.21a1 1 0 0 1 .27-.7A8.22 8.22 0 0 1 7.84 9a5.68 5.68 0 0 0 .52-.48 7 7 0 0 0 .48-.6 3 3 0 0 0 .37-.73 3.1 3.1 0 0 0 .13-1 2.67 2.67 0 0 0-1.06-2.13z"/>\n`
              , d = `\n  <path class="${i}" opacity=".3" d="M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z"/>\n  <path class="${n}" fill="#1baca6" d="M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z"/>\n  <path class="${r}" opacity=".2" d="M12.57,14.85a.3.3,0,0,1-.1.24.32.32,0,0,1-.23.1h-2a.3.3,0,0,1-.24-.1.41.41,0,0,1-.08-.24V13a.32.32,0,0,1,.09-.23.29.29,0,0,1,.23-.1h2a.32.32,0,0,1,.23.1.29.29,0,0,1,.1.23Zm-.11-3.93a.33.33,0,0,1-.1.23.34.34,0,0,1-.23.08H10.35a.32.32,0,0,1-.34-.31L9.86,4.15A.42.42,0,0,1,10,3.91a.3.3,0,0,1,.24-.1H12.3a.36.36,0,0,1,.25.1.42.42,0,0,1,.09.24Z"/>\n  <path class="${o}" fill="#fff" d="M12.57,14.35a.3.3,0,0,1-.1.24.32.32,0,0,1-.23.1h-2a.3.3,0,0,1-.24-.1.41.41,0,0,1-.08-.24v-1.9a.32.32,0,0,1,.09-.23.29.29,0,0,1,.23-.1h2a.32.32,0,0,1,.23.1.29.29,0,0,1,.1.23Zm-.11-3.93a.33.33,0,0,1-.1.23.34.34,0,0,1-.23.08H10.35a.32.32,0,0,1-.34-.31L9.86,3.65A.42.42,0,0,1,10,3.41a.3.3,0,0,1,.24-.1H12.3a.36.36,0,0,1,.25.1.42.42,0,0,1,.09.24Z"/>\n  <path class="${r}" opacity=".2" d="M8.07,14.85a.3.3,0,0,1-.1.24.32.32,0,0,1-.23.1h-2a.3.3,0,0,1-.24-.1.41.41,0,0,1-.08-.24V13a.32.32,0,0,1,.09-.23.29.29,0,0,1,.23-.1h2a.32.32,0,0,1,.23.1.29.29,0,0,1,.1.23ZM8,10.92a.33.33,0,0,1-.1.23.34.34,0,0,1-.23.08H5.85a.32.32,0,0,1-.34-.31L5.36,4.15a.42.42,0,0,1,.09-.24.3.3,0,0,1,.24-.1H7.8a.36.36,0,0,1,.25.1.42.42,0,0,1,.09.24Z"/>\n  <path class="${o}" fill="#fff" d="M8.07,14.35a.3.3,0,0,1-.1.24.32.32,0,0,1-.23.1h-2a.3.3,0,0,1-.24-.1.41.41,0,0,1-.08-.24v-1.9a.32.32,0,0,1,.09-.23.29.29,0,0,1,.23-.1h2a.32.32,0,0,1,.23.1.29.29,0,0,1,.1.23ZM8,10.42a.33.33,0,0,1-.1.23.34.34,0,0,1-.23.08H5.85a.32.32,0,0,1-.34-.31L5.36,3.65a.42.42,0,0,1,.09-.24.3.3,0,0,1,.24-.1H7.8a.36.36,0,0,1,.25.1.42.42,0,0,1,.09.24Z"/>\n`
              , h = `\n  <path class="${i}" d="M9 .5a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" opacity=".3"/>\n  <path class="${n}" d="M9 0a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" fill="#95bb4a"/>\n  <path class="${r}" d="M15.11 6.81l-5.66 5.66-1.66 1.65a.38.38 0 0 1-.55 0L2.89 9.78a.39.39 0 0 1 0-.55l1.39-1.39a.39.39 0 0 1 .55 0l2.69 2.69 5.65-5.65a.38.38 0 0 1 .55 0l1.39 1.38a.39.39 0 0 1 0 .55z" opacity=".2"/>\n  <path class="${o}" d="M15.11 6.31L9.45 12l-1.66 1.62a.38.38 0 0 1-.55 0L2.89 9.28a.39.39 0 0 1 0-.55l1.39-1.39a.39.39 0 0 1 .55 0L7.52 10l5.65-5.65a.38.38 0 0 1 .55 0l1.39 1.38a.39.39 0 0 1 0 .58z" fill="#fff"/>\n`
              , p = `\n  <path class="${i}" opacity=".3" d="M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z"/>\n  <path class="${n}" fill="#5a9ac0" d="M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z"/>\n  <path class="${r}" opacity=".2" d="M15,6.8,7.81,14a.38.38,0,0,1-.55,0L3,9.73a.41.41,0,0,1,0-.55L4.36,7.81a.4.4,0,0,1,.54,0l2.63,2.64L13.1,4.9a.38.38,0,0,1,.55,0L15,6.25A.38.38,0,0,1,15,6.8Z"/>\n  <path class="${o}" fill="#ffffff" d="M15,6.3,7.81,13.49a.38.38,0,0,1-.55,0L3,9.23a.41.41,0,0,1,0-.55L4.36,7.31a.4.4,0,0,1,.54,0L7.53,10,13.1,4.4a.38.38,0,0,1,.55,0L15,5.75A.38.38,0,0,1,15,6.3Z"/>\n`
              , m = `\n  <path class="${i}" opacity=".3" d="M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z" />\n  <path class="${n}" fill="#95bb4a" d="M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z" />\n  <path class="${r}" opacity=".1"\n    d="M4.44,5.41v7.68a1,1,0,0,0,1,1h7.68a1,1,0,0,0,1-1V5.41a1,1,0,0,0-1-1H5.41A1,1,0,0,0,4.44,5.41ZM12,12H6.53V6.53H12Z" />\n  <path class="${o}" fill="#ffffff"\n    d="M4.19,5.16v7.68a1,1,0,0,0,1,1h7.68a1,1,0,0,0,1-1V5.16a1,1,0,0,0-1-1H5.16A1,1,0,0,0,4.19,5.16Zm7.53,6.56H6.28V6.28h5.44Z" />\n`
              , b = `\n  <path class="${i}" opacity=".3" d="M9,.5a9,9,0,1,0,9,9A9,9,0,0,0,9,.5Z"/>\n  <path class="${n}" fill="#a09f9e" d="M9,0a9,9,0,1,0,9,9A9,9,0,0,0,9,0Z"/>\n  <path class="${o}" fill="#fff" d="M9,2.5A6.5,6.5,0,1,0,15.5,9,6.5,6.5,0,0,0,9,2.5Z"/>\n  <path class="${n}" fill="#a09f9e" d="M9,5a4,4,0,1,0,4,4A4,4,0,0,0,9,5Z"/>\n  <path class="${o}" fill="#fff" d="M9,7.5A1.5,1.5,0,1,0,10.5,9,1.5,1.5,0,0,0,9,7.5Z"/>\n`
              , g = `\n  <path class="${i}" d="M9 .5a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" opacity=".3"/>\n  <path class="${n}" d="M9 0a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" fill="#f0c15c"/>\n  <path class="${r}" opacity=".3" d="M13.51 14.85a.3.3 0 0 1-.1.24.33.33 0 0 1-.24.1h-2a.29.29 0 0 1-.23-.1.36.36 0 0 1-.09-.24V13a.33.33 0 0 1 .1-.23.27.27 0 0 1 .22-.1h2a.33.33 0 0 1 .24.1.29.29 0 0 1 .1.23zm-.12-3.93a.29.29 0 0 1-.1.23.31.31 0 0 1-.23.08h-1.77a.31.31 0 0 1-.34-.31l-.15-6.77a.49.49 0 0 1 .08-.24.32.32 0 0 1 .25-.1h2.11a.38.38 0 0 1 .25.1.42.42 0 0 1 .09.24z"/>\n  <path class="${o}" fill="#fff" d="M13.51 14.35a.3.3 0 0 1-.1.24.33.33 0 0 1-.24.1h-2a.29.29 0 0 1-.23-.1.36.36 0 0 1-.09-.24v-1.9a.33.33 0 0 1 .1-.23.27.27 0 0 1 .22-.1h2a.33.33 0 0 1 .24.1.29.29 0 0 1 .1.23zm-.12-3.93a.29.29 0 0 1-.1.23.31.31 0 0 1-.23.08h-1.77a.31.31 0 0 1-.34-.31l-.15-6.77a.49.49 0 0 1 .08-.24.32.32 0 0 1 .25-.1h2.11a.38.38 0 0 1 .25.1.42.42 0 0 1 .09.24z"/>\n  <path class="${r}" opacity=".3" d="M7.5 14.87a.33.33 0 0 1-.09.23.35.35 0 0 1-.23.09H5.29a.28.28 0 0 1-.23-.1.35.35 0 0 1-.06-.22V13a.33.33 0 0 1 .09-.22.29.29 0 0 1 .22-.09h1.87a.35.35 0 0 1 .23.09.33.33 0 0 1 .09.22zm2.21-7.16a3 3 0 0 1-.37.73 7 7 0 0 1-.48.6 5.68 5.68 0 0 1-.52.48 8.22 8.22 0 0 0-.66.64 1 1 0 0 0-.27.7v.21a.29.29 0 0 1-.09.22.26.26 0 0 1-.21.1H5.38a.28.28 0 0 1-.22-.1.29.29 0 0 1-.09-.22v-.35a2.7 2.7 0 0 1 .12-.84 3.39 3.39 0 0 1 .33-.66A3.12 3.12 0 0 1 6 8.67a6.4 6.4 0 0 1 .49-.42c.25-.24.47-.45.64-.64a1 1 0 0 0 .26-.68.74.74 0 0 0-.3-.6 1.14 1.14 0 0 0-.73-.24 1.53 1.53 0 0 0-.49.07 2.2 2.2 0 0 0-.41.18 1.46 1.46 0 0 0-.29.18l-.1.09a.54.54 0 0 1-.25.06.31.31 0 0 1-.21-.13l-1-1.21a.31.31 0 0 1 0-.41l.21-.19a2.84 2.84 0 0 1 .55-.38A6.65 6.65 0 0 1 5.29 4a3.74 3.74 0 0 1 1.2-.17 3.86 3.86 0 0 1 1.2.17 3.75 3.75 0 0 1 1.09.56 2.67 2.67 0 0 1 1.06 2.19 3.1 3.1 0 0 1-.13.96z"/>\n  <path class="${o}" fill="#fff" d="M7.5 14.37a.33.33 0 0 1-.09.23.35.35 0 0 1-.23.09H5.29a.28.28 0 0 1-.23-.1.35.35 0 0 1-.06-.22v-1.84a.33.33 0 0 1 .09-.22.29.29 0 0 1 .22-.09h1.87a.35.35 0 0 1 .23.09.33.33 0 0 1 .09.22zm2.21-7.16a3 3 0 0 1-.37.73 7 7 0 0 1-.48.6 5.68 5.68 0 0 1-.52.46 8.22 8.22 0 0 0-.66.64 1 1 0 0 0-.27.7v.21a.29.29 0 0 1-.09.22.26.26 0 0 1-.21.1H5.38a.28.28 0 0 1-.22-.1.29.29 0 0 1-.09-.22v-.35a2.7 2.7 0 0 1 .12-.84 3.39 3.39 0 0 1 .33-.66A3.12 3.12 0 0 1 6 8.17a6.4 6.4 0 0 1 .49-.42c.25-.24.47-.45.64-.64a1 1 0 0 0 .26-.68.74.74 0 0 0-.3-.6 1.14 1.14 0 0 0-.73-.24 1.53 1.53 0 0 0-.49.07 2.2 2.2 0 0 0-.41.18 1.46 1.46 0 0 0-.31.16l-.1.09a.54.54 0 0 1-.25.06.31.31 0 0 1-.21-.15l-1-1.21a.31.31 0 0 1 0-.41l.21-.19a2.84 2.84 0 0 1 .55-.38 6.65 6.65 0 0 1 .9-.37 3.74 3.74 0 0 1 1.2-.17 3.86 3.86 0 0 1 1.2.19 3.75 3.75 0 0 1 1.09.56 2.67 2.67 0 0 1 1.1 2.23 3.1 3.1 0 0 1-.13.96z"/>\n`
              , f = `\n  <path class="${i}" d="M9 .5a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" opacity=".3"/>\n  <path class="${n}" d="M9 0a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" fill="#c93430"/>\n  <path class="${r}" d="M14 12.58a.4.4 0 0 1 0 .56l-1.38 1.38a.4.4 0 0 1-.56 0L9 11.44l-3.08 3.08a.4.4 0 0 1-.56 0L4 13.14a.4.4 0 0 1 0-.56L7.06 9.5 4 6.42a.4.4 0 0 1 0-.56l1.36-1.38a.4.4 0 0 1 .56 0L9 7.56l3.08-3.08a.4.4 0 0 1 .56 0L14 5.86a.4.4 0 0 1 0 .56L10.94 9.5z" opacity=".2"/>\n  <path class="${o}" d="M14 12.08a.4.4 0 0 1 0 .56L12.64 14a.4.4 0 0 1-.56 0L9 10.94 5.92 14a.4.4 0 0 1-.56 0L4 12.64a.4.4 0 0 1 0-.56L7.06 9 4 5.92a.4.4 0 0 1 0-.56L5.36 4a.4.4 0 0 1 .56 0L9 7.06 12.08 4a.4.4 0 0 1 .56 0L14 5.36a.4.4 0 0 1 0 .56L10.94 9z" fill="#f1f2f2"/>\n`
              , v = `\n  <path class="${i}" d="M9 .5a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" opacity=".3"/>\n  <path class="${n}" d="M9 0a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" fill="#dd5357"/>\n  <path class="${r}" d="M14 12.58a.4.4 0 0 1 0 .56l-1.38 1.38a.4.4 0 0 1-.56 0L9 11.44l-3.08 3.08a.4.4 0 0 1-.56 0L4 13.14a.4.4 0 0 1 0-.56L7.06 9.5 4 6.42a.4.4 0 0 1 0-.56l1.36-1.38a.4.4 0 0 1 .56 0L9 7.56l3.08-3.08a.4.4 0 0 1 .56 0L14 5.86a.4.4 0 0 1 0 .56L10.94 9.5z" opacity=".2"/>\n  <path class="${o}" d="M14 12.08a.4.4 0 0 1 0 .56L12.64 14a.4.4 0 0 1-.56 0L9 10.94 5.92 14a.4.4 0 0 1-.56 0L4 12.64a.4.4 0 0 1 0-.56L7.06 9 4 5.92a.4.4 0 0 1 0-.56L5.36 4a.4.4 0 0 1 .56 0L9 7.06 12.08 4a.4.4 0 0 1 .56 0L14 5.36a.4.4 0 0 1 0 .56L10.94 9z" fill="#f1f2f2"/>\n`
              , w = `\n  <path class="${i}" d="M9 .5a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" opacity=".3"/>\n  <path class="${n}" d="M9 0a9 9 0 1 0 9 9 9 9 0 0 0-9-9z" fill="#e6912c"/>\n  <path class="${r}" d="M9.82 14.87a.34.34 0 0 1-.1.23.33.33 0 0 1-.23.09H7.6a.26.26 0 0 1-.22-.1.31.31 0 0 1-.09-.22V13a.33.33 0 0 1 .09-.22.29.29 0 0 1 .22-.09h1.89a.33.33 0 0 1 .23.09.34.34 0 0 1 .1.22zM12 7.71a3.31 3.31 0 0 1-.36.73 7.11 7.11 0 0 1-.49.6 4.62 4.62 0 0 1-.52.48 6.62 6.62 0 0 0-.65.64.93.93 0 0 0-.27.7v.21a.29.29 0 0 1-.09.22.28.28 0 0 1-.22.1H7.69a.3.3 0 0 1-.22-.1.29.29 0 0 1-.09-.22v-.35a2.43 2.43 0 0 1 .13-.84 2.55 2.55 0 0 1 .33-.66 3.08 3.08 0 0 1 .45-.55c.16-.15.33-.29.49-.42s.47-.45.64-.64a1 1 0 0 0 .26-.68.74.74 0 0 0-.3-.6 1.13 1.13 0 0 0-.73-.24 1.57 1.57 0 0 0-.49.07 2.54 2.54 0 0 0-.41.18 1.46 1.46 0 0 0-.29.18l-.1.09a.53.53 0 0 1-.24.06c-.12 0-.19-.07-.21-.13l-1-1.21a.3.3 0 0 1 0-.41l.21-.19a2.67 2.67 0 0 1 .56-.38A5.72 5.72 0 0 1 7.61 4a3.68 3.68 0 0 1 1.19-.19A3.86 3.86 0 0 1 10 4a3.63 3.63 0 0 1 1.09.56 2.79 2.79 0 0 1 .78.92 2.76 2.76 0 0 1 .29 1.27 3.08 3.08 0 0 1-.16.96z" opacity=".2"/>\n  <path class="${o}" d="M9.82 14.37a.34.34 0 0 1-.1.23.33.33 0 0 1-.23.09H7.6a.26.26 0 0 1-.22-.1.31.31 0 0 1-.09-.22v-1.84a.33.33 0 0 1 .09-.22.29.29 0 0 1 .22-.09h1.89a.33.33 0 0 1 .23.09.34.34 0 0 1 .1.22zM12 7.21a3.31 3.31 0 0 1-.36.73 7.11 7.11 0 0 1-.49.6 4.62 4.62 0 0 1-.52.48 6.62 6.62 0 0 0-.65.64.93.93 0 0 0-.27.7v.21a.29.29 0 0 1-.09.22.28.28 0 0 1-.22.1H7.69a.3.3 0 0 1-.22-.1.29.29 0 0 1-.09-.22v-.35a2.43 2.43 0 0 1 .13-.84 2.55 2.55 0 0 1 .33-.66 3.08 3.08 0 0 1 .45-.55c.16-.15.33-.29.49-.42s.47-.45.64-.64a1 1 0 0 0 .26-.68.74.74 0 0 0-.3-.6 1.13 1.13 0 0 0-.73-.24 1.57 1.57 0 0 0-.49.07 2.54 2.54 0 0 0-.41.18 1.46 1.46 0 0 0-.29.16l-.1.09a.53.53 0 0 1-.24.06C7 6.14 6.93 6.1 6.91 6l-1-1.21a.3.3 0 0 1 0-.41l.21-.19a2.67 2.67 0 0 1 .56-.38 5.72 5.72 0 0 1 .9-.37 3.68 3.68 0 0 1 1.22-.13 3.86 3.86 0 0 1 1.2.19 3.63 3.63 0 0 1 1.09.56 2.79 2.79 0 0 1 .78.92 2.76 2.76 0 0 1 .29 1.27 3.08 3.08 0 0 1-.16.96z" fill="#fff"/>\n`
              , y = `\n    <path class="${i}" d="M6.33,16.85l-6-12A3,3,0,0,1,3,.5H15a3,3,0,0,1,2.67,4.33l-6,12A3,3,0,0,1,6.33,16.85Z" opacity=".3"/>\n    <path class="${n}" d="M6.33,16.35l-6-12A3,3,0,0,1,3,0H15a3,3,0,0,1,2.67,4.33l-6,12A3,3,0,0,1,6.33,16.35Z" fill="#c93430"/>\n    <path class="${r}" d="M8.92,2,5.9,9.3A.14.14,0,0,0,6,9.48h2.6a.14.14,0,0,1,.14.14l0,5.4c0,.12.18.19.23.08l3.7-7.92A.13.13,0,0,0,12.53,7H9.64a.14.14,0,0,1-.14-.13L9.15,2.05C9.15,1.93,9,1.87,8.92,2Z" opacity=".2"/>\n    <path class="${o}" d="M8.92,1.48,5.9,8.8A.14.14,0,0,0,6,9h2.6a.14.14,0,0,1,.14.14l0,5.4c0,.12.18.19.23.08l3.7-7.92a.13.13,0,0,0-.13-.18H9.64a.14.14,0,0,1-.14-.13L9.15,1.55C9.15,1.43,9,1.37,8.92,1.48Z" fill="#fff"/>\n`;
            var k = a(32305)
              , _ = a(26211);
            a(59526);
            s.$l.Animation.Types.Arcade,
            s.$l.Animation.Types.Default,
            s.$l.Animation.Types.Fast,
            s.$l.Animation.Types.Natural,
            s.$l.Animation.Types.None,
            s.$l.Animation.Types.Slow,
            (0,
            k.dW)("Best Move"),
            (0,
            k.dW)("is best"),
            _.v.$4,
            (0,
            k.dW)("Blunder"),
            (0,
            k.dW)("is a blunder"),
            (0,
            k.dW)("Book"),
            (0,
            k.dW)("is a book move"),
            (0,
            k.dW)("Brilliant"),
            (0,
            k.dW)("is brilliant"),
            (0,
            k.dW)("Correct"),
            (0,
            k.dW)("Critical"),
            (0,
            k.dW)("Excellent"),
            (0,
            k.dW)("is excellent"),
            (0,
            k.dW)("Forced"),
            (0,
            k.dW)("is forced"),
            (0,
            k.dW)("Good"),
            (0,
            k.dW)("is good"),
            _.v.$6,
            (0,
            k.dW)("Inaccuracy"),
            (0,
            k.dW)("is an inaccuracy"),
            (0,
            k.dW)("Incorrect"),
            (0,
            k.dW)("Missed Win"),
            (0,
            k.dW)("is a missed win"),
            _.v.$2,
            (0,
            k.dW)("Mistake"),
            (0,
            k.dW)("is a mistake"),
            (0,
            k.dW)("Threat"),
            (0,
            k.dW)("is threat");
            const C = [{
                value: "off",
                label: (0,
                k.dW)("None")
            }, {
                value: "inside",
                label: (0,
                k.dW)("Inside")
            }, {
                value: "outside",
                label: (0,
                k.dW)("Outside")
            }]
        },
        59526: function(e, t, a) {
            "use strict";
            a.d(t, {
                Y: function() {
                    return s
                }
            });
            const s = {
                pieces: ["real3d"],
                animations: ["arcade", "natural"]
            }
        },
        27359: function(e, t, a) {
            "use strict";
            a.d(t, {
                zl: function() {
                    return getAbbreviatedScore
                },
                D4: function() {
                    return getFormattedScore
                },
                tu: function() {
                    return getWhiteBarPercentage
                }
            });
            const s = 50
              , n = 45
              , o = 5
              , getFormattedMoveScore = (e=0)=>`${e > 0 ? "+" : ""}${e.toFixed(((e=0)=>3 - String(Math.floor(Math.abs(e))).length)(Math.min(100, Math.abs(e))))}`;
            const moveIsCheckmate = (e={})=>0 === e.mateIn
              , moveIsTablebase = (e={})=>e.tablebaseOutcome
              , moveIsStalemate = (e={})=>e.stalemate
              , moveIsMateIn = (e={})=>"number" == typeof e.mateIn
              , scoreIsPositive = (e=0)=>null !== e && e > 0
              , getWhiteBarPercentage = (e={})=>{
                var t;
                const a = ((e=0)=>{
                    if (null !== e) {
                        if (e > o)
                            return o;
                        if (e < -o)
                            return -o
                    }
                    return e
                }
                )(null != (t = null == e ? void 0 : e.score) ? t : null);
                return moveIsMateIn(e) ? (e=>null !== e && e > 0 ? 100 : 0)(a) : moveIsTablebase(e) ? ((e={})=>"1-0" === e.tablebaseOutcome ? 100 : "0-1" === e.tablebaseOutcome ? 0 : 50)(e) : scoreIsPositive(a) ? (e=>(null != e ? e : 0) * n / o + s)(a) : ((e=0)=>null !== e && e < 0)(a) ? (e=>s - Math.abs(null != e ? e : 0) * n / o)(a) : s
            }
              , getFormattedScore = (e={})=>{
                var t;
                return moveIsCheckmate(e) ? scoreIsPositive(e.score) ? "1-0" : "0-1" : moveIsStalemate(e) ? "Â½-Â½" : moveIsMateIn(e) ? `${scoreIsPositive(e.score) ? "+" : "-"}M${Math.abs(null != (t = e.mateIn) ? t : 0)}` : getFormattedMoveScore(Math.min(100, e.score))
            }
            ;
            function getAbbreviatedScore(e={}) {
                var t;
                return moveIsCheckmate(e) ? scoreIsPositive(e.score) ? "1-0" : "0-1" : moveIsStalemate(e) ? "Â½" : moveIsMateIn(e) ? `M${Math.abs(null != (t = e.mateIn) ? t : 0)}` : moveIsTablebase(e) ? "TB" : function getAbbreviatedFormattedMoveScore(e) {
                    const t = Math.abs(e);
                    if (!e)
                        return "0.0";
                    const a = t.toString()
                      , s = a.indexOf(".");
                    return -1 === s && t < 10 ? t.toFixed(1) : -1 === s || s >= 2 ? Math.floor(t).toString() : a.substring(0, 4 - s)
                }(e.score)
            }
        },
        61682: function(e, t, a) {
            "use strict";
            a.d(t, {
                _G: function() {
                    return d
                },
                $y: function() {
                    return h
                },
                xL: function() {
                    return m
                },
                Iz: function() {
                    return p
                }
            });
            const s = "v-board-popover"
              , n = "v-tooltip";
            var o, r, i, l, c = a(63754), u = a(18160);
            null == (r = null == (o = window.chesscom) ? void 0 : o.features) || r.includes("blogs_modern_featuring_write");
            const d = {
                BLOG: "blog",
                CSRF_TOKEN: null == (l = null == (i = window.context) ? void 0 : i.csrf) ? void 0 : l.token,
                DARK_MODE: "dark-mode",
                DEFAULT_LOCALE: "en_US",
                LESSONS: "lessons",
                NEWS: "news",
                VIDEO: "video",
                GRID_VIEW: "grid",
                LIST_VIEW: "list",
                LOCALE: window.context && window.context.locale || "en_US",
                LOGGED_IN: window.context && window.context.user,
                TIME: {
                    hour: 36e5
                },
                USERNAME: window.context && window.context.user ? window.context.user.username : null,
                USER_COLOR_SCHEME: "COLOR_SCHEME"
            }
              , h = {
                CHESS_960: "chess960"
            }
              , p = {
                category: e=>u.Z.trans(e, {}, "dynamic"),
                daysOfWeek: [u.Z.trans("Sunday"), u.Z.trans("Monday"), u.Z.trans("Tuesday"), u.Z.trans("Wednesday"), u.Z.trans("Thursday"), u.Z.trans("Friday"), u.Z.trans("Saturday")],
                loading: u.Z.trans("Loading..."),
                months: [u.Z.trans("January"), u.Z.trans("February"), u.Z.trans("March"), u.Z.trans("April"), u.Z.trans("May"), u.Z.trans("June"), u.Z.trans("July"), u.Z.trans("August"), u.Z.trans("September"), u.Z.trans("October"), u.Z.trans("November"), u.Z.trans("December")],
                monthsAbbreviated: [u.Z.trans("Jan"), u.Z.trans("Feb"), u.Z.trans("Mar"), u.Z.trans("Apr"), u.Z.trans("May"), u.Z.trans("Jun"), u.Z.trans("Jul"), u.Z.trans("Aug"), u.Z.trans("Sep"), u.Z.trans("Oct"), u.Z.trans("Nov"), u.Z.trans("Dec")],
                noResult: u.Z.trans("No results found."),
                pleaseEnter: e=>u.Z.trans("Please enter %number% or more characters", {
                    "%number%": e
                }),
                showMore: u.Z.trans("More"),
                showLess: u.Z.trans("Less"),
                lessonsHintMessage: u.Z.trans("Let me help you learn everything you need to know with this guide."),
                nextLessonHintMessage: u.Z.trans("Your next lesson is ready. Study daily if you really want to improve!"),
                openingsHintMessage: u.Z.trans("Let me help you improve your openings!")
            }
              , m = {
                AMPLITUDE_LOGGER: "amplitude-logger",
                AMPLITUDE_LOG_SELECTION: "[data-log-selection-to-amplitude]",
                BOARD_POPOVER: s,
                CAPTCHA: "captcha",
                COLLAPSE: "v-toggle-collapse",
                COLLAPSED: "toggle-collapsed",
                CONTENT_AD: "content-ad",
                CONTENT_CATEGORY_SELECT: "content-category-select",
                CONTENT_LANGUAGE_SELECT: "content-language-select",
                CONFIRM_OPEN: "confirm-open",
                CONFIRM_POPOVER: "v-confirm-popover",
                CONFIRM_POPOVER_INLINE: "confirm-popover-inline",
                DELETE_CONTENT: "post-category-link-delete",
                DONATE_MODAL: "donate-modal",
                FEATURE_SIDEBAR_LINK: "post-category-link-feature",
                FILTERS: "page-filters",
                FOLLOW_UNFOLLOW_AUTHOR: "follow-unfollow-author",
                FORM_DATEPICKER: "v-datepicker",
                FORM_DROPDOWN: "form-dropdown",
                GAME_PREVIEW: "game-preview",
                GIFT_MEMBERSHIP_BUTTON: "give-gift-membership",
                GIFT_MEMBERSHIP_MODAL: "gift-membership-modal",
                HEADLINE_SIDEBAR_LINK: "post-category-link-headline",
                HIDDEN: "toggle-hidden",
                HINT_WRAPPER: "hint-wrapper",
                LANGUAGE_DROPDOWN: "post-view-languages",
                MESSAGE_PARENT: "vue-message",
                NAVIGATION_FOOTER: "navigation-footer",
                NEW_GAME: "new-game",
                PAGINATION_BOTTOM: "pagination-bottom",
                PAGINATION_BUTTON: "ui_pagination-item-component",
                PAGINATION_TOP: "pagination-top",
                PAGINATION_SCROLL_TOP: ".pagination-scroll-to-top",
                POST_AUTHOR_FOLLOW: "post-author-follow",
                POST_CAN_EDIT_URL: "post-can-edit-url",
                POST_EDIT_URL: "post-edit-url",
                POST_EDIT_URL_FIELD: "post-edit-url-field",
                POST_IMAGE_BUTTON: "image-upload-button",
                POST_IMAGE_THUMBNAIL: "image-upload-thumbnail",
                SCROLL_TOP_ANCHOR: "scroll-top-anchor",
                SHORT_SIDEBAR_AD_BOTTOM: "short-sidebar-ad-bottom",
                SHORT_SIDEBAR_AD_TOP: "short-sidebar-ad-top",
                SIDEBAR_STATS: "sidebar-stats",
                SIDEBAR_SURVEY: "sidebar-survey",
                SIDEBAR_TOGGLE_BUTTON_TEXT: "toggle-content-button-text",
                SIDEBAR_TOGGLE_ICON: "toggle-content-icon",
                SIDEBAR_USER_ITEMS: "sidebar-users-grid-toggle-item",
                SIDEBAR_USERS_TOGGLE_BUTTON: "toggle-content-button",
                STAT_CHART: "stat-chart",
                TABS_BUTTON: "v5-tabs-button",
                TABS_PANEL: "v5-tabs-panel",
                TABS_WRAPPER: "v5-tabs-wrapper",
                TIMEZONES: "page-timezones",
                TOOLTIP: n,
                TOOLTIP_CLASS: "tooltip",
                TOOLTIP_TOP: "top",
                UPGRADE_ACCORDION: "upgrade-accordion",
                USER_LEAGUE: "user-league",
                USER_TAGLINE: "post-view-meta-user",
                VERSION_DROPDOWN: "version-dropdown"
            };
            c.Z.generate("web_security_login_and_go")
        },
        62205: function(e, t, a) {
            "use strict";
            a.d(t, {
                HA: function() {
                    return clearChessboard
                },
                eB: function() {
                    return handleWdl
                },
                xi: function() {
                    return watchChessboard
                }
            });
            var s = a(67104)
              , n = a(63148)
              , o = a(69475)
              , r = a(42203)
              , i = a(73253)
              , l = a(22643);
            var c = a(60803)
              , u = a(43608)
              , d = a(57367);
            let h = null
              , p = null
              , m = !0;
            async function handleWdl(e) {
                var t;
                const a = null != e ? e : h
                  , n = null == a ? void 0 : a.game;
                n.eco || (n.plugins.add((0,
                s.Kh)({
                    ecoPath: (0,
                    c.K)(),
                    http: d.Z
                })),
                await n.eco.update());
                const o = null == (t = null == a ? void 0 : a.game.eco) ? void 0 : t.get()
                  , i = Boolean(o && (null == o ? void 0 : o.f) !== s.iB.shortenFen(n.getFEN(), 3));
                !async function getWDLStatsFromFen({wdlData: e, isBookMove: t}) {
                    e && t ? ((0,
                    l.xq)({
                        wdlBar: {
                            win: e.w / 100,
                            loss: e.b / 100,
                            draw: e.d / 100
                        }
                    }),
                    r.H.emit("evaluation.update-wdl")) : (0,
                    l.xq)({
                        wdlBar: void 0
                    })
                }({
                    wdlData: null == o ? void 0 : o.wl,
                    isBookMove: !i
                })
            }
            const b = (0,
            u.Z)((()=>{
                var e;
                h && m && ((0,
                l.SZ)((null == (e = h.game.getSelectedNode()) ? void 0 : e.moveNumber) + 1 || -1),
                (0,
                o.k)(function getParams() {
                    const e = {
                        fen: h.game.getFEN(),
                        moves: "",
                        gameType: h.game.getVariant()
                    };
                    return p && Object.assign(e, p()),
                    e
                }()))
            }
            ), 0)
              , g = (0,
            u.Z)((()=>{
                m && b()
            }
            ), 0);
            function watchChessboard({chessboard: e, callback: t, useClientEngine: a=!0}) {
                e === h && m === a || (clearChessboard(),
                h = e,
                p = t || null,
                m = a,
                e.game.onMany(s.jd, g),
                r.H.on("evaluation.settings-update", handleUpdateSettings),
                (0,
                n.yQ)(),
                (0,
                l.VD)(),
                g(),
                (0,
                i.YQ)() && handleWdl())
            }
            function handleUpdateSettings() {
                g(),
                (0,
                i.YQ)() && handleWdl()
            }
            function clearChessboard() {
                var e, t;
                null == (e = null == h ? void 0 : h.game) || e.offMany(s.jd.map((e=>({
                    type: e,
                    handler: g
                })))),
                null == (t = null == h ? void 0 : h.game) || t.off({
                    type: s.th.ECO.Events.Update,
                    handler: handleWdl
                }),
                h = null,
                r.H.off({
                    type: "evaluation.settings-update",
                    handler: handleUpdateSettings
                }),
                (0,
                n.yQ)(),
                (0,
                l.oA)()
            }
        },
        14723: function(e, t, a) {
            "use strict";
            a.d(t, {
                XP: function() {
                    return h
                },
                nv: function() {
                    return b
                },
                YE: function() {
                    return fetchEngineConfig
                }
            });
            var s = a(3527)
              , n = a.n(s)
              , o = a(32305)
              , r = Object.defineProperty
              , i = Object.defineProperties
              , l = Object.getOwnPropertyDescriptors
              , c = Object.getOwnPropertySymbols
              , u = Object.prototype.hasOwnProperty
              , d = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? r(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a
              , __spreadValues = (e,t)=>{
                for (var a in t || (t = {}))
                    u.call(t, a) && __defNormalProp(e, a, t[a]);
                if (c)
                    for (var a of c(t))
                        d.call(t, a) && __defNormalProp(e, a, t[a]);
                return e
            }
              , __spreadProps = (e,t)=>i(e, l(t));
            const h = {
                KOMODO: "KOMODO",
                STOCKFISH: "STOCKFISH",
                STOCKFISH_NNUE: "STOCKFISH (NNUE)",
                OFF: "OFF"
            }
              , p = {
                name: n().supportsMultithreading() ? "Stockfish 15" : "Stockfish 11",
                description: n().supportsMultithreading() ? (0,
                o.dW)("faster") : "",
                paths: {
                    engines: {
                        multiThreaded: {
                            loader: window.Config.threadedEnginePaths.stockfish.multiThreaded.loader,
                            engine: window.Config.threadedEnginePaths.stockfish.multiThreaded.engine
                        },
                        singleThreaded: {
                            loader: window.Config.threadedEnginePaths.stockfish.singleThreaded.loader,
                            engine: window.Config.threadedEnginePaths.stockfish.singleThreaded.engine
                        },
                        asm: window.Config.threadedEnginePaths.stockfish.asm
                    },
                    pathToBook: window.Config.pathToBookSmall
                }
            }
              , m = {
                [h.STOCKFISH]: __spreadValues({}, p),
                [h.STOCKFISH_NNUE]: __spreadProps(__spreadValues({}, p), {
                    name: "Stockfish 15 NNUE",
                    description: (0,
                    o.dW)("stronger, %filesize%", {
                        "%filesize%": "45MB"
                    }),
                    paths: __spreadProps(__spreadValues({}, p.paths), {
                        settings: {
                            EvalFile: window.Config.threadedEnginePaths.stockfish.multiThreaded.nnue,
                            Threads: (navigator.hardwareConcurrency / 2).toString(),
                            "Use NNUE": "true"
                        }
                    }),
                    multithreadingRequired: !0
                }),
                [h.KOMODO]: {
                    name: "Komodo",
                    paths: {
                        pathToEngineWorker: window.Config.pathToExplanationEngineWorker,
                        pathToWasmEngine: window.Config.pathToWasmExplanationEngine,
                        pathToNonWasmEngine: window.Config.pathToNonWasmKomodo
                    }
                },
                [h.OFF]: {
                    label: (0,
                    o.dW)("Engine Off"),
                    name: "Engine Off"
                }
            }
              , b = (window.Config.pathToExplanationEngineWorker,
            window.Config.pathToWasmExplanationEngine,
            "STOCKFISH");
            function fetchEngineConfig(e) {
                var t;
                return null != (t = m[e]) ? t : m[b]
            }
        },
        63148: function(e, t, a) {
            "use strict";
            a.d(t, {
                mW: function() {
                    return getEngine
                },
                B5: function() {
                    return clearQueue
                },
                yQ: function() {
                    return stopEngine
                }
            });
            var s = a(3527)
              , n = a.n(s)
              , o = a(73253)
              , r = a(16989);
            let i = null
              , l = null;
            function getEngine() {
                const e = (0,
                o.Gw)();
                return i && l !== e.engineName && (i.quit(),
                i = null),
                i || e.engineName === r.XP.OFF || (l = e.engineName,
                i = n()((0,
                r.YE)(e.engineName).paths)),
                i
            }
            function clearQueue() {
                return new Promise(((e,t)=>{
                    const a = getEngine();
                    a ? a.stopFast((a=>{
                        i !== a && (null == i || i.quit(),
                        i = null),
                        i = a,
                        i ? e(i) : t()
                    }
                    ), (0,
                    o.OL)()) : t()
                }
                ))
            }
            function stopEngine() {
                i && (i.stopAll(),
                i.quit(),
                i = null,
                l = null)
            }
        },
        69475: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return evaluate
                }
            });
            var s = a(3527)
              , n = a.n(s)
              , o = a(63148)
              , r = a(42203)
              , i = a(73253)
              , l = a(22643);
            let c = 0;
            const u = (0,
            l.y0)();
            function onEvaluationResponse() {
                u.isLocked || (u.isRunning = !1,
                r.H.emit("evaluation.engine-stop"),
                r.H.emit("evaluation.update"))
            }
            function evaluate(e) {
                const {fen: t, moves: a, gameType: s} = e;
                if (u.fen = t,
                u.isLocked)
                    return;
                c += 1;
                const d = c;
                u.isLocked = !0,
                u.isNewPosition = !0,
                r.H.emit("evaluation.engine-start"),
                (0,
                o.B5)().then((e=>{
                    u.isLocked = !1;
                    const t = n().getPositionInfo(u.fen, a, {
                        variant: "chess960" === s
                    });
                    if (!1 === t)
                        return void (0,
                        l.VD)();
                    if ("object" == typeof t && t.stalemate)
                        return void (0,
                        l.VD)();
                    const o = (0,
                    i.Gw)()
                      , h = {
                        fen: u.fen,
                        moves: a,
                        multiPv: o.linesCount,
                        difficulty: 20,
                        is960: "chess960" === s,
                        normalize: !0
                    };
                    o.depth ? h.depth = o.depth : o.timeLimit > 0 ? h.movetime = 1e3 * o.timeLimit : h.infinite = !0,
                    u.isRunning = !0,
                    e.getBestMove(h, onEvaluationResponse, (e=>function onEvaluationStream(e, t) {
                        e === c && (u.isLocked || "info" === t.mtype && (t.pv && t.multipv && !t.upperbound && !t.lowerbound && t.depth >= (0,
                        i.mC)() || 0 === t.mateIn) && (u.isNewPosition && (u.isNewPosition = !1,
                        (0,
                        l.VD)()),
                        (0,
                        l.VD)(t),
                        r.H.emit("evaluation.update")))
                    }(d, e)))
                }
                )).catch((()=>{}
                ))
            }
        },
        42203: function(e, t, a) {
            "use strict";
            a.d(t, {
                H: function() {
                    return s
                }
            });
            const s = (0,
            a(35174).I)()
        },
        73253: function(e, t, a) {
            "use strict";
            a.d(t, {
                Gw: function() {
                    return getSettings
                },
                OL: function() {
                    return getStopFastTimeout
                },
                mC: function() {
                    return getStreamMinDepth
                },
                YQ: function() {
                    return isWdlBarEnabled
                },
                VP: function() {
                    return updateSettings
                }
            });
            var s = a(14723);
            const n = 14
              , o = 14
              , r = "analysis_engine_settings";
            var i, l, c = a(42203);
            const u = {
                depth: 20,
                timeLimit: 10,
                linesCount: 3,
                engineName: s.nv,
                isWdlBarSupported: !1,
                hasChosenWdlBar: !1
            };
            function updateSettings(e) {
                Object.keys(e).some((t=>e[t] !== u[t])) && (Object.assign(u, e),
                window.localStorage.setItem(r, JSON.stringify(u)),
                c.H.emit("evaluation.settings-update"))
            }
            function getSettings() {
                return u
            }
            function getStopFastTimeout() {
                return u.engineName === s.XP.KOMODO ? 50 : 200
            }
            function getStreamMinDepth() {
                return u.engineName === s.XP.KOMODO ? n : o
            }
            Object.assign(u, function getSettingsFromStorage() {
                try {
                    return JSON.parse(window.localStorage.getItem(r) || "")
                } catch (e) {
                    return {}
                }
            }(), {
                isWdlBarSupported: null == (l = null == (i = window.chesscom) ? void 0 : i.features) ? void 0 : l.includes("wdl_eval_bar_option")
            });
            const isWdlBarEnabled = ()=>u.isWdlBarSupported
        },
        22643: function(e, t, a) {
            "use strict";
            a.d(t, {
                y0: function() {
                    return getState
                },
                oA: function() {
                    return resetState
                },
                VD: function() {
                    return updateLines
                },
                SZ: function() {
                    return updateSelectedPly
                },
                xq: function() {
                    return updateState
                }
            });
            const s = {
                fen: "",
                isRunning: !1,
                isLocked: !1,
                isNewPosition: !1,
                lines: [],
                selectedPly: -1,
                tablebaseOutcome: null,
                wdlBar: null
            };
            function updateSelectedPly(e) {
                s.selectedPly = e
            }
            function resetState() {
                updateState({
                    fen: "",
                    isRunning: !1,
                    isLocked: !1,
                    isNewPosition: !1,
                    lines: [],
                    selectedPly: -1,
                    tablebaseOutcome: null,
                    wdlBar: null
                })
            }
            function updateState(e) {
                Object.assign(s, e)
            }
            function updateLines(e) {
                if (!e)
                    return void (s.lines = []);
                if (!e.multipv)
                    return void (s.lines = 0 === e.mateIn ? [e] : []);
                const t = e.multipv - 1;
                s.lines[t] ? s.lines.splice(t, 1, e) : s.lines.push(e)
            }
            function getState() {
                return s
            }
        },
        84282: function(e, t, a) {
            "use strict";
            a.d(t, {
                zT: function() {
                    return o
                },
                UG: function() {
                    return r
                },
                Si: function() {
                    return i
                }
            });
            var s = a(32305)
              , n = a(18160);
            const o = {
                ABANDONED: "abandoned",
                ABORTED: "aborted",
                ADJUDICATED: "adjudicated",
                AGREED: "agreed",
                BUGHOUSELOSE: "bughousepartnerlose",
                CHECKMATED: "checkmated",
                DOUBLE_FORFEIT: "doubleforfeit",
                FIFTY_MOVE: "50move",
                INSUFFICIENT: "insufficient",
                KINGOFTHEHILL: "kingofthehill",
                REPETITION: "repetition",
                RESIGNED: "resigned",
                STALEMATE: "stalemate",
                THREECHECK: "threecheck",
                TIMEOUT: "timeout",
                TIMEVSINSUFFICIENT: "timevsinsufficient"
            }
              , r = (o.CHECKMATED,
            (0,
            s.dW)("You won by checkmate."),
            o.RESIGNED,
            (0,
            s.dW)("You won by resignation."),
            o.TIMEOUT,
            (0,
            s.dW)("You won on time."),
            o.CHECKMATED,
            (0,
            s.dW)("You lost by checkmate."),
            o.RESIGNED,
            (0,
            s.dW)("You lost by resignation."),
            o.TIMEOUT,
            (0,
            s.dW)("You lost on time."),
            o.CHECKMATED,
            (0,
            s.dW)("Your partner won by checkmate."),
            o.RESIGNED,
            (0,
            s.dW)("Your partner won by resignation."),
            o.TIMEOUT,
            (0,
            s.dW)("Your partner won on time."),
            o.CHECKMATED,
            (0,
            s.dW)("Your partner lost by checkmate."),
            o.RESIGNED,
            (0,
            s.dW)("Your partner lost by resignation."),
            o.TIMEOUT,
            (0,
            s.dW)("Your partner lost on time."),
            o.AGREED,
            (0,
            s.dW)("Your partner and their opponent agreed to a draw."),
            o.REPETITION,
            (0,
            s.dW)("Your partner drew by threefold repetition."),
            {
                [o.ABANDONED]: (0,
                s.dW)("game abandoned"),
                [o.ABORTED]: (0,
                s.dW)("game aborted"),
                [o.ADJUDICATED]: (0,
                s.dW)("by adjudication"),
                [o.AGREED]: (0,
                s.dW)("by agreement"),
                [o.BUGHOUSELOSE]: (0,
                s.dW)("with their bughouse partner"),
                [o.CHECKMATED]: (0,
                s.dW)("by checkmate"),
                [o.DOUBLE_FORFEIT]: (0,
                s.dW)("Double forfeit"),
                [o.FIFTY_MOVE]: (0,
                s.dW)("by 50-move rule"),
                [o.INSUFFICIENT]: (0,
                s.dW)("by insufficient material"),
                [o.KINGOFTHEHILL]: (0,
                s.dW)("by the king reaching the hill"),
                [o.REPETITION]: (0,
                s.dW)("by repetition"),
                [o.RESIGNED]: (0,
                s.dW)("by resignation"),
                [o.STALEMATE]: (0,
                s.dW)("by stalemate"),
                [o.THREECHECK]: (0,
                s.dW)("by checking the opponent king for the 3rd time"),
                [o.TIMEOUT]: (0,
                s.dW)("on time"),
                [o.TIMEVSINSUFFICIENT]: (0,
                s.dW)("by timeout vs insufficient material")
            });
            o.ABANDONED,
            (0,
            s.dW)("%winner% won - game abandoned"),
            o.ABORTED,
            (0,
            s.dW)("Game aborted"),
            o.AGREED,
            (0,
            s.dW)("Game drawn by agreement"),
            o.BUGHOUSELOSE,
            (0,
            s.dW)("with their bughouse partner"),
            o.CHECKMATED,
            (0,
            s.dW)("%winner% won by checkmate"),
            o.DOUBLE_FORFEIT,
            (0,
            s.dW)("Double forfeit"),
            o.FIFTY_MOVE,
            (0,
            s.dW)("Game drawn by 50-move rule"),
            o.INSUFFICIENT,
            (0,
            s.dW)("Game drawn - insufficient material"),
            o.KINGOFTHEHILL,
            (0,
            s.dW)("%winner% got their king to the middle"),
            o.REPETITION,
            (0,
            s.dW)("Game drawn by repetition"),
            o.RESIGNED,
            (0,
            s.dW)("%winner% won by resignation"),
            o.STALEMATE,
            (0,
            s.dW)("Game drawn by stalemate"),
            o.THREECHECK,
            (0,
            s.dW)("%winner% gave three checks"),
            o.TIMEOUT,
            (0,
            s.dW)("%winner% won on time"),
            o.TIMEVSINSUFFICIENT,
            (0,
            s.dW)("Game drawn - timeout vs insufficient material"),
            o.AGREED,
            o.CHECKMATED,
            o.FIFTY_MOVE,
            o.INSUFFICIENT,
            o.REPETITION,
            o.RESIGNED,
            o.STALEMATE,
            o.TIMEOUT,
            o.TIMEVSINSUFFICIENT;
            const i = {
                HALF_HALF: "1/2-1/2",
                HALF_HALF_ENTITY: "&frac12;-&frac12;",
                ONE_ZERO: "1-0",
                ZERO_ONE: "0-1",
                NONE: "*"
            };
            n.Z.trans("Standard"),
            n.Z.trans("Normal rules of chess."),
            n.Z.trans("Chess960"),
            n.Z.trans("Normal rules, but starting position is random."),
            n.Z.trans("Book Opening"),
            n.Z.trans("Custom FEN"),
            n.Z.trans("3 Check"),
            n.Z.trans("First to check the other king 3 times wins."),
            n.Z.trans("King of the Hill"),
            n.Z.trans("First to get king to middle 4 squares wins."),
            n.Z.trans("Crazyhouse"),
            n.Z.trans("When you capture a piece, you can drop it on your turn!"),
            n.Z.trans("Bughouse"),
            n.Z.trans("Team up with another player and you can drop the pieces that they capture.")
        },
        35584: function(e, t, a) {
            "use strict";
            a.d(t, {
                sY: function() {
                    return O
                },
                _G: function() {
                    return A
                },
                _j: function() {
                    return M
                },
                v3: function() {
                    return P
                }
            });
            var s = a(63754)
              , n = a(18160);
            const o = "web_library_collection_add_bookmark"
              , r = "web_library_collection_add_lookup"
              , i = "web_library_collection_add_participant"
              , l = "web_library_callback_add_from_pgn_to_collection"
              , c = "web_library_callback_add_from_url_to_collection"
              , u = "web_library_collection_download_games"
              , d = "web_library_callback_collection_items"
              , h = "web_library_community_collections"
              , p = "web_library_callback_copy_into_new_collection"
              , m = "web_library_callback_delete_collection"
              , b = "web_library_bookmarks"
              , g = "web_library_collections"
              , f = "web_library_callback_publish_collection"
              , v = "web_library_collection_remove_root_bookmark"
              , w = "web_library_collection_remove_items"
              , y = "web_library_collection_remove_lookup"
              , k = "web_library_collection_remove_participant"
              , _ = "web_library_shared_collections"
              , C = "web_library_callback_unpublish_collection"
              , T = "web_library_callback_update_lucg_details"
              , S = "web_library_callback_update_collection_privacy_settings"
              , x = "web_library_collection_update_thumbnail"
              , E = "web_library_collection_upload_thumbnail"
              , O = {
                ADD_GAME_FROM_FEN_OR_PGN_IS_INCORRECT_MESSAGE: n.Z.trans("Please insert the correct FEN/PGN(s)"),
                ADD_GAME_FROM_FEN_OR_PGN_SUCCESS_MESSAGE: n.Z.trans("Your game(s) have been uploaded"),
                ADD_GAME_FROM_URL_IS_INCORRECT_MESSAGE: n.Z.trans("Please make sure youâ€™ve pasted a valid Chess.com URL"),
                ADD_GAME_FROM_URL_SUCCESS_MESSAGE: n.Z.trans("Game from URL has been uploaded"),
                ADD_GAME_FROM_STUDY_URL_SUCCESS_MESSAGE: n.Z.trans("Game from study URL has been uploaded"),
                ALLOW_COPYING_ON: n.Z.trans("Allow Copying is now on"),
                ALLOW_COPYING_OFF: n.Z.trans("Allow Copying is now off"),
                BOOKMARK_ADDED: n.Z.trans("Bookmark added"),
                BOOKMARK_REMOVED: n.Z.trans("Bookmark removed"),
                COLLECTION_COPIED: n.Z.trans("Collection has been copied"),
                COLLECTION_NAME_INVALID_MESSAGE: n.Z.trans("Collection name must be between 3-50 characters long"),
                EDIT_GAME_SUCCESS_MESSAGE: n.Z.trans("Game has been updated"),
                EXIST_TAG_MESSAGE: e=>n.Z.trans('"%1$s%" already exists', {
                    "%1$s%": e
                }),
                PUBLISH_MESSAGE: e=>n.Z.trans('"%1$s%" collection has been published', {
                    "%1$s%": e
                }),
                REMOVED_GAMES_MESSAGE: n.Z.trans("The selected games have been removed"),
                REMOVED_MESSAGE: n.Z.trans("This collection was removed"),
                REMOVED_MESSAGE_CONFIRM: n.Z.trans("Are you sure you want to delete this collection?"),
                SEARCH_EXCEPTION_MESSAGE: n.Z.trans("Please enter 3 or more characters"),
                THUMBNAIL_UPLOADED_MESSAGE: n.Z.trans("Thumbnail uploaded"),
                UNPUBLISH_MESSAGE: e=>n.Z.trans('"%1$s%" collection has been set to private', {
                    "%1$s%": e
                }),
                VALIDATION_MESSAGE: e=>n.Z.transChoice("{0} 0 characters left|{1} 1 character left|]1,Inf] %charactersCount% characters left", e, {
                    "%charactersCount%": e
                })
            }
              , A = {
                BOOKMARKS: "bookmarks",
                DESCRIPTION_MAXLENGTH: 200,
                COMMUNITY_COLLECTIONS: "community-collections",
                INDEX_TABS: [{
                    id: "your-collections",
                    label: n.Z.trans("Your Collections"),
                    tabs: [{
                        label: n.Z.trans("Created by You"),
                        value: "your-collections"
                    }, {
                        label: n.Z.trans("Shared with You"),
                        value: "shared-collections"
                    }]
                }, {
                    id: "community-collections",
                    label: n.Z.trans("Community Collections"),
                    tabs: [{
                        label: n.Z.trans("All"),
                        value: "community-collections"
                    }, {
                        label: n.Z.trans("Bookmarks"),
                        value: "bookmarks"
                    }]
                }, ...!window.chesscom.features.includes("new_library_design") && [{
                    id: "shared-collections",
                    label: n.Z.trans("Shared")
                }, {
                    id: "bookmarks",
                    label: n.Z.trans("Bookmarks")
                }] || []],
                MAX_AVATAR_SIZE_BYTES: 5242880,
                MAX_LUCG_PLAYER_NAME_LENGTH: 100,
                MAX_LUCG_TITLE_LENGTH: 100,
                PGN: "pgn",
                PLACEHOLDER_IMG: "/bundles/web/images/image-default.svg",
                PLAY: "play",
                PAUSE: "pause",
                SELECT_ALL: "selectAll",
                SHARED_COLLECTIONS: "shared-collections",
                SORT_GAMES_OPTIONS: [{
                    label: n.Z.trans("Recently added (desc)"),
                    value: 1
                }, {
                    label: n.Z.trans("Recently added (asc)"),
                    value: 2
                }, {
                    label: n.Z.trans("Date played (desc)"),
                    value: 3
                }, {
                    label: n.Z.trans("Date played (asc)"),
                    value: 4
                }, {
                    label: n.Z.trans("Moves (desc)"),
                    value: 5
                }, {
                    label: n.Z.trans("Moves (asc)"),
                    value: 6
                }, {
                    label: n.Z.trans("Player Name (white desc)"),
                    value: 7
                }, {
                    label: n.Z.trans("Player Name (white asc)"),
                    value: 8
                }, {
                    label: n.Z.trans("Player Name (black desc)"),
                    value: 9
                }, {
                    label: n.Z.trans("Player Name (black asc)"),
                    value: 10
                }, {
                    label: n.Z.trans("Rating (white desc)"),
                    value: 11
                }, {
                    label: n.Z.trans("Rating (white asc)"),
                    value: 12
                }, {
                    label: n.Z.trans("Rating (black desc)"),
                    value: 13
                }, {
                    label: n.Z.trans("Rating (black asc)"),
                    value: 14
                }, {
                    label: n.Z.trans("Event name (desc)"),
                    value: 15
                }, {
                    label: n.Z.trans("Event name (asc)"),
                    value: 16
                }, {
                    label: n.Z.trans("ECO (desc)"),
                    value: 17
                }, {
                    label: n.Z.trans("ECO (asc)"),
                    value: 18
                }],
                COLLECTION_GAMES_TABLE_HEADERS: [{
                    name: "Player",
                    sortKey: 7
                }, {
                    name: "Rating",
                    sortKey: 11
                }, {
                    name: "Player",
                    sortKey: 9
                }, {
                    name: "Rating",
                    sortKey: 13
                }, {
                    name: "Result",
                    sortKey: void 0
                }, {
                    name: "Moves",
                    sortKey: 5
                }, {
                    name: "Date",
                    sortKey: 3
                }],
                YOUR_COLLECTIONS_TABLE_HEADERS: [{
                    name: "Collection Name",
                    sortKey: 7
                }, {
                    name: "Games",
                    sortKey: 5
                }, {
                    name: "Created",
                    sortKey: 9
                }, {
                    name: "Owner",
                    sortKey: 11
                }],
                TAG_MAXLENGTH: 30,
                TITLE_MAXLENGTH: 50,
                TITLE_MINLENGTH: 3,
                TIMEOUT: 500,
                BLACK: n.Z.trans("Black"),
                WHITE: n.Z.trans("White"),
                UNKNOWN_PLAYER: n.Z.trans("Unknown"),
                UPGRADE_MODAL_CONFIG: {
                    buttonText: n.Z.trans("Upgrade"),
                    limitText: n.Z.trans("Maximum Games Exceeded"),
                    referral: "library",
                    startingSlide: "library",
                    subtitle: n.Z.trans("Upgrade Today."),
                    title: n.Z.trans("Enlarge Your Game Library")
                },
                USERNAME_MAXLENGTH: 30,
                YOUR_COLLECTIONS: "your-collections"
            };
            A.DEFAULT_COLLECTIONS = {
                [A.YOUR_COLLECTIONS]: {
                    data: [],
                    meta: {}
                },
                [A.SHARED_COLLECTIONS]: {
                    data: [],
                    meta: {}
                },
                [A.BOOKMARKS]: {
                    data: [],
                    meta: {}
                },
                [A.COMMUNITY_COLLECTIONS]: {
                    data: [],
                    meta: {}
                }
            },
            A.SORT_OPTIONS = {
                [A.YOUR_COLLECTIONS]: [{
                    label: n.Z.trans("Recently Accessed (desc)"),
                    value: 1
                }, {
                    label: n.Z.trans("Recently Accessed (asc)"),
                    value: 2
                }, {
                    label: n.Z.trans("Recently Updated (desc)"),
                    value: 3
                }, {
                    label: n.Z.trans("Recently Updated (asc)"),
                    value: 4
                }, {
                    label: n.Z.trans("Number of Items (desc)"),
                    value: 5
                }, {
                    label: n.Z.trans("Number of Items (asc)"),
                    value: 6
                }, {
                    label: n.Z.trans("Alphabetical (desc)"),
                    value: 7
                }, {
                    label: n.Z.trans("Alphabetical (asc)"),
                    value: 8
                }, {
                    label: n.Z.trans("Recently created (desc)"),
                    value: 9
                }, {
                    label: n.Z.trans("Recently created (asc)"),
                    value: 10
                }],
                [A.SHARED_COLLECTIONS]: [{
                    label: n.Z.trans("Recently Shared (desc)"),
                    value: 1
                }, {
                    label: n.Z.trans("Recently Shared (asc)"),
                    value: 2
                }, {
                    label: n.Z.trans("Recently Accessed (desc)"),
                    value: 3
                }, {
                    label: n.Z.trans("Recently Accessed (asc)"),
                    value: 4
                }],
                [A.BOOKMARKS]: [{
                    label: n.Z.trans("Recently Bookmarked (desc)"),
                    value: 1
                }, {
                    label: n.Z.trans("Recently Bookmarked (asc)"),
                    value: 2
                }, {
                    label: n.Z.trans("Recently Accessed (desc)"),
                    value: 3
                }, {
                    label: n.Z.trans("Recently Accessed (asc)"),
                    value: 4
                }],
                [A.COMMUNITY_COLLECTIONS]: [{
                    label: n.Z.trans("Recently Published (desc)"),
                    value: 1
                }, {
                    label: n.Z.trans("Recently Published (asc)"),
                    value: 2
                }, {
                    label: n.Z.trans("Recently Updated (desc)"),
                    value: 3
                }, {
                    label: n.Z.trans("Recently Updated (asc)"),
                    value: 4
                }, {
                    label: n.Z.trans("Number of Items (desc)"),
                    value: 5
                }, {
                    label: n.Z.trans("Number of Items (asc)"),
                    value: 6
                }, {
                    label: n.Z.trans("Alphabetical (desc)"),
                    value: 7
                }, {
                    label: n.Z.trans("Alphabetical (asc)"),
                    value: 8
                }, {
                    label: n.Z.trans("Most popular (desc)"),
                    value: 9
                }, {
                    label: n.Z.trans("Most popular (asc)"),
                    value: 10
                }]
            };
            const M = {
                addBookmark: e=>s.Z.generate(o, {
                    uuid: e
                }),
                addFromPGNToCollection: e=>s.Z.generate(l, {
                    uuid: e
                }),
                addFromUrlToCollection: e=>s.Z.generate(c, {
                    uuid: e
                }),
                addLookup: e=>s.Z.generate(r, {
                    uuid: e
                }),
                addParticipant: e=>s.Z.generate(i, {
                    uuid: e
                }),
                callbackCollectionItems: e=>s.Z.generate(d, {
                    uuid: e
                }),
                callbackCreateCollection: s.Z.generate("web_library_callback_create_collection"),
                callbackUpdateCollection: e=>s.Z.generate("web_library_collection_update_collection", {
                    uuid: e
                }),
                communityCollections: e=>s.Z.generate(h, e),
                copyCollection: e=>s.Z.generate(p, {
                    uuid: e
                }),
                createCollection: e=>s.Z.generate("web_library_create_collection", e),
                deleteCollection: e=>s.Z.generate(m, {
                    uuid: e
                }),
                downloadGames: e=>s.Z.generate(u, {
                    uuid: e
                }),
                library: s.Z.generate("web_library_home"),
                myBookmarks: e=>s.Z.generate(b, e),
                myCollections: e=>s.Z.generate(g, e),
                publishCollection: e=>s.Z.generate(f, {
                    uuid: e
                }),
                updateLucgDetails: e=>s.Z.generate(T, {
                    uuid: e
                }),
                updatePrivacySettings: e=>s.Z.generate(S, {
                    uuid: e
                }),
                removeBookmark: e=>s.Z.generate(v, {
                    uuid: e
                }),
                removeGames: e=>s.Z.generate(w, {
                    uuid: e
                }),
                removeLookup: (e,t)=>s.Z.generate(y, {
                    uuid: e,
                    lookup: t
                }),
                removeParticipant: (e,t)=>s.Z.generate(k, {
                    uuid: e,
                    userId: t
                }),
                sharedCollections: e=>s.Z.generate(_, e),
                unPublishCollection: e=>s.Z.generate(C, {
                    uuid: e
                }),
                updateThumbnail: e=>s.Z.generate(x, {
                    uuid: e
                }),
                uploadThumbnail: e=>s.Z.generate(E, {
                    uuid: e
                })
            }
              , P = ["960", "advanced-tactics", "analysis", "attacking-king", "award", "best-attacks", "best-defense", "best-wins", "blitz", "blunders", "briliant-games", "bug-house", "bullet", "checkmates", "checkmates-1", "chesskid-games", "club-matches", "coin", "computer-games", "crazy-house", "daily", "drills", "endgames", "event-matches", "fair-play", "fantastic-wins", "favorite-strategy", "favorite-streamers", "first-moves", "flagging", "fork", "four-players", "games-with-friends", "gold", "great-games", "ideas", "key-openings", "king-of-the-game", "learn", "lessons", "liked-games", "mastery-tactics", "most-boring-games", "most-shocking-wins", "no-castling", "note", "openings", "pins", "pro", "puzzle-rush", "puzzle", "quickest-wins", "skewer", "solo-games", "tactics", "tilt", "time", "timeless-moves", "variants", "watch"]
        },
        5169: function(e, t, a) {
            "use strict";
            a.d(t, {
                k: function() {
                    return getCollectionGames
                }
            });
            var s = a(35584)
              , n = a(57367);
            function getCollectionGames(e, t) {
                return n.Z.get(s._j.callbackCollectionItems(e), {
                    params: t
                })
            }
        },
        5556: function(e, t, a) {
            "use strict";
            a.d(t, {
                _G: function() {
                    return c
                },
                U3: function() {
                    return i
                },
                DL: function() {
                    return getGuestSlides
                },
                MR: function() {
                    return getUpgradeSlides
                },
                xL: function() {
                    return n
                },
                Xw: function() {
                    return u
                },
                Iz: function() {
                    return l
                }
            });
            var s = a(32305);
            const n = {
                AUTHENTICATION_MODAL: "authentication-modal",
                FIRST_TIME_MODAL: "first-time-modal",
                GUEST_MODAL: "guest-modal",
                GUEST_MODAL_TRIGGER: "guest-modal-trigger",
                NEW_ACCOUNT: "new-account-modal",
                UPGRADE_MODAL: "upgrade-modal"
            };
            var o, r, i = (e=>(e.HIDE_MODAL = "hide-modal",
            e.HIDE_MODAL_BACKGROUND_CLICK = "hide-background",
            e.HIDE_MODAL_SOCIAL_SHARE = "hide-modal-social-share",
            e.LOGIN_OR_REGISTER_MODAL = "LOGIN_OR_REGISTER_MODAL",
            e.MODAL_DID_HIDE = "modal-did-hide",
            e.SHOW_GUEST_MODAL = "show-guest-modal",
            e.SHOW_MODAL_SOCIAL_SHARE = "show-modal-social-share",
            e.SHOW_UPGRADE_MODAL = "show-upgrade-modal",
            e))(i || {});
            const l = {
                GUEST_MODAL_TITLE: {
                    analysis: (0,
                    s.dW)("Sign up to analyze your games!"),
                    lessons: (0,
                    s.dW)("Sign up to unlock Lessons!"),
                    pawn: (0,
                    s.dW)("Sign up to use this feature."),
                    "puzzles-learning": (0,
                    s.dW)("Sign up to keep solving puzzles!"),
                    stats: (0,
                    s.dW)("Sign up to track your progress!")
                },
                GUEST_MODAL_FOOTER_TEXT: (0,
                s.dW)("Already have an account? Log in")
            }
              , c = {
                GUEST_MODAL_SLIDES: {
                    analysis: "analysis",
                    lessons: "lessons",
                    pawn: "pawn",
                    puzzles: "puzzles-learning",
                    stats: "stats"
                }
            }
              , u = ["analysis", "lessons", "puzzles-learning", "puzzles-rush", "puzzles-battle"]
              , d = [{
                title: (0,
                s.dW)("Play, Learn and Connect"),
                subtitle: (0,
                s.dW)("Join millions of chess players."),
                icon: "pawn"
            }, {
                title: (null == (r = null == (o = window.chesscom) ? void 0 : o.features) ? void 0 : r.includes("update_puzzle_modal_puzzle_count")) ? (0,
                s.jn)("]1,Inf[ %number%K+ puzzles", 500, {
                    "%number%": 500
                }) : (0,
                s.dW)("150k+ Puzzles"),
                subtitle: (0,
                s.dW)("Play every day to improve"),
                icon: "puzzles-learning"
            }, {
                title: (0,
                s.dW)("1500+ Lessons"),
                subtitle: (0,
                s.dW)("Learn from chess masters!"),
                icon: "lessons"
            }, {
                title: (0,
                s.dW)("Full Game Analysis"),
                subtitle: (0,
                s.dW)("Learn from every game!"),
                icon: "analysis"
            }, {
                title: (0,
                s.dW)("Get a Rating"),
                subtitle: (0,
                s.dW)("Save your games!"),
                icon: "stats"
            }, {
                title: (0,
                s.dW)("Explore Full Openings"),
                subtitle: (0,
                s.dW)("See moves played by masters!"),
                icon: "explorer"
            }]
              , h = [{
                title: (0,
                s.dW)("Full Analysis"),
                subtitle: (0,
                s.dW)("Full Report, Accuracy, Key Moments"),
                icon: "analysis",
                generic: !0
            }, {
                title: (0,
                s.dW)("Unlimited Puzzles"),
                subtitle: (0,
                s.dW)("Solve 8+ Puzzles/day to improve fast"),
                icon: "puzzles-learning",
                generic: !0
            }, {
                title: (0,
                s.dW)("Unlimited Lessons"),
                subtitle: (0,
                s.dW)("Your step-by-step path to mastery"),
                icon: "lessons",
                generic: !0
            }, {
                title: (0,
                s.dW)("Remove Ads"),
                subtitle: (0,
                s.dW)("Get the best Chess.com experience"),
                icon: "no-ads",
                generic: !0
            }, {
                title: (0,
                s.dW)("Unlimited Puzzle Rush"),
                subtitle: (0,
                s.dW)("3 strikes and you're out!"),
                icon: "puzzles-rush"
            }, {
                title: (0,
                s.dW)("Unlimited Puzzle Battles"),
                subtitle: (0,
                s.dW)("Rush another player to win!"),
                icon: "puzzles-battle"
            }, {
                title: (0,
                s.dW)("Get Your Own Flair"),
                subtitle: (0,
                s.dW)("Share your unique personality"),
                icon: "flair"
            }, {
                title: (0,
                s.dW)("Explore Full Openings"),
                subtitle: (0,
                s.dW)("See moves played by masters!"),
                icon: "explorer"
            }, {
                title: (0,
                s.dW)("Master Every Position"),
                subtitle: (0,
                s.dW)("Practice means everything!"),
                icon: "workout"
            }, {
                title: (0,
                s.dW)("Unlock All Bots"),
                subtitle: (0,
                s.dW)("Play vs various skills and styles."),
                icon: "computer"
            }, {
                title: (0,
                s.dW)("Unlimited Collections"),
                subtitle: (0,
                s.dW)("Build and organize your library"),
                icon: "library",
                id: 12
            }, {
                title: (0,
                s.dW)("Unlimited Daily Puzzles"),
                subtitle: (0,
                s.dW)("Unlock all daily puzzles."),
                icon: "daily-puzzle"
            }]
              , getGuestSlides = e=>{
                const t = d.find((t=>t.icon === e)) || d[0]
                  , a = d.filter((e=>e !== t));
                return a.unshift(t),
                a
            }
              , getUpgradeSlides = e=>{
                const t = h.find((t=>t.icon === e)) || h[0]
                  , a = h.filter((e=>e.generic && e !== t));
                return a.unshift(t),
                a
            }
              , p = "clubs"
              , m = "explorer"
              , b = "leagues"
              , g = "lessons"
              , f = "library"
              , v = "openings"
              , w = "solo"
              , y = "tournaments"
              , k = "vision";
            (0,
            s.dW)("Play bots with various strengths and styles"),
            (0,
            s.dW)("Use optional coaching features for insights"),
            (0,
            s.dW)("Practice at any time - with no pressure"),
            (0,
            s.dW)("Start"),
            (0,
            s.dW)("Challenge the computer to an online chess game."),
            (0,
            s.dW)("Chess Computer"),
            (0,
            s.dW)("Search millions of master games"),
            (0,
            s.dW)("Choose specific players to explore"),
            (0,
            s.dW)("Find winning moves from your games"),
            (0,
            s.dW)("See moves chess masters have made and the outcome of the game from any position."),
            (0,
            s.dW)("Chess Explorer"),
            (0,
            s.dW)("Search more than 3,000 opening lines"),
            (0,
            s.dW)("Find the perfect chess opening for you"),
            (0,
            s.dW)("Explore variations and master chess games"),
            (0,
            s.dW)("Learn and explore chess openings to try in your chess games."),
            (0,
            s.dW)("Chess Openings"),
            (0,
            s.dW)("Capture a piece with every move until just one remains"),
            (0,
            s.dW)("No piece may capture more than 2 times per puzzle"),
            (0,
            s.dW)("If there is a King on the board, it must be the final piece"),
            (0,
            s.dW)("Try for a perfect run in Challenge Mode!"),
            (0,
            s.dW)("Start"),
            (0,
            s.dW)("How to Play"),
            (0,
            s.dW)("Solo Chess"),
            (0,
            s.dW)("Improve vision with coordinate training"),
            (0,
            s.dW)("Identify squares or make moves"),
            (0,
            s.dW)("Answer as many as you can in 30 seconds"),
            (0,
            s.dW)("Start"),
            (0,
            s.dW)("Learn to quickly follow and record chess coordinates and annotation."),
            (0,
            s.dW)("Vision Trainer"),
            (0,
            s.dW)("Watch videos to learn concepts"),
            (0,
            s.dW)("Test knowledge with Challenges"),
            (0,
            s.dW)("Level up to achieve Mastery"),
            (0,
            s.dW)("Learn from interactive lessons created by chess masters."),
            (0,
            s.dW)("Chess Lessons"),
            (0,
            s.dW)("Represent your club in matches"),
            (0,
            s.dW)("Chat in private forums"),
            (0,
            s.dW)("Organize your team"),
            (0,
            s.dW)("Join an Online Chess Club and connect and compete with your friends in matches."),
            (0,
            s.dW)("Chess Clubs"),
            (0,
            s.dW)("Join tournaments starting every few minutes"),
            (0,
            s.dW)("Compete in Daily, multi-game tournaments"),
            (0,
            s.dW)("Win trophies to display on your Profile"),
            (0,
            s.dW)("Compete in online chess tournaments or join an online Arena, where anyone can win."),
            (0,
            s.dW)("Chess Tournaments"),
            (0,
            s.dW)("Create collections from games played online, offline, or uploaded."),
            (0,
            s.dW)("Open, analyze, edit, and re-save your games to your collection."),
            (0,
            s.dW)("Organize, tag, and share your collections with others."),
            (0,
            s.dW)("Compile your very own Collection of personal, master, and all other games."),
            (0,
            s.dW)("Library"),
            (0,
            s.dW)("Play and win games to earn points"),
            (0,
            s.dW)("All major formats supported - bullet, blitz, rapid & arena"),
            (0,
            s.dW)("The longer the time control, the more points you earn"),
            (0,
            s.dW)("Earn trophies and advance to the Next League by playing games."),
            (0,
            s.dW)("Players Leagues")
        },
        26211: function(e, t, a) {
            "use strict";
            a.d(t, {
                v: function() {
                    return n
                },
                f9: function() {
                    return o
                }
            });
            var s = a(63930);
            const n = {
                $1: "!",
                $2: "?",
                $3: "!!",
                $4: "??",
                $5: "!?",
                $6: "?!",
                $9: "Ã˜",
                $10: "=",
                $11: "=",
                $12: "=",
                $13: "âˆž",
                $14: "â©²",
                $15: "â©±",
                $16: "Â±",
                $17: "âˆ“",
                $18: "+-",
                $19: "-+",
                $22: "â¨€",
                $23: "â¨€",
                $32: "âŸ³",
                $33: "âŸ³",
                $36: "â†’",
                $37: "â†’",
                $40: "â†‘",
                $41: "â†‘",
                $44: "âˆž/=",
                $45: "=/âˆž",
                $132: "â‡†",
                $133: "â‡†",
                $146: "N"
            }
              , o = (0,
            s.mc)(n)
        },
        19818: function(e, t, a) {
            "use strict";
            a.d(t, {
                hV: function() {
                    return n
                },
                lB: function() {
                    return o
                },
                _l: function() {
                    return r
                },
                gQ: function() {
                    return i
                },
                FI: function() {
                    return moveNotationTranslations
                }
            });
            var s = a(32305);
            const n = {
                FIGURINE: "figurine",
                TEXT: "text"
            }
              , o = {
                BLACK: 2,
                WHITE: 1
            }
              , r = {
                BLACK: "black",
                WHITE: "white"
            }
              , i = {
                B: "bishop",
                K: "king",
                N: "knight",
                R: "rook",
                Q: "queen"
            };
            let l;
            const moveNotationTranslations = ()=>(l || (l = {
                B: s.$H.trans("move_list.algebraic.B", null, "moves") || "B",
                K: s.$H.trans("move_list.algebraic.K", null, "moves") || "K",
                N: s.$H.trans("move_list.algebraic.N", null, "moves") || "N",
                R: s.$H.trans("move_list.algebraic.R", null, "moves") || "R",
                Q: s.$H.trans("move_list.algebraic.Q", null, "moves") || "Q"
            }),
            l)
        },
        93644: function(e, t, a) {
            "use strict";
            a.d(t, {
                t: function() {
                    return isRtl
                }
            });
            const isRtl = ()=>"rtl" === document.querySelector("html").getAttribute("dir")
        },
        2468: function(e, t, a) {
            "use strict";
            t.Z = {
                modalStates: {
                    select: "select",
                    send: "send",
                    sent: "sent"
                },
                types: {
                    game: "game",
                    social: "social"
                }
            }
        },
        87692: function(e, t, a) {
            "use strict";
            a.d(t, {
                ZC: function() {
                    return u
                },
                Wp: function() {
                    return d
                },
                yc: function() {
                    return h
                },
                xL: function() {
                    return p
                },
                _j: function() {
                    return m
                },
                Iz: function() {
                    return b
                },
                p0: function() {
                    return s.p
                },
                Cz: function() {
                    return g
                },
                rP: function() {
                    return f
                },
                U3: function() {
                    return v
                },
                Zj: function() {
                    return w
                }
            });
            var s = a(83229)
              , n = a(63754)
              , o = a(18160)
              , r = Object.defineProperty
              , i = Object.getOwnPropertySymbols
              , l = Object.prototype.hasOwnProperty
              , c = Object.prototype.propertyIsEnumerable
              , __defNormalProp = (e,t,a)=>t in e ? r(e, t, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a
            }) : e[t] = a;
            const u = {
                REPORT_USER: "web_user_callback_report_user",
                REPORT_TV_USER: "web_tv_callback_report",
                USER_POPUP: "web_user_callback_popup"
            }
              , d = (o.Z.trans("Membership Icons"),
            o.Z.trans("Emoji"),
            o.Z.trans("Chess"),
            o.Z.trans("Holiday"),
            o.Z.trans("Hosts"),
            o.Z.trans("Computer Chess"),
            o.Z.trans("PRO Chess League"),
            {
                category: "membership_icons",
                code: "nothing",
                description: o.Z.trans("Nothing"),
                id: 206,
                imageCode: "nothing",
                membershipLevelCode: "staff",
                name: o.Z.trans("Nothing"),
                status: ""
            })
              , h = ["blocked", "clear", "clear_light"]
              , p = {
                USER_FLAIR: "user-flair",
                USER_SEARCH: "user-search",
                USER_POPOVER_CONTAINER: "user-popover"
            }
              , m = {
                about: ()=>n.Z.generate("web_about"),
                membership: (e="icon")=>n.Z.generate("web_membership", {
                    c: e
                }),
                usernameSearch: e=>n.Z.generate("web_user_callback_username_search", ((e,t)=>{
                    for (var a in t || (t = {}))
                        l.call(t, a) && __defNormalProp(e, a, t[a]);
                    if (i)
                        for (var a of i(t))
                            c.call(t, a) && __defNormalProp(e, a, t[a]);
                    return e
                }
                )({
                    activeDays: 4e3
                }, e)),
                userDivision: ({league: e, division: t})=>n.Z.generate("web_league_division", {
                    league: e,
                    division: t
                }),
                userProfile: e=>n.Z.generate("web_member_view", {
                    username: e
                })
            }
              , b = {
                acceptFriendRequest: o.Z.trans("Accept Friend Request"),
                addFriend: o.Z.trans("Add Friend"),
                block: o.Z.trans("Block"),
                blockConfirm: o.Z.trans("Are you sure you want to block this user?"),
                blockUser: e=>o.Z.trans("Block %username%?", {
                    "%username%": e
                }),
                cancel: o.Z.trans("Cancel"),
                cancelFriendRequest: o.Z.trans("Cancel Friend Request"),
                challenge: o.Z.trans("Challenge"),
                follow: o.Z.trans("Follow"),
                gameArchive: o.Z.trans("Game Archive"),
                giftMembership: o.Z.trans("Gift Membership"),
                giveTrophy: o.Z.trans("Give Award"),
                joinedDate: e=>o.Z.trans("Joined %1$s%", {
                    "%1$s%": e
                }),
                lastOnline: e=>o.Z.trans("Online %1$s%", {
                    "%1$s%": e
                }),
                moderator: o.Z.trans("Moderator"),
                onlineNow: o.Z.trans("Online Now"),
                inLiveNow: o.Z.trans("In Live"),
                removeFriend: o.Z.trans("Remove Friend"),
                removeFriendConfirm: o.Z.trans("Are you sure you want to remove this friend from your list?"),
                report: o.Z.trans("Report"),
                reportUser: e=>o.Z.trans("Report %username%", {
                    "%username%": e
                }),
                sendMessage: o.Z.trans("Send Message"),
                showYourFlair: o.Z.trans("Show your flair!"),
                staff: o.Z.trans("Staff"),
                unblock: o.Z.trans("Unblock"),
                unfollow: o.Z.trans("Unfollow"),
                userReportError: o.Z.trans("Tell us more...")
            }
              , g = (s.p.diamond,
            s.p.abuser,
            s.p.cheater,
            s.p.voluntarilyClosed,
            s.p.unspecifiedClosed,
            s.p.gold,
            s.p.moderator,
            s.p.platinum,
            s.p.staff,
            {
                [s.p.basic]: o.Z.trans("Basic Membership"),
                [s.p.diamond]: o.Z.trans("Diamond Membership"),
                [s.p.cheater]: o.Z.trans("Closed: Fair Play"),
                [s.p.abuser]: o.Z.trans("Closed: Abuse"),
                [s.p.voluntarilyClosed]: o.Z.trans("Closed: Inactive"),
                [s.p.unspecifiedClosed]: o.Z.trans("Account Closed"),
                [s.p.gold]: o.Z.trans("Gold Membership"),
                [s.p.moderator]: o.Z.trans("Moderator Account"),
                [s.p.platinum]: o.Z.trans("Platinum Membership"),
                [s.p.silver]: o.Z.trans("Silver Membership"),
                [s.p.staff]: o.Z.trans("Staff Account")
            })
              , f = {
                GM: o.Z.trans("Grandmaster"),
                WGM: o.Z.trans("Woman Grandmaster"),
                IM: o.Z.trans("International Master"),
                WIM: o.Z.trans("Woman International Master"),
                FM: o.Z.trans("FIDE Master"),
                WFM: o.Z.trans("Woman FIDE Master"),
                NM: o.Z.trans("National Master"),
                CM: o.Z.trans("FIDE Candidate Master"),
                WCM: o.Z.trans("FIDE Woman Candidate Master"),
                WNM: o.Z.trans("Woman National Master")
            }
              , v = {
                AUTOCOMPLETE_CLEAR_SELECTED: "form-autocomplete-clear-selected"
            }
              , w = {
                FETCH_ROLES: "fetchRoles"
            }
        },
        83229: function(e, t, a) {
            "use strict";
            a.d(t, {
                p: function() {
                    return s
                }
            });
            const s = {
                guest: 0,
                cheater: 5,
                abuser: 6,
                voluntarilyClosed: 7,
                unspecifiedClosed: 8,
                basic: 10,
                silver: 20,
                gold: 30,
                platinum: 40,
                diamond: 50,
                moderator: 80,
                staff: 90
            }
        },
        45381: function(e, t, a) {
            "use strict";
            a.d(t, {
                S_: function() {
                    return checkUserStatus
                },
                yO: function() {
                    return getMembershipNumber
                },
                nJ: function() {
                    return is_guest_isGuest
                },
                sQ: function() {
                    return isImpersonating
                },
                jl: function() {
                    return s.j
                }
            });
            var s = a(8739)
              , n = (a(99660),
            a(63754),
            a(87692));
            function is_guest_isGuest() {
                var e, t;
                return Boolean(null == (t = null == (e = window.context) ? void 0 : e.user) ? void 0 : t.isGuest)
            }
            const o = window.context
              , isImpersonating = ()=>{
                var e;
                return !(!(0,
                s.j)() || !(null == (e = o.user) ? void 0 : e.isImpersonating))
            }
              , checkUserStatus = e=>{
                if (!(0,
                s.j)())
                    return !1;
                let t = !1;
                switch (e) {
                case "isActivated":
                    t = o.user.isActivated;
                    break;
                case "isStaff":
                    t = o.user.membershipLevel >= n.p0.staff;
                    break;
                case "isStaffOnly":
                    t = o.user.membershipLevel === n.p0.staff;
                    break;
                case "isModerator":
                    t = o.user.membershipLevel >= n.p0.moderator;
                    break;
                case "isModeratorOnly":
                    t = o.user.membershipLevel === n.p0.moderator;
                    break;
                case "isDiamond":
                    t = o.user.membershipLevel >= n.p0.diamond;
                    break;
                case "isDiamondOnly":
                    t = o.user.membershipLevel === n.p0.diamond;
                    break;
                case "isPlatinum":
                    t = o.user.membershipLevel >= n.p0.platinum;
                    break;
                case "isPlatinumOnly":
                    t = o.user.membershipLevel === n.p0.platinum;
                    break;
                case "isSilver":
                case "isPremium":
                    t = o.user.membershipLevel >= n.p0.silver;
                    break;
                case "isSilverOnly":
                    t = o.user.membershipLevel === n.p0.silver;
                    break;
                case "isGold":
                    t = o.user.membershipLevel >= n.p0.gold;
                    break;
                case "isGoldOnly":
                    t = o.user.membershipLevel === n.p0.gold;
                    break;
                case "isBasic":
                    t = o.user.membershipLevel === n.p0.basic;
                    break;
                case "isNewlyRegistered":
                    t = o.user.isNewlyRegistered;
                    break;
                case "isGuest":
                    t = o.user.isGuest;
                    break;
                case "chessTitle":
                    t = o.user.chessTitle;
                    break;
                default:
                    t = !1
                }
                return t
            }
              , getMembershipNumber = (e,t)=>!t && e >= n.p0.basic ? n.p0.unspecifiedClosed : e
        },
        8739: function(e, t, a) {
            "use strict";
            a.d(t, {
                j: function() {
                    return isLoggedIn
                }
            });
            var s = a(82220);
            function isLoggedIn() {
                var e;
                return Boolean((null == (e = window.context) ? void 0 : e.user) && !(0,
                s.Z)())
            }
        },
        92535: function(e, t, a) {
            "use strict";
            a.d(t, {
                Y: function() {
                    return showGuestModal
                }
            });
            var s = a(5556)
              , n = a(8739)
              , o = a(74672);
            Object.create,
            Object.defineProperty,
            Object.getOwnPropertyDescriptor,
            Object.getOwnPropertyNames,
            Object.getPrototypeOf,
            Object.prototype.hasOwnProperty;
            function showGuestModal({slide: e, title: t}={}) {
                a.e(435).then(a.bind(a, 34046)).then((({default: a})=>{
                    a.createInstance(s.xL.GUEST_MODAL);
                    const r = (0,
                    n.j)() ? void 0 : s._G.GUEST_MODAL_SLIDES.pawn;
                    (0,
                    o.o)({
                        key: s.U3.SHOW_GUEST_MODAL,
                        slide: e || r,
                        title: t
                    })
                }
                ))
            }
        },
        36745: function(e, t, a) {
            "use strict";
            a.d(t, {
                l: function() {
                    return showUpgradeModal
                }
            });
            var s = a(64694)
              , n = a(74672);
            const showUpgradeModal = (e={})=>{
                (0,
                n.o)({
                    key: s.U3.SHOW_UPGRADE_MODAL,
                    payload: e
                })
            }
        },
        30722: function(e, t, a) {
            "use strict";
            a.d(t, {
                F: function() {
                    return s
                }
            });
            const s = a(75696).n
        },
        99644: function(e, t, a) {
            "use strict";
            var s = a(87692)
              , n = a(30722)
              , o = a(78719)
              , r = a(57367)
              , i = a(63754)
              , l = a(31352)
              , c = a(15788);
            const u = (0,
            l.J)({
                callbacks: s.ZC,
                cache: n.F,
                CSRF: c.Z,
                getCurrentUser: o.x,
                http: r.Z,
                Router: i.Z,
                routes: s._j
            });
            t.Z = u
        },
        15788: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return s
                }
            });
            const s = {
                getToken: function getToken() {
                    return window.context && window.context.csrf && window.context.csrf.token
                }
            }
        },
        92685: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return g
                }
            });
            a(57367);
            var s = a(89483)
              , n = a(31663)
              , o = a(20629)
              , r = a(61681)
              , i = a(43608);
            const l = {
                lastSave: "lastSavedRelease",
                state: "chessComAppState"
            }
              , c = ["UI"]
              , u = 1504891089
              , d = {
                board: {},
                daily: {}
            }
              , h = {
                maxWait: 500,
                wait: 200
            };
            var p = a(70125);
            const filterModules = (e,t)=>Object.keys(t).reduce(((a,s)=>{
                const n = (0,
                p.Q)(r.Z.get(l.state));
                return e[s] ? a[s] = Object.assign({}, e[s]) : n && n[s] && (a[s] = Object.assign({}, n[s])),
                c.concat(t[s].excluded || []).forEach((e=>{
                    "object" == typeof a[s] && delete a[s][e]
                }
                )),
                a
            }
            ), {})
              , invalidateCacheOlderThan = e=>{
                const t = parseInt(r.Z.get(l.lastSave), 10);
                (!t || e > t) && (r.Z.remove(l.state),
                r.Z.set(l.lastSave, e))
            }
            ;
            invalidateCacheOlderThan(u);
            const m = (0,
            i.Z)((e=>{
                if (e.user && e.user.isImpersonating)
                    return;
                const t = filterModules(e, d);
                r.Z.set(l.state, JSON.stringify(t))
            }
            ), h.wait, {
                maxWait: h.maxWait
            });
            n.default.use(o.ZP);
            "boolean" != typeof strictVuex || strictVuex;
            const b = new o.ZP.Store({
                plugins: [e=>{
                    e.registerModule("saveState", e),
                    e.subscribe(((e,t)=>{
                        m(t)
                    }
                    ))
                }
                ],
                strict: !1
            });
            b.registerModule("user", s.Z);
            var g = b
        },
        41561: function(e, t, a) {
            "use strict";
            function canCastle({game: e}) {
                return "function" == typeof e.isLegalMove && (e.isLegalMove("O-O") || e.isLegalMove("O-O-O"))
            }
            a.d(t, {
                L: function() {
                    return canCastle
                }
            })
        },
        57516: function() {
            "use strict"
        },
        45728: function() {
            "use strict"
        },
        35559: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return n
                }
            });
            var s = {
                name: "IconFont",
                props: {
                    isDarkMode: {
                        type: Boolean,
                        default: !1
                    },
                    name: {
                        type: String,
                        required: !0
                    },
                    theme: {
                        type: String,
                        default: ""
                    }
                },
                computed: {
                    iconFamilyTheme() {
                        return this.theme ? `icon-font-${this.theme}` : ""
                    }
                }
            }
              , n = (0,
            a(51900).Z)(s, (function() {
                var e, t = this, a = t.$createElement, s = t._self._c || a;
                return s("div", t._g({
                    class: ["icon-font-component", (e = {},
                    e["icon-font-darkMode"] = t.isDarkMode,
                    e)]
                }, t.$listeners), [s("span", {
                    class: ["icon-font-chess", t.name, t.iconFamilyTheme]
                })])
            }
            ), [], !1, null, null, null).exports
        },
        66426: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return o
                }
            });
            var s = {
                name: "LoaderThreeBounce",
                props: {
                    isCircle: {
                        type: Boolean,
                        default: !1
                    },
                    size: {
                        type: Number,
                        default: 80
                    }
                },
                computed: {
                    dotCss() {
                        const e = `${Math.round(this.size / 4)}px`;
                        return {
                            width: e,
                            height: e
                        }
                    }
                }
            }
              , n = {
                component: "loader-three-bounce-component",
                circle: "loader-three-bounce-circle",
                dot: "loader-three-bounce-dot",
                animate: "loader-three-bounce-animate",
                bounce1: "loader-three-bounce-bounce1",
                bounce2: "loader-three-bounce-bounce2"
            };
            var o = (0,
            a(51900).Z)(s, (function() {
                var e, t = this, a = t.$createElement, s = t._self._c || a;
                return s("div", {
                    class: [t.$style.component, (e = {},
                    e[t.$style.circle] = t.isCircle,
                    e)],
                    style: {
                        width: t.size + "px"
                    },
                    attrs: {
                        "data-test-element": "loader-three-bounce"
                    }
                }, [s("div", {
                    class: [t.$style.dot, t.$style.bounce1],
                    style: t.dotCss
                }), t._v(" "), s("div", {
                    class: [t.$style.dot, t.$style.bounce2],
                    style: t.dotCss
                }), t._v(" "), s("div", {
                    class: t.$style.dot,
                    style: t.dotCss
                })])
            }
            ), [], !1, (function injectStyles(e) {
                this.$style = n.locals || n
            }
            ), null, null).exports
        },
        17828: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return i
                }
            });
            var s = a(86910)
              , n = a(97203)
              , o = {
                name: "Avatar",
                props: {
                    alt: {
                        type: String,
                        default: ""
                    },
                    src: {
                        type: String,
                        default: ""
                    },
                    width: {
                        type: [Number, String],
                        default: "50"
                    },
                    height: {
                        type: [Number, String],
                        default: "50"
                    }
                },
                emits: ["click"],
                data: ()=>({
                    failed: !1,
                    failedSrcSet: !1,
                    defaultAvatar: (0,
                    s.n)("bundles/web/images/user-image.svg")
                }),
                computed: {
                    avatarSrcset() {
                        return this.failedSrcSet ? null : (0,
                        n.b)(this.avatarUrl)
                    },
                    avatarUrl() {
                        return this.failed || !this.src ? this.defaultAvatar : this.src
                    }
                },
                watch: {
                    src(e, t) {
                        e !== t && (this.failed = !1,
                        this.failedSrcSet = !1)
                    }
                },
                methods: {
                    onError() {
                        this.avatarSrcset ? this.failedSrcSet = !0 : this.failed = !0
                    }
                }
            }
              , r = {
                component: "avatar-component"
            };
            var i = (0,
            a(51900).Z)(o, (function() {
                var e = this
                  , t = e.$createElement;
                return (e._self._c || t)("img", {
                    class: e.$style.component,
                    attrs: {
                        "data-cy": "avatar",
                        alt: e.alt,
                        src: e.avatarUrl,
                        srcset: e.avatarSrcset,
                        width: e.width,
                        height: e.height
                    },
                    on: {
                        error: e.onError,
                        click: function(t) {
                            return e.$emit("click", t)
                        }
                    }
                })
            }
            ), [], !1, (function injectStyles(e) {
                this.$style = r.locals || r
            }
            ), null, null).exports
        },
        20664: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return r
                }
            });
            var s = a(87692)
              , n = {
                name: "UserChessTitle",
                directives: {
                    Tooltip: a(6898).Z
                },
                props: {
                    title: {
                        type: String,
                        required: !0
                    },
                    url: {
                        type: String,
                        required: !1
                    },
                    openNewTab: {
                        type: Boolean,
                        required: !1
                    }
                },
                data() {
                    return {
                        fullTitle: s.rP[this.title]
                    }
                },
                computed: {
                    isLink() {
                        return Boolean(this.url)
                    },
                    target() {
                        return this.openNewTab ? "_blank" : null
                    }
                }
            }
              , o = {
                component: "user-chess-title-component"
            };
            var r = (0,
            a(51900).Z)(n, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.isLink ? a("a", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.fullTitle,
                        expression: "fullTitle"
                    }],
                    class: e.$style.component,
                    attrs: {
                        href: e.url,
                        target: e.target
                    },
                    domProps: {
                        textContent: e._s(e.title)
                    }
                }) : a("span", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.fullTitle,
                        expression: "fullTitle"
                    }],
                    class: e.$style.component,
                    domProps: {
                        textContent: e._s(e.title)
                    }
                })
            }
            ), [], !1, (function injectStyles(e) {
                this.$style = o.locals || o
            }
            ), null, null).exports
        },
        67946: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return f
                }
            });
            var s = a(87692)
              , n = {
                name: "Flair",
                props: {
                    available: {
                        type: Boolean,
                        default: !0
                    },
                    showTheNothingFlair: {
                        type: Boolean,
                        default: !1
                    },
                    code: {
                        type: String,
                        default: s.Wp.code
                    },
                    size: {
                        type: String
                    }
                },
                emits: ["click"],
                computed: {
                    isNothing() {
                        return this.code === s.Wp.code
                    }
                }
            }
              , o = a(51900)
              , r = (0,
            o.Z)(n, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.showTheNothingFlair || !e.isNothing ? a("span", {
                    class: ["flair-component", "flair-" + e.code, "flair-" + e.size],
                    on: {
                        click: function(t) {
                            return e.$emit("click", t)
                        }
                    }
                }) : e._e()
            }
            ), [], !1, null, null, null).exports
              , i = a(6898)
              , l = a(63754);
            const generateRoute = (e,t,a)=>{
                let s = e;
                const n = t;
                if (a) {
                    const e = document.querySelector("[data-url-locale]")
                      , t = null == e ? void 0 : e.getAttribute("data-url-locale")
                      , o = "en" !== (null == t ? void 0 : t.split("_")[0]) && (null == t ? void 0 : t.split("_")[0]);
                    o && n && (s = a,
                    n._locale = o)
                }
                return l.Z.generate(s, n)
            }
            ;
            var c = a(18160);
            const u = "web_user_settings_edit"
              , routes_communityGuidelines = ()=>generateRoute("web_policies_community")
              , routes_settings = ()=>generateRoute(u);
            c.Z.trans("Are you sure you want to disable this account?"),
            c.Z.trans("Edit status"),
            c.Z.trans("Are you sure you want to enable this account?"),
            c.Z.trans("Enter a status here"),
            c.Z.trans("Are you sure you want to impersonate this user?"),
            c.Z.trans("Error occurred"),
            c.Z.trans("Are you sure you want to mute this user?"),
            c.Z.trans("Are you sure you want to remove user About section?"),
            c.Z.trans("Are you sure you want to remove this user's avatar?"),
            c.Z.trans("Are you sure you want to remove this user's background?"),
            c.Z.trans("Are you sure you want to report user for spamming?"),
            c.Z.trans("Are you sure you want to reset this user's flair?"),
            c.Z.trans("Save status"),
            c.Z.trans("Your status must be %len% characters or less", {
                "%len%": 50
            }),
            c.Z.trans("Are you sure you want to stop impersonating this user?"),
            c.Z.trans("Are you sure you want to unmute this user?"),
            c.Z.trans("Your post seems to not fit our <a href=%url%>Community Guidelines</a>. Repeated violations may result in your account being restricted. Thank you for helping Chess.com stay a fun and friendly place for all!", {
                "%url%": routes_communityGuidelines()
            });
            var d = a(36745)
              , h = a(45381)
              , p = {
                props: {
                    membership: {
                        type: Number
                    }
                },
                computed: {
                    flairHref() {
                        return (({code: e, flairMembership: t, selfIsPremium: a})=>t >= s.p0.moderator ? s._j.about() : t === s.p0.cheater || t === s.p0.abuser ? routes_communityGuidelines() : s.yc.includes(e) ? "" : a ? `${routes_settings()}#flair-modal` : s._j.membership("flair"))({
                            code: this.standardizedFlairCodeFromMixin,
                            flairMembership: this.membership,
                            selfIsPremium: (0,
                            h.S_)("isPremium"),
                            selfIsModerator: (0,
                            h.S_)("isModerator")
                        })
                    },
                    flairTooltip() {
                        return (({code: e, flairMembership: t})=>t >= s.p0.staff ? s.Iz.staff : t >= s.p0.moderator ? s.Iz.moderator : t < s.p0.basic ? s.Cz[t] : s.yc.includes(e) ? s.Cz[s.p0.unspecifiedClosed] : s.Iz.showYourFlair)({
                            code: this.standardizedFlairCodeFromMixin,
                            flairMembership: this.membership
                        })
                    },
                    shouldSeeUpgradeModal: ()=>!(0,
                    h.S_)("isPremium"),
                    standardizedFlairCodeFromMixin() {
                        return this.code || this.userFlair && this.userFlair.code || s.Wp.code
                    }
                },
                methods: {
                    handleFlairClick() {
                        this.shouldSeeUpgradeModal ? (0,
                        d.l)({
                            referral: "flair",
                            startingSlide: "flair",
                            title: this.$trans("Want Your Own Flair?")
                        }) : this.flairHref.length && window.open(this.flairHref, "_blank")
                    }
                }
            }
              , m = {
                name: "UserFlairIcon",
                components: {
                    Flair: r
                },
                directives: {
                    Tooltip: i.Z
                },
                mixins: [p],
                props: {
                    code: {
                        type: String
                    },
                    size: {
                        type: String,
                        default: ""
                    }
                }
            }
              , b = {
                component: "user-flair-icon-component"
            };
            var g = (0,
            o.Z)(m, (function() {
                var e = this
                  , t = e.$createElement
                  , a = e._self._c || t;
                return e.code ? a("a", {
                    class: e.$style.component,
                    attrs: {
                        "aria-label": e.flairTooltip,
                        href: e.flairHref
                    },
                    on: {
                        click: function(t) {
                            return t.stopPropagation(),
                            t.preventDefault(),
                            e.handleFlairClick.apply(null, arguments)
                        }
                    }
                }, [a("flair", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: e.flairTooltip,
                        expression: "flairTooltip"
                    }],
                    attrs: {
                        code: e.code,
                        size: e.size
                    }
                })], 1) : e._e()
            }
            ), [], !1, (function injectStyles(e) {
                this.$style = b.locals || b
            }
            ), null, null)
              , f = g.exports
        },
        47680: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return b
                }
            });
            var s = a(6898)
              , n = a(63754)
              , o = a(18160)
              , r = {
                name: "CountryFlag",
                directives: {
                    tooltip: s.Z
                },
                props: {
                    code: {
                        type: [Number, String],
                        required: !1
                    },
                    name: {
                        type: [String, Object],
                        required: !1
                    },
                    size: {
                        type: String,
                        required: !1
                    }
                },
                computed: {
                    decoratedCode() {
                        return this.isChessVerified || this.isSanctioned ? "sanctioned" : this.code
                    },
                    isChessVerified() {
                        return ["fd", 431].includes(this.code)
                    },
                    isRussia() {
                        var e;
                        return ["ru", "RU", "116"].includes(null == (e = this.code) ? void 0 : e.toString())
                    },
                    isSanctioned() {
                        var e, t;
                        return Boolean((null == (t = null == (e = window.chesscom) ? void 0 : e.features) ? void 0 : t.includes("sanction_russia_flag")) && this.isRussia)
                    },
                    tooltip() {
                        return this.isChessVerified ? o.Z.trans("Due to the ongoing war and resulting international sanctions, Russian and Belarusian flags will not be shown for players in Verified events.") : this.name
                    },
                    ukraineLink: ()=>n.Z.generate("web_blog_view", {
                        url: "CHESScom/on-the-invasion-of-ukraine"
                    })
                }
            }
              , i = a(51900)
              , l = (0,
            i.Z)(r, (function() {
                var e, t, a = this, s = a.$createElement, n = a._self._c || s;
                return a.isSanctioned ? n("a", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: a.$trans("Click here to see our stance on the war in Ukraine"),
                        expression: "$trans('Click here to see our stance on the war in Ukraine')"
                    }],
                    class: ["country-flags-component", "country-" + a.decoratedCode, (e = {},
                    e["country-flags-" + a.size] = a.size,
                    e)],
                    attrs: {
                        href: a.ukraineLink,
                        target: "_blank"
                    }
                }) : n("div", {
                    directives: [{
                        name: "tooltip",
                        rawName: "v-tooltip",
                        value: a.tooltip,
                        expression: "tooltip"
                    }],
                    class: ["country-flags-component", ("country-" + a.decoratedCode).toLowerCase(), (t = {},
                    t["country-flags-" + a.size] = a.size,
                    t)]
                })
            }
            ), [], !1, null, null, null).exports
              , c = a(20664)
              , u = a(67946)
              , d = a(65775)
              , h = a(87692)
              , p = {
                name: "UserTagline",
                components: {
                    CountryFlag: l,
                    UserChessTitle: c.Z,
                    UserFlairIcon: u.Z,
                    UserUsername: d.Z
                },
                props: {
                    country: {
                        type: Object,
                        required: !1
                    },
                    flairCode: {
                        type: String
                    },
                    isUsernameClickable: {
                        type: Boolean,
                        default: !0
                    },
                    isDarkMode: Boolean,
                    iconAnchorIsEnabled: {
                        type: Boolean,
                        default: !0
                    },
                    membership: {
                        type: [Number, String],
                        default: h.p0.basic
                    },
                    notClickable: {
                        type: Boolean,
                        default: !1
                    },
                    rating: {
                        type: Number,
                        required: !1
                    },
                    title: {
                        type: String,
                        required: !1
                    },
                    url: {
                        type: String,
                        required: !1
                    },
                    usernameTheme: {
                        type: String,
                        default: "blue"
                    },
                    titleUrl: {
                        type: String,
                        required: !1
                    },
                    username: {
                        type: String,
                        required: !0
                    },
                    openProfileOnNewTab: {
                        type: Boolean,
                        required: !1
                    },
                    openTitleOnNewTab: {
                        type: Boolean,
                        required: !1
                    }
                }
            }
              , m = {
                component: "user-tagline-component",
                username: "user-tagline-username",
                "not-clickable": "user-tagline-not-clickable",
                rating: "user-tagline-rating",
                darkMode: "user-tagline-darkMode",
                dark: "user-tagline-dark"
            };
            var b = (0,
            i.Z)(p, (function() {
                var e, t, a = this, s = a.$createElement, n = a._self._c || s;
                return n("div", {
                    class: [a.$style.component, (e = {},
                    e[a.$style.darkMode] = a.isDarkMode,
                    e)]
                }, [a.title ? n("user-chess-title", {
                    attrs: {
                        "open-new-tab": a.openTitleOnNewTab,
                        url: a.titleUrl,
                        title: a.title
                    }
                }) : a._e(), a._v(" "), n("user-username", {
                    class: [a.$style.username, (t = {},
                    t[a.$style["not-clickable"]] = a.notClickable,
                    t)],
                    attrs: {
                        "is-clickable": a.isUsernameClickable,
                        "open-new-tab": a.openProfileOnNewTab,
                        theme: a.isDarkMode ? "dark" : a.usernameTheme,
                        url: a.url,
                        "data-test-element": "user-tagline-username",
                        username: a.username
                    }
                }), a._v(" "), a.rating ? n("span", {
                    class: [a.$style.rating, a.$style[a.usernameTheme]]
                }, [a._v("\n    (" + a._s(a.rating) + ")\n  ")]) : a._e(), a._v(" "), a.country ? n("country-flag", {
                    attrs: {
                        code: a.country.code,
                        name: a.country.name
                    }
                }) : a._e(), a._v(" "), a.flairCode || a.membership ? n("user-flair-icon", {
                    attrs: {
                        code: a.flairCode,
                        membership: a.membership
                    }
                }) : a._e(), a._v(" "), a._t("default")], 2)
            }
            ), [], !1, (function injectStyles(e) {
                this.$style = m.locals || m
            }
            ), null, null).exports
        },
        65775: function(e, t, a) {
            "use strict";
            a.d(t, {
                Z: function() {
                    return o
                }
            });
            var s = {
                name: "UserUsername",
                props: {
                    theme: {
                        type: String,
                        required: !0
                    },
                    isClickable: {
                        type: Boolean,
                        default: !0
                    },
                    url: {
                        type: String,
                        required: !1
                    },
                    username: {
                        type: String,
                        required: !0
                    },
                    openNewTab: {
                        type: Boolean,
                        required: !1
                    }
                },
                computed: {
                    getTargetIfClickable() {
                        return this.openNewTab ? "_blank" : null
                    },
                    isLink() {
                        return Boolean(this.url)
                    }
                }
            }
              , n = {
                component: "user-username-component",
                link: "user-username-link",
                gray: "user-username-gray",
                darkgray: "user-username-darkgray",
                blue: "user-username-blue",
                lightgray: "user-username-lightgray",
                current: "user-username-current",
                dark: "user-username-dark",
                bright: "user-username-bright",
                "bright-bold": "user-username-bright-bold",
                "blue-with-dark-mode": "user-username-blue-with-dark-mode",
                "blue-to-water": "user-username-blue-to-water"
            };
            var o = (0,
            a(51900).Z)(s, (function() {
                var e, t = this, a = t.$createElement;
                return (t._self._c || a)(t.isClickable ? "a" : "span", {
                    tag: "component",
                    class: [t.$style.component, t.$style[t.theme], (e = {},
                    e[t.$style.link] = t.isClickable,
                    e)],
                    attrs: {
                        href: t.isClickable ? t.url : null,
                        target: t.getTargetIfClickable
                    },
                    domProps: {
                        textContent: t._s(t.username)
                    }
                })
            }
            ), [], !1, (function injectStyles(e) {
                this.$style = n.locals || n
            }
            ), null, null).exports
        },
        41747: function(e) {
            "use strict";
            e.exports = JSON.parse('{"name":"@chesscom/analysis-client","version":"1.2.0","commit":"3adfb6abbb4b0c4bccc5cfe3ef063298490c28ac","scripts":{"install-package":"../../build/bin/build run install-client-packages","release":"../../build/bin/build release @chesscom/analysis-client"},"license":"UNLICENSED","repository":{"type":"git","url":"git+https://github.com/ChessCom/client-packages.git"},"publishConfig":{"registry":"https://npm.pkg.github.com/"},"files":["dist/*","release-history.md"],"metadata":{"description":"Analysis Client","sourceCodeUrl":"https://github.com/ChessCom/chess/tree/develop/client/web/analysis-new","changelogUrl":"https://github.com/ChessCom/chess/tree/develop/client/web/analysis-new/release-history.md","registryUrl":"https://github.com/ChessCom/client-packages/pkgs/npm/analysis-client","slackUrl":"https://chesscom.slack.com/archives/CEK4C29M0","entries":["analysis-new"],"pagesUsedOn":["/analysis"],"owners":["@Tyler Shwed"],"featureFlags":[{"channel":"analysis_product","name":"client_analysis_beta"}],"links":[]}}')
        }
    }, h = {};
    function __webpack_require__(e) {
        var t = h[e];
        if (void 0 !== t)
            return t.exports;
        var a = h[e] = {
            id: e,
            loaded: !1,
            exports: {}
        };
        return d[e].call(a.exports, a, a.exports, __webpack_require__),
        a.loaded = !0,
        a.exports
    }
    __webpack_require__.m = d,
    e = [],
    __webpack_require__.O = function(t, a, s, n) {
        if (!a) {
            var o = 1 / 0;
            for (c = 0; c < e.length; c++) {
                a = e[c][0],
                s = e[c][1],
                n = e[c][2];
                for (var r = !0, i = 0; i < a.length; i++)
                    (!1 & n || o >= n) && Object.keys(__webpack_require__.O).every((function(e) {
                        return __webpack_require__.O[e](a[i])
                    }
                    )) ? a.splice(i--, 1) : (r = !1,
                    n < o && (o = n));
                if (r) {
                    e.splice(c--, 1);
                    var l = s();
                    void 0 !== l && (t = l)
                }
            }
            return t
        }
        n = n || 0;
        for (var c = e.length; c > 0 && e[c - 1][2] > n; c--)
            e[c] = e[c - 1];
        e[c] = [a, s, n]
    }
    ,
    __webpack_require__.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        }
        : function() {
            return e
        }
        ;
        return __webpack_require__.d(t, {
            a: t
        }),
        t
    }
    ,
    a = Object.getPrototypeOf ? function(e) {
        return Object.getPrototypeOf(e)
    }
    : function(e) {
        return e.__proto__
    }
    ,
    __webpack_require__.t = function(e, s) {
        if (1 & s && (e = this(e)),
        8 & s)
            return e;
        if ("object" == typeof e && e) {
            if (4 & s && e.__esModule)
                return e;
            if (16 & s && "function" == typeof e.then)
                return e
        }
        var n = Object.create(null);
        __webpack_require__.r(n);
        var o = {};
        t = t || [null, a({}), a([]), a(a)];
        for (var r = 2 & s && e; "object" == typeof r && !~t.indexOf(r); r = a(r))
            Object.getOwnPropertyNames(r).forEach((function(t) {
                o[t] = function() {
                    return e[t]
                }
            }
            ));
        return o.default = function() {
            return e
        }
        ,
        __webpack_require__.d(n, o),
        n
    }
    ,
    __webpack_require__.d = function(e, t) {
        for (var a in t)
            __webpack_require__.o(t, a) && !__webpack_require__.o(e, a) && Object.defineProperty(e, a, {
                enumerable: !0,
                get: t[a]
            })
    }
    ,
    __webpack_require__.f = {},
    __webpack_require__.e = function(e) {
        return Promise.all(Object.keys(__webpack_require__.f).reduce((function(t, a) {
            return __webpack_require__.f[a](e, t),
            t
        }
        ), []))
    }
    ,
    __webpack_require__.u = function(e) {
        return "analysis-" + ({
            65: "openings-modal-controller",
            125: "analysis-tab-setup-controller",
            177: "review-tab",
            191: "settings-controller",
            210: "user-report-modal",
            240: "modal-upgrade-game-review",
            284: "trophy-popover",
            292: "charts-controller",
            365: "analysis-tab-analysis-controller",
            379: "payment-method-paypal",
            435: "guest-modal",
            487: "details-tab",
            563: "tablebase-tab",
            614: "gift-membership-modal",
            617: "openings-tab",
            631: "sentry-browser",
            732: "upgrade-modal-controller",
            991: "analysis-tab"
        }[e] || e) + ".chunk.client." + {
            51: "d35597ce",
            65: "4b951e49",
            112: "cba5f9ee",
            125: "ade1750d",
            155: "4e8c56d7",
            177: "72737267",
            191: "4a259f58",
            210: "be31bdc7",
            240: "a7a4ad6a",
            245: "41dc3c4a",
            284: "9dc1bf30",
            292: "2498016b",
            365: "da8c9ae4",
            367: "a2abf1a3",
            379: "085ae6dd",
            435: "c29b7985",
            442: "af70ec56",
            487: "747603cf",
            511: "e86d667a",
            525: "f0174c67",
            560: "ebcace4e",
            563: "ed068f02",
            614: "08797b6e",
            617: "1d6dc6fe",
            631: "559c8a5e",
            732: "82cfe702",
            790: "9e824d9f",
            804: "057cec79",
            813: "d7023cc9",
            840: "bca4c919",
            991: "9f25d971"
        }[e] + ".js"
    }
    ,
    __webpack_require__.miniCssF = function(e) {
        return 216 === e ? "analysis-vendors.client.bd38930b.css" : 237 === e ? "analysis.client.4aa8f6a9.css" : 435 === e ? "analysis-guest-modal.chunk.client.a6000603.css" : 65 === e ? "analysis-openings-modal-controller.chunk.client.200eeb02.css" : 813 === e ? "analysis-web.chunk.client.e6b783bc.css" : 292 === e ? "analysis-charts-controller.chunk.client.89e923ad.css" : 191 === e ? "analysis-settings-controller.chunk.client.5fb14b4f.css" : 614 === e ? "analysis-gift-membership-modal.chunk.client.e6f55884.css" : 210 === e ? "analysis-user-report-modal.chunk.client.de994533.css" : 284 === e ? "analysis-trophy-popover.chunk.client.7584aec6.css" : 991 === e ? "analysis-analysis-tab.chunk.client.49774e8f.css" : 487 === e ? "analysis-details-tab.chunk.client.3a329ffb.css" : 617 === e ? "analysis-openings-tab.chunk.client.00221760.css" : 177 === e ? "analysis-review-tab.chunk.client.adfd48d0.css" : 563 === e ? "analysis-tablebase-tab.chunk.client.5c7d97b2.css" : 51 === e ? "analysis-web.chunk.client.01160125.css" : 245 === e ? "analysis-web.chunk.client.012b1881.css" : 112 === e ? "analysis-web.chunk.client.f974cd80.css" : 240 === e ? "analysis-modal-upgrade-game-review.chunk.client.ba2af082.css" : 379 === e ? "analysis-payment-method-paypal.chunk.client.1a5f8dff.css" : 365 === e ? "analysis-analysis-tab-analysis-controller.chunk.client.6f2aec80.css" : 125 === e ? "analysis-analysis-tab-setup-controller.chunk.client.22324261.css" : void 0
    }
    ,
    __webpack_require__.g = function() {
        if ("object" == typeof globalThis)
            return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window)
                return window
        }
    }(),
    __webpack_require__.hmd = function(e) {
        return (e = Object.create(e)).children || (e.children = []),
        Object.defineProperty(e, "exports", {
            enumerable: !0,
            set: function() {
                throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + e.id)
            }
        }),
        e
    }
    ,
    __webpack_require__.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    s = {},
    n = "client:",
    __webpack_require__.l = function(e, t, a, o) {
        if (s[e])
            s[e].push(t);
        else {
            var r, i;
            if (void 0 !== a)
                for (var l = document.getElementsByTagName("script"), c = 0; c < l.length; c++) {
                    var u = l[c];
                    if (u.getAttribute("src") == e || u.getAttribute("data-webpack") == n + a) {
                        r = u;
                        break
                    }
                }
            r || (i = !0,
            (r = document.createElement("script")).charset = "utf-8",
            r.timeout = 120,
            __webpack_require__.nc && r.setAttribute("nonce", __webpack_require__.nc),
            r.setAttribute("data-webpack", n + a),
            r.src = e),
            s[e] = [t];
            var onScriptComplete = function(t, a) {
                r.onerror = r.onload = null,
                clearTimeout(d);
                var n = s[e];
                if (delete s[e],
                r.parentNode && r.parentNode.removeChild(r),
                n && n.forEach((function(e) {
                    return e(a)
                }
                )),
                t)
                    return t(a)
            }
              , d = setTimeout(onScriptComplete.bind(null, void 0, {
                type: "timeout",
                target: r
            }), 12e4);
            r.onerror = onScriptComplete.bind(null, r.onerror),
            r.onload = onScriptComplete.bind(null, r.onload),
            i && document.head.appendChild(r)
        }
    }
    ,
    __webpack_require__.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    __webpack_require__.p = "/bundles/app/js/",
    o = __webpack_require__.u,
    r = __webpack_require__.e,
    i = new Map,
    l = new Map,
    __webpack_require__.u = function(e) {
        return o(e) + (i.has(e) ? "?" + i.get(e) : "")
    }
    ,
    __webpack_require__.e = function(e) {
        return r(e).catch((function(t) {
            var a = l.has(e) ? l.get(e) : 2;
            if (a < 1) {
                var s = o(e);
                throw t.message = "Loading chunk " + e + " failed after 2 retries.\n(" + s + ")",
                t.request = s,
                t
            }
            return new Promise((function(t) {
                setTimeout((function() {
                    var s = "cache-bust=true&retry-attempt=" + (2 - a + 1);
                    i.set(e, s),
                    l.set(e, a - 1),
                    t(__webpack_require__.e(e))
                }
                ), 0)
            }
            ))
        }
        ))
    }
    ,
    c = function(e) {
        return new Promise((function(t, a) {
            var s = __webpack_require__.miniCssF(e)
              , n = window.__CHESSCOM_RTL__
              , o = "/bundles/app/css/" + s;
            if (function(e, t) {
                for (var a = document.getElementsByTagName("link"), s = 0; s < a.length; s++) {
                    var n = (r = a[s]).getAttribute("data-href") || r.getAttribute("href");
                    if ("stylesheet" === r.rel && (n === e || n === t))
                        return r
                }
                var o = document.getElementsByTagName("style");
                for (s = 0; s < o.length; s++) {
                    var r;
                    if ((n = (r = o[s]).getAttribute("data-href")) === e || n === t)
                        return r
                }
            }(s, o))
                return t();
            n && (o = o.replace(/\.css/i, ".rtl.css")),
            function(e, t, a, s) {
                var n = document.createElement("link");
                n.rel = "stylesheet",
                n.type = "text/css",
                n.onerror = n.onload = function(o) {
                    if (n.onerror = n.onload = null,
                    "load" === o.type)
                        a();
                    else {
                        var r = o && ("load" === o.type ? "missing" : o.type)
                          , i = o && o.target && o.target.href || t
                          , l = new Error("Loading CSS chunk " + e + " failed.\n(" + i + ")");
                        l.code = "CSS_CHUNK_LOAD_FAILED",
                        l.type = r,
                        l.request = i,
                        n.parentNode.removeChild(n),
                        s(l)
                    }
                }
                ,
                n.href = t,
                document.head.appendChild(n)
            }(e, o, t, a)
        }
        ))
    }
    ,
    u = {
        237: 0
    },
    __webpack_require__.f.miniCss = function(e, t) {
        u[e] ? t.push(u[e]) : 0 !== u[e] && {
            51: 1,
            65: 1,
            112: 1,
            125: 1,
            177: 1,
            191: 1,
            210: 1,
            240: 1,
            245: 1,
            284: 1,
            292: 1,
            365: 1,
            379: 1,
            435: 1,
            487: 1,
            563: 1,
            614: 1,
            617: 1,
            813: 1,
            991: 1
        }[e] && t.push(u[e] = c(e).then((function() {
            u[e] = 0
        }
        ), (function(t) {
            throw delete u[e],
            t
        }
        )))
    }
    ,
    function() {
        var e = {
            237: 0
        };
        __webpack_require__.f.j = function(t, a) {
            var s = __webpack_require__.o(e, t) ? e[t] : void 0;
            if (0 !== s)
                if (s)
                    a.push(s[2]);
                else {
                    var n = new Promise((function(a, n) {
                        s = e[t] = [a, n]
                    }
                    ));
                    a.push(s[2] = n);
                    var o = __webpack_require__.p + __webpack_require__.u(t)
                      , r = new Error;
                    __webpack_require__.l(o, (function(a) {
                        if (__webpack_require__.o(e, t) && (0 !== (s = e[t]) && (e[t] = void 0),
                        s)) {
                            var n = a && ("load" === a.type ? "missing" : a.type)
                              , o = a && a.target && a.target.src;
                            r.message = "Loading chunk " + t + " failed.\n(" + n + ": " + o + ")",
                            r.name = "ChunkLoadError",
                            r.type = n,
                            r.request = o,
                            s[1](r)
                        }
                    }
                    ), "chunk-" + t, t)
                }
        }
        ,
        __webpack_require__.O.j = function(t) {
            return 0 === e[t]
        }
        ;
        var webpackJsonpCallback = function(t, a) {
            var s, n, o = a[0], r = a[1], i = a[2], l = 0;
            if (o.some((function(t) {
                return 0 !== e[t]
            }
            ))) {
                for (s in r)
                    __webpack_require__.o(r, s) && (__webpack_require__.m[s] = r[s]);
                if (i)
                    var c = i(__webpack_require__)
            }
            for (t && t(a); l < o.length; l++)
                n = o[l],
                __webpack_require__.o(e, n) && e[n] && e[n][0](),
                e[n] = 0;
            return __webpack_require__.O(c)
        }
          , t = ("undefined" != typeof self ? self : this).wpJsonpChessCom_analysis = ("undefined" != typeof self ? self : this).wpJsonpChessCom_analysis || [];
        t.forEach(webpackJsonpCallback.bind(null, 0)),
        t.push = webpackJsonpCallback.bind(null, t.push.bind(t))
    }(),
    __webpack_require__.O(void 0, [216], (function() {
        return __webpack_require__(57516)
    }
    )),
    __webpack_require__.O(void 0, [216], (function() {
        return __webpack_require__(45728)
    }
    ));
    var p = __webpack_require__.O(void 0, [216], (function() {
        return __webpack_require__(995)
    }
    ));
    p = __webpack_require__.O(p)
}();
